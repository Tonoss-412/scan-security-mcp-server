{
    "tools": [
        {
            "name": "handle_list_resources",
            "description": "List all notes as resources",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\apple_notes_mcp\\server.py",
            "decorator": [
                "server.list_resources"
            ]
        },
        {
            "name": "handle_read_resource",
            "description": "\n    Read a specific note's content\n    Mostly from reading https://ciofecaforensics.com/2020/09/18/apple-notes-revisited-protobuf/\n    and I found a gist https://gist.github.com/paultopia/b8a0400cd8406ff85969b722d3a2ebd8\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\apple_notes_mcp\\server.py",
            "decorator": [
                "server.read_resource"
            ]
        },
        {
            "name": "handle_list_prompts",
            "description": "\n    List available prompts.\n    Each prompt can have optional arguments to customize its behavior.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\apple_notes_mcp\\server.py",
            "decorator": [
                "server.list_prompts"
            ]
        },
        {
            "name": "handle_list_tools",
            "description": "\n    List available tools.\n    Each tool specifies its arguments using JSON Schema validation.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\apple_notes_mcp\\server.py",
            "decorator": [
                "server.list_tools"
            ]
        },
        {
            "name": "handle_call_tool",
            "description": "\n    Handle tool execution requests.\n    Tools can modify server state and notify clients of changes.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\apple_notes_mcp\\server.py",
            "decorator": [
                "server.call_tool"
            ]
        },
        {
            "name": "handle_get_prompt",
            "description": "Generate a prompt for finding notes",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\apple_notes_mcp\\server.py",
            "decorator": [
                "server.get_prompt"
            ]
        }
    ]
}