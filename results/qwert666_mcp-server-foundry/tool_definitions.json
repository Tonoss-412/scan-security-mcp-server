{
    "tools": [
        {
            "name": "app_lifespan",
            "description": "Manage application lifecycle with type-safe context",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\mcp_server_foundry\\server.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "list_ontology_types",
            "description": " List all the ontology types ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\mcp_server_foundry\\server.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "query_ontology_type",
            "description": " Query for objects in a given ontology type.\n        Use list_ontology_types to get the list of available types\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\mcp_server_foundry\\server.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "query_dataset",
            "description": " Query a dataset using Spark SQL dialect e.g. \"SELECT COUNT(*) FROM `dataset_rid`\" ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\mcp_server_foundry\\server.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "list_functions",
            "description": " List all available functions",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\mcp_server_foundry\\server.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "execute_function",
            "description": " Execute a function using given parameters ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\mcp_server_foundry\\server.py",
            "decorator": [
                "mcp.tool"
            ]
        }
    ]
}