{
    "tools": [
        {
            "name": "fetch_news",
            "description": "\n    Retrieves news articles.\n\n    Args:\n        query: Keywords or phrases to search for\n        from_date: Optional start date (YYYY-MM-DD)\n        to_date: Optional end date (YYYY-MM-DD)\n        language: Language code (default: en)\n        sort_by: Sort order (default: publishedAt, popularity, relevancy)\n        page_size: Number of results per page (default: 10, max: 100)\n        page: Page number for pagination (default: 1)\n        ctx: MCP Context\n\n    Returns:\n        News Articles\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "Keywords or phrases to search for"
                    },
                    "from_date": {
                        "type": "string",
                        "description": "Optional start date (YYYY-MM-DD)"
                    },
                    "to_date": {
                        "type": "string",
                        "description": "Optional end date (YYYY-MM-DD)"
                    },
                    "language": {
                        "type": "string",
                        "description": "Language code (default: en)"
                    },
                    "sort_by": {
                        "type": "string",
                        "description": "Sort order (default: publishedAt, popularity, relevancy)"
                    },
                    "page_size": {
                        "type": "string",
                        "description": "Number of results per page (default: 10, max: 100)"
                    },
                    "page": {
                        "type": "string",
                        "description": "Page number for pagination (default: 1)"
                    },
                    "ctx": {
                        "type": "string",
                        "description": "MCP Context"
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "query",
                    "from_date",
                    "to_date",
                    "language",
                    "sort_by",
                    "page_size",
                    "page",
                    "ctx",
                    "Returns"
                ]
            },
            "file": "src\\server.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "fetch_headlines",
            "description": "\n    Retrieves headlines news.\n\n    Args:\n        category: Optional category (e.g., business, entertainment, health, science, sports, technology)\n        query: Optional keywords or phrases to search for\n        country: Country code (default: us)\n        page_size: Number of results per page (default: 10, max: 100)\n        page: Page number for pagination (default: 1)\n        ctx: MCP Context\n\n    Returns:\n        Top Headlines\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "Optional category (e.g., business, entertainment, health, science, sports, technology)"
                    },
                    "query": {
                        "type": "string",
                        "description": "Optional keywords or phrases to search for"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country code (default: us)"
                    },
                    "page_size": {
                        "type": "string",
                        "description": "Number of results per page (default: 10, max: 100)"
                    },
                    "page": {
                        "type": "string",
                        "description": "Page number for pagination (default: 1)"
                    },
                    "ctx": {
                        "type": "string",
                        "description": "MCP Context"
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "category",
                    "query",
                    "country",
                    "page_size",
                    "page",
                    "ctx",
                    "Returns"
                ]
            },
            "file": "src\\server.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "news_api_connector",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "tests\\newsapi\\test_connector.py",
            "decorator": [
                "pytest_asyncio.fixture"
            ]
        },
        {
            "name": "test_search_everything",
            "description": "Test search_everything method with a real API call.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "news_api_connector": {
                        "type": "string"
                    }
                },
                "required": [
                    "news_api_connector"
                ]
            },
            "file": "tests\\newsapi\\test_connector.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        },
        {
            "name": "test_search_everything_with_specific_query",
            "description": "Test searching for articles about a specific topic.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "news_api_connector": {
                        "type": "string"
                    }
                },
                "required": [
                    "news_api_connector"
                ]
            },
            "file": "tests\\newsapi\\test_connector.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        },
        {
            "name": "test_get_top_headlines",
            "description": "Test get_top_headlines method with a real API call.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "news_api_connector": {
                        "type": "string"
                    }
                },
                "required": [
                    "news_api_connector"
                ]
            },
            "file": "tests\\newsapi\\test_connector.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        },
        {
            "name": "test_error_handling_with_invalid_parameters",
            "description": "Test that the connector handles invalid parameters correctly.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "news_api_connector": {
                        "type": "string"
                    }
                },
                "required": [
                    "news_api_connector"
                ]
            },
            "file": "tests\\newsapi\\test_connector.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        }
    ]
}