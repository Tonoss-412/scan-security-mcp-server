{
    "tools": [
        {
            "name": "health_check",
            "description": "Health check endpoint for the MCP server",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\main.py",
            "decorator": [
                "app.get"
            ]
        },
        {
            "name": "analyze_requirements",
            "description": "\n    Analyze user requirements from chatbot conversation and recommend OCI resources\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\api\\router.py",
            "decorator": [
                "router.post"
            ]
        },
        {
            "name": "provision_resources",
            "description": "\n    Provision OCI resources based on confirmed recommendations\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\api\\router.py",
            "decorator": [
                "router.post"
            ]
        },
        {
            "name": "get_resource_types",
            "description": "\n    Get available OCI resource types that can be provisioned\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\api\\router.py",
            "decorator": [
                "router.get"
            ]
        },
        {
            "name": "get_compute_shapes",
            "description": "\n    Get available OCI compute shapes\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\api\\router.py",
            "decorator": [
                "router.get"
            ]
        },
        {
            "name": "get_provisioning_status",
            "description": "\n    Get the status of a provisioning request\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\api\\router.py",
            "decorator": [
                "router.get"
            ]
        }
    ]
}