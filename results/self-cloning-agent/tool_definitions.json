{
    "tools": [
        {
            "name": "from_embedding",
            "description": "Create a DNASequence from a numerical vector (embedding).",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "vector": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "vector"
                ]
            },
            "file": "dna_sequence.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "load_from_file",
            "description": "Load a DNA sequence from a file.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "file_path"
                ]
            },
            "file": "dna_sequence.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_embedding",
            "description": "Create a DNASequence from a numerical vector (embedding).",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "vector": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "vector"
                ]
            },
            "file": "src\\utils\\dna_sequence.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "load_from_file",
            "description": "Load a DNA sequence from a file.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "file_path"
                ]
            },
            "file": "src\\utils\\dna_sequence.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_documents",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "documents": {
                        "type": "string"
                    },
                    "embedding": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "documents",
                    "embedding"
                ]
            },
            "file": "tests\\conftest.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "load_local",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "folder_path": {
                        "type": "string"
                    },
                    "embeddings": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "folder_path",
                    "embeddings"
                ]
            },
            "file": "tests\\conftest.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_embedding",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "embedding": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "embedding"
                ]
            },
            "file": "tests\\conftest.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "load_from_file",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "file_path"
                ]
            },
            "file": "tests\\conftest.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "patch_dependencies",
            "description": "Patch dependencies globally.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "monkeypatch": {
                        "type": "string"
                    }
                },
                "required": [
                    "monkeypatch"
                ]
            },
            "file": "tests\\conftest.py",
            "decorator": [
                "pytest.fixture"
            ]
        },
        {
            "name": "mock_aiohttp_session",
            "description": "Mock aiohttp.ClientSession for tests.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "tests\\conftest.py",
            "decorator": [
                "pytest.fixture"
            ]
        },
        {
            "name": "closed",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "tests\\conftest.py",
            "decorator": [
                "property"
            ]
        }
    ]
}