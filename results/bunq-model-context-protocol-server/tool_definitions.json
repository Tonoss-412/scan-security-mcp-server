{
    "tools": [
        {
            "name": "__getitem__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "params": {
                        "type": "string"
                    }
                },
                "required": [
                    "params"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "typing._tp_cache"
            ]
        },
        {
            "name": "_proto_hook",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "other": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "other"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__int__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__float__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__complex__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__bytes__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__index__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__abs__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__round__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "TypedDict",
            "description": "A simple typed namespace. At runtime it is equivalent to a plain dict.\n\n        TypedDict creates a dictionary type such that a type checker will expect all\n        instances to have a certain set of keys, where each key is\n        associated with a value of a consistent type. This expectation\n        is not checked at runtime.\n\n        Usage::\n\n            class Point2D(TypedDict):\n                x: int\n                y: int\n                label: str\n\n            a: Point2D = {'x': 1, 'y': 2, 'label': 'good'}  # OK\n            b: Point2D = {'z': 3, 'label': 'bad'}           # Fails type check\n\n            assert Point2D(x=1, y=2, label='first') == dict(x=1, y=2, label='first')\n\n        The type info can be accessed via the Point2D.__annotations__ dict, and\n        the Point2D.__required_keys__ and Point2D.__optional_keys__ frozensets.\n        TypedDict supports an additional equivalent form::\n\n            Point2D = TypedDict('Point2D', {'x': int, 'y': int, 'label': str})\n\n        By default, all keys must be present in a TypedDict. It is possible\n        to override this by specifying totality::\n\n            class Point2D(TypedDict, total=False):\n                x: int\n                y: int\n\n        This means that a Point2D TypedDict can have any of the keys omitted. A type\n        checker is only expected to support a literal False or True as the value of\n        the total argument. True is the default, and makes all items defined in the\n        class body be required.\n\n        The Required and NotRequired special forms can also be used to mark\n        individual keys as being required or not required::\n\n            class Point2D(TypedDict):\n                x: int  # the \"x\" key must always be present (Required is the default)\n                y: NotRequired[int]  # the \"y\" key can be omitted\n\n        See PEP 655 for more details on Required and NotRequired.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "typename": {
                        "type": "string"
                    }
                },
                "required": [
                    "typename"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_ensure_subclassable"
            ]
        },
        {
            "name": "__class_getitem__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "params": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "params"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "typing._tp_cache"
            ]
        },
        {
            "name": "TypeAlias",
            "description": "Special marker indicating that an assignment should\n        be recognized as a proper type alias definition by type\n        checkers.\n\n        For example::\n\n            Predicate: TypeAlias = Callable[..., bool]\n\n        It's invalid when used anywhere except as in the example above.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_ExtensionsSpecialForm"
            ]
        },
        {
            "name": "args",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "kwargs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__parameters__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_concatenate_getitem",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "typing._tp_cache"
            ]
        },
        {
            "name": "Concatenate",
            "description": "Used in conjunction with ``ParamSpec`` and ``Callable`` to represent a\n        higher order function which adds, removes or transforms parameters of a\n        callable.\n\n        For example::\n\n           Callable[Concatenate[int, P], int]\n\n        See PEP 612 for detailed information.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_ExtensionsSpecialForm"
            ]
        },
        {
            "name": "TypeGuard",
            "description": "Special typing form used to annotate the return type of a user-defined\n        type guard function.  ``TypeGuard`` only accepts a single type argument.\n        At runtime, functions marked this way should return a boolean.\n\n        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static\n        type checkers to determine a more precise type of an expression within a\n        program's code flow.  Usually type narrowing is done by analyzing\n        conditional code flow and applying the narrowing to a block of code.  The\n        conditional expression here is sometimes referred to as a \"type guard\".\n\n        Sometimes it would be convenient to use a user-defined boolean function\n        as a type guard.  Such a function should use ``TypeGuard[...]`` as its\n        return type to alert static type checkers to this intention.\n\n        Using  ``-> TypeGuard`` tells the static type checker that for a given\n        function:\n\n        1. The return value is a boolean.\n        2. If the return value is ``True``, the type of its argument\n        is the type inside ``TypeGuard``.\n\n        For example::\n\n            def is_str(val: Union[str, float]):\n                # \"isinstance\" type guard\n                if isinstance(val, str):\n                    # Type of ``val`` is narrowed to ``str``\n                    ...\n                else:\n                    # Else, type of ``val`` is narrowed to ``float``.\n                    ...\n\n        Strict type narrowing is not enforced -- ``TypeB`` need not be a narrower\n        form of ``TypeA`` (it can even be a wider form) and this may lead to\n        type-unsafe results.  The main reason is to allow for things like\n        narrowing ``List[object]`` to ``List[str]`` even though the latter is not\n        a subtype of the former, since ``List`` is invariant.  The responsibility of\n        writing type-safe type guards is left to the user.\n\n        ``TypeGuard`` also works with type variables.  For more information, see\n        PEP 647 (User-Defined Type Guards).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_ExtensionsSpecialForm"
            ]
        },
        {
            "name": "TypeIs",
            "description": "Special typing form used to annotate the return type of a user-defined\n        type narrower function.  ``TypeIs`` only accepts a single type argument.\n        At runtime, functions marked this way should return a boolean.\n\n        ``TypeIs`` aims to benefit *type narrowing* -- a technique used by static\n        type checkers to determine a more precise type of an expression within a\n        program's code flow.  Usually type narrowing is done by analyzing\n        conditional code flow and applying the narrowing to a block of code.  The\n        conditional expression here is sometimes referred to as a \"type guard\".\n\n        Sometimes it would be convenient to use a user-defined boolean function\n        as a type guard.  Such a function should use ``TypeIs[...]`` as its\n        return type to alert static type checkers to this intention.\n\n        Using  ``-> TypeIs`` tells the static type checker that for a given\n        function:\n\n        1. The return value is a boolean.\n        2. If the return value is ``True``, the type of its argument\n        is the intersection of the type inside ``TypeIs`` and the argument's\n        previously known type.\n\n        For example::\n\n            def is_awaitable(val: object) -> TypeIs[Awaitable[Any]]:\n                return hasattr(val, '__await__')\n\n            def f(val: Union[int, Awaitable[int]]) -> int:\n                if is_awaitable(val):\n                    assert_type(val, Awaitable[int])\n                else:\n                    assert_type(val, int)\n\n        ``TypeIs`` also works with type variables.  For more information, see\n        PEP 742 (Narrowing types with TypeIs).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_ExtensionsSpecialForm"
            ]
        },
        {
            "name": "TypeForm",
            "description": "A special form representing the value that results from the evaluation\n        of a type expression. This value encodes the information supplied in the\n        type expression, and it represents the type described by that type expression.\n\n        When used in a type expression, TypeForm describes a set of type form objects.\n        It accepts a single type argument, which must be a valid type expression.\n        ``TypeForm[T]`` describes the set of all type form objects that represent\n        the type T or types that are assignable to T.\n\n        Usage:\n\n            def cast[T](typ: TypeForm[T], value: Any) -> T: ...\n\n            reveal_type(cast(int, \"x\"))  # int\n\n        See PEP 747 for more information.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_TypeFormForm"
            ]
        },
        {
            "name": "__getitem__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "typing._tp_cache"
            ]
        },
        {
            "name": "LiteralString",
            "description": "Represents an arbitrary literal string.\n\n        Example::\n\n          from typing_extensions import LiteralString\n\n          def query(sql: LiteralString) -> ...:\n              ...\n\n          query(\"SELECT * FROM table\")  # ok\n          query(f\"SELECT * FROM {input()}\")  # not ok\n\n        See PEP 675 for details.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "params": {
                        "type": "string"
                    }
                },
                "required": [
                    "params"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_SpecialForm"
            ]
        },
        {
            "name": "Self",
            "description": "Used to spell the type of \"self\" in classes.\n\n        Example::\n\n          from typing import Self\n\n          class ReturnsSelf:\n              def parse(self, data: bytes) -> Self:\n                  ...\n                  return self\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "params": {
                        "type": "string"
                    }
                },
                "required": [
                    "params"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_SpecialForm"
            ]
        },
        {
            "name": "Never",
            "description": "The bottom type, a type that has no members.\n\n        This can be used to define a function that should never be\n        called, or a function that never returns::\n\n            from typing_extensions import Never\n\n            def never_call_me(arg: Never) -> None:\n                pass\n\n            def int_or_str(arg: int | str) -> None:\n                never_call_me(arg)  # type checker error\n                match arg:\n                    case int():\n                        print(\"It's an int\")\n                    case str():\n                        print(\"It's a str\")\n                    case _:\n                        never_call_me(arg)  # ok, arg is of type Never\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "params": {
                        "type": "string"
                    }
                },
                "required": [
                    "params"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_SpecialForm"
            ]
        },
        {
            "name": "Required",
            "description": "A special typing construct to mark a key of a total=False TypedDict\n        as required. For example:\n\n            class Movie(TypedDict, total=False):\n                title: Required[str]\n                year: int\n\n            m = Movie(\n                title='The Matrix',  # typechecker error if key is omitted\n                year=1999,\n            )\n\n        There is no runtime checking that a required key is actually provided\n        when instantiating a related TypedDict.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_ExtensionsSpecialForm"
            ]
        },
        {
            "name": "NotRequired",
            "description": "A special typing construct to mark a key of a TypedDict as\n        potentially missing. For example:\n\n            class Movie(TypedDict):\n                title: str\n                year: NotRequired[int]\n\n            m = Movie(\n                title='The Matrix',  # typechecker error if key is omitted\n                year=1999,\n            )\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_ExtensionsSpecialForm"
            ]
        },
        {
            "name": "ReadOnly",
            "description": "A special typing construct to mark an item of a TypedDict as read-only.\n\n        For example:\n\n            class Movie(TypedDict):\n                title: ReadOnly[str]\n                year: int\n\n            def mutate_movie(m: Movie) -> None:\n                m[\"year\"] = 1992  # allowed\n                m[\"title\"] = \"The Matrix\"  # typechecker error\n\n        There is no runtime checking for this property.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_ExtensionsSpecialForm"
            ]
        },
        {
            "name": "__typing_unpacked_tuple_args__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__typing_is_unpacked_typevartuple__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "Unpack",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_UnpackSpecialForm"
            ]
        },
        {
            "name": "__typing_unpacked_tuple_args__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__typing_is_unpacked_typevartuple__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__new__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "__init_subclass__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "__init_subclass__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "NamedTuple",
            "description": "Typed version of namedtuple.\n\n        Usage::\n\n            class Employee(NamedTuple):\n                name: str\n                id: int\n\n        This is equivalent to::\n\n            Employee = collections.namedtuple('Employee', ['name', 'id'])\n\n        The resulting class has an extra __annotations__ attribute, giving a\n        dict that maps field names to types.  (The field names are also in\n        the _fields attribute, which is part of the namedtuple API.)\n        An alternative equivalent functional syntax is also accepted::\n\n            Employee = NamedTuple('Employee', [('name', str), ('id', int)])\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "typename": {
                        "type": "string"
                    }
                },
                "required": [
                    "typename"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_extensions.py",
            "decorator": [
                "_ensure_subclassable"
            ]
        },
        {
            "name": "surface_gravity",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\test_v3.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "shade",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\test_v3.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cap_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\test_v3.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "red",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\test_v3.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cap_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\test_v3.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cap_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\test_v3.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cap_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\test_v3.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cap_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\test_v3.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_missing_",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "item": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "item"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\test_v3.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__name__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\test_v3.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__init_subclass__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__prepare__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "metacls": {
                        "type": "string"
                    },
                    "cls": {
                        "type": "string"
                    },
                    "bases": {
                        "type": "string"
                    }
                },
                "required": [
                    "metacls",
                    "cls",
                    "bases"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_convert_fields",
            "description": "create list of index, doc, default triplets for cls in namedtuples",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "__fields__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__aliases__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__aliases__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__fields__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "args",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "kwds",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "value.setter"
            ]
        },
        {
            "name": "__prepare__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "metacls": {
                        "type": "string"
                    },
                    "cls": {
                        "type": "string"
                    },
                    "bases": {
                        "type": "string"
                    }
                },
                "required": [
                    "metacls",
                    "cls",
                    "bases"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__members__",
            "description": "Returns a mapping of member name->value.\n\n        This mapping lists all enum members, including aliases. Note that this\n        is a copy of the internal mapping.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_get_mixins_",
            "description": "Returns the type for creating enum members, and the first inherited\n        enum class.\n\n        bases: the tuple of bases that was given to __new__\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "bases": {
                        "type": "string"
                    }
                },
                "required": [
                    "bases"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_find_new_",
            "description": "Returns the __new__ to be used for creating the enum members.\n\n            clsdict: the class dictionary given to __new__\n            member_type: the data type whose __new__ will be used by default\n            first_enum: enumeration to check for an overriding __new__\n            ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "clsdict": {
                        "type": "string"
                    },
                    "member_type": {
                        "type": "string"
                    },
                    "first_enum": {
                        "type": "string"
                    }
                },
                "required": [
                    "clsdict",
                    "member_type",
                    "first_enum"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_find_new_",
            "description": "Returns the __new__ to be used for creating the enum members.\n\n            clsdict: the class dictionary given to __new__\n            member_type: the data type whose __new__ will be used by default\n            first_enum: enumeration to check for an overriding __new__\n            ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "clsdict": {
                        "type": "string"
                    },
                    "member_type": {
                        "type": "string"
                    },
                    "first_enum": {
                        "type": "string"
                    }
                },
                "required": [
                    "clsdict",
                    "member_type",
                    "first_enum"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_generate_next_value_",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "start": {
                        "type": "string"
                    },
                    "count": {
                        "type": "string"
                    },
                    "last_values": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "start",
                    "count",
                    "last_values"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_missing_",
            "description": "deprecated, use _missing_value_ instead",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_missing_value_",
            "description": "used for failed value access",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_missing_name_",
            "description": "used for failed item access",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "name"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "enum_property"
            ]
        },
        {
            "name": "value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "enum_property"
            ]
        },
        {
            "name": "values",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "enum_property"
            ]
        },
        {
            "name": "_missing_",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_create_pseudo_member_",
            "description": "\n        Create a composite member iff value contains only members.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_create_pseudo_member_values_",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "members": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "members"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_missing_",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_create_pseudo_member_",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\aenum\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__is_annotated_types_grouped_metadata__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\annotated_types\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "call",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\from_thread.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "call",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\from_thread.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "start_task_soon",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\from_thread.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "start_task_soon",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\from_thread.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "start_blocking_portal",
            "description": "\n    Start a new event loop in a new thread and run a blocking portal in its main task.\n\n    The parameters are the same as for :func:`~anyio.run`.\n\n    :param backend: name of the backend\n    :param backend_options: backend options\n    :return: a context manager that yields a blocking portal\n\n    .. versionchanged:: 3.0\n        Usage as a context manager is now required.\n\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\from_thread.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "_current_vars",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\lowlevel.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "get",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\lowlevel.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "get",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\lowlevel.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "get_runner",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\pytest_plugin.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "pytest_fixture_setup",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\pytest_plugin.py",
            "decorator": [
                "pytest.hookimpl"
            ]
        },
        {
            "name": "pytest_pycollect_makeitem",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\pytest_plugin.py",
            "decorator": [
                "pytest.hookimpl"
            ]
        },
        {
            "name": "pytest_pyfunc_call",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\pytest_plugin.py",
            "decorator": [
                "pytest.hookimpl"
            ]
        },
        {
            "name": "anyio_backend",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\pytest_plugin.py",
            "decorator": [
                "pytest.fixture"
            ]
        },
        {
            "name": "anyio_backend_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\pytest_plugin.py",
            "decorator": [
                "pytest.fixture"
            ]
        },
        {
            "name": "anyio_backend_options",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\pytest_plugin.py",
            "decorator": [
                "pytest.fixture"
            ]
        },
        {
            "name": "kind",
            "description": "\n        The type of socket connection (e.g., :data:`~socket.SOCK_STREAM` or\n        :data:`~socket.SOCK_DGRAM`) used to bind for checking port availability\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\pytest_plugin.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "free_tcp_port_factory",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\pytest_plugin.py",
            "decorator": [
                "pytest.fixture"
            ]
        },
        {
            "name": "free_udp_port_factory",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\pytest_plugin.py",
            "decorator": [
                "pytest.fixture"
            ]
        },
        {
            "name": "free_tcp_port",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\pytest_plugin.py",
            "decorator": [
                "pytest.fixture"
            ]
        },
        {
            "name": "free_udp_port",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\pytest_plugin.py",
            "decorator": [
                "pytest.fixture"
            ]
        },
        {
            "name": "run",
            "description": "\n        Run the given coroutine function in an asynchronous event loop.\n\n        The current thread must not be already running an event loop.\n\n        :param func: a coroutine function\n        :param args: positional arguments to ``func``\n        :param kwargs: positional arguments to ``func``\n        :param options: keyword arguments to call the backend ``run()`` implementation\n            with\n        :return: the return value of the coroutine function\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "current_token",
            "description": "\n\n        :return:\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "current_time",
            "description": "\n        Return the current value of the event loop's internal clock.\n\n        :return: the clock value (seconds)\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "cancelled_exception_class",
            "description": "Return the exception class that is raised in a task if it's cancelled.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "checkpoint",
            "description": "\n        Check if the task has been cancelled, and allow rescheduling of other tasks.\n\n        This is effectively the same as running :meth:`checkpoint_if_cancelled` and then\n        :meth:`cancel_shielded_checkpoint`.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "checkpoint_if_cancelled",
            "description": "\n        Check if the current task group has been cancelled.\n\n        This will check if the task has been cancelled, but will not allow other tasks\n        to be scheduled if not.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "cancel_shielded_checkpoint",
            "description": "\n        Allow the rescheduling of other tasks.\n\n        This will give other tasks the opportunity to run, but without checking if the\n        current task group has been cancelled, unlike with :meth:`checkpoint`.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "sleep",
            "description": "\n        Pause the current task for the specified duration.\n\n        :param delay: the duration, in seconds\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "create_cancel_scope",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "current_effective_deadline",
            "description": "\n        Return the nearest deadline among all the cancel scopes effective for the\n        current task.\n\n        :return:\n            - a clock value from the event loop's internal clock\n            - ``inf`` if there is no deadline in effect\n            - ``-inf`` if the current scope has been cancelled\n        :rtype: float\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "create_task_group",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "create_event",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "create_lock",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "create_semaphore",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "create_capacity_limiter",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "run_sync_in_worker_thread",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "check_cancelled",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "run_async_from_thread",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "run_sync_from_thread",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "create_blocking_portal",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "open_process",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "setup_process_pool_exit_at_shutdown",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "connect_tcp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "connect_unix",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "create_tcp_listener",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "create_unix_listener",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "create_udp_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "create_unix_datagram_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "overload"
            ]
        },
        {
            "name": "create_unix_datagram_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "overload"
            ]
        },
        {
            "name": "create_unix_datagram_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "getaddrinfo",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "getnameinfo",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "wait_readable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "wait_writable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "current_default_thread_limiter",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "open_signal_receiver",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "get_current_task",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "get_running_tasks",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "wait_all_tasks_blocked",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "create_test_runner",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_eventloop.py",
            "decorator": [
                "classmethod",
                "abstractmethod"
            ]
        },
        {
            "name": "aclose",
            "description": "Close the resource.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_resources.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "extra_attributes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_sockets.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_raw_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_sockets.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "send_fds",
            "description": "\n        Send file descriptors along with a message to the peer.\n\n        :param message: a non-empty bytestring\n        :param fds: a collection of files (either numeric file descriptors or open file\n            or socket objects)\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_sockets.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "receive_fds",
            "description": "\n        Receive file descriptors along with a message from the peer.\n\n        :param msglen: length of the message to expect from the peer\n        :param maxfds: maximum number of file descriptors to expect from the peer\n        :return: a tuple of (message, file descriptors)\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_sockets.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "accept",
            "description": "Accept an incoming connection.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_sockets.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "receive",
            "description": "\n        Receive the next item.\n\n        :raises ~anyio.ClosedResourceError: if the receive stream has been explicitly\n            closed\n        :raises ~anyio.EndOfStream: if this stream has been closed from the other end\n        :raises ~anyio.BrokenResourceError: if this stream has been rendered unusable\n            due to external causes\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_streams.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "send",
            "description": "\n        Send an item to the peer(s).\n\n        :param item: the item to send\n        :raises ~anyio.ClosedResourceError: if the send stream has been explicitly\n            closed\n        :raises ~anyio.BrokenResourceError: if this stream has been rendered unusable\n            due to external causes\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_streams.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "send_eof",
            "description": "\n        Send an end-of-file indication to the peer.\n\n        You should not try to send any further data to this stream after calling this\n        method. This method is idempotent (does nothing on successive calls).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_streams.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "receive",
            "description": "\n        Receive at most ``max_bytes`` bytes from the peer.\n\n        .. note:: Implementers of this interface should not return an empty\n            :class:`bytes` object, and users should ignore them.\n\n        :param max_bytes: maximum number of bytes to receive\n        :return: the received bytes\n        :raises ~anyio.EndOfStream: if this stream has been closed from the other end\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_streams.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "send",
            "description": "\n        Send the given bytes to the peer.\n\n        :param item: the bytes to send\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_streams.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "send_eof",
            "description": "\n        Send an end-of-file indication to the peer.\n\n        You should not try to send any further data to this stream after calling this\n        method. This method is idempotent (does nothing on successive calls).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_streams.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "serve",
            "description": "\n        Accept incoming connections as they come in and start tasks to handle them.\n\n        :param handler: a callable that will be used to handle each accepted connection\n        :param task_group: the task group that will be used to start tasks for handling\n            each accepted connection (if omitted, an ad-hoc task group will be created)\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_streams.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "wait",
            "description": "\n        Wait until the process exits.\n\n        :return: the exit code of the process\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_subprocesses.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "terminate",
            "description": "\n        Terminates the process, gracefully if possible.\n\n        On Windows, this calls ``TerminateProcess()``.\n        On POSIX systems, this sends ``SIGTERM`` to the process.\n\n        .. seealso:: :meth:`subprocess.Popen.terminate`\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_subprocesses.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "kill",
            "description": "\n        Kills the process.\n\n        On Windows, this calls ``TerminateProcess()``.\n        On POSIX systems, this sends ``SIGKILL`` to the process.\n\n        .. seealso:: :meth:`subprocess.Popen.kill`\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_subprocesses.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "send_signal",
            "description": "\n        Send a signal to the subprocess.\n\n        .. seealso:: :meth:`subprocess.Popen.send_signal`\n\n        :param signal: the signal number (e.g. :data:`signal.SIGHUP`)\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_subprocesses.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "pid",
            "description": "The process ID of the process.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_subprocesses.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "returncode",
            "description": "\n        The return code of the process. If the process has not yet terminated, this will\n        be ``None``.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_subprocesses.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "stdin",
            "description": "The stream for the standard input of the process.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_subprocesses.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "stdout",
            "description": "The stream for the standard output of the process.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_subprocesses.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "stderr",
            "description": "The stream for the standard error output of the process.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_subprocesses.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "started",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_tasks.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "started",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_tasks.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "start_soon",
            "description": "\n        Start a new task in this task group.\n\n        :param func: a coroutine function\n        :param args: positional arguments to call the function with\n        :param name: name of the task, for the purposes of introspection and debugging\n\n        .. versionadded:: 3.0\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_tasks.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "start",
            "description": "\n        Start a new task and wait until it signals for readiness.\n\n        :param func: a coroutine function\n        :param args: positional arguments to call the function with\n        :param name: name of the task, for the purposes of introspection and debugging\n        :return: the value passed to ``task_status.started()``\n        :raises RuntimeError: if the task finishes without calling\n            ``task_status.started()``\n\n        .. versionadded:: 3.0\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_tasks.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "__aenter__",
            "description": "Enter the task group context and allow starting new tasks.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_tasks.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "__aexit__",
            "description": "Exit the task group context waiting for all tasks to finish.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_tasks.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "__exit__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_testing.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "run_asyncgen_fixture",
            "description": "\n        Run an async generator fixture.\n\n        :param fixture_func: the fixture function\n        :param kwargs: keyword arguments to call the fixture function with\n        :return: an iterator yielding the value yielded from the async generator\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_testing.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "run_fixture",
            "description": "\n        Run an async fixture.\n\n        :param fixture_func: the fixture function\n        :param kwargs: keyword arguments to call the fixture function with\n        :return: the return value of the fixture function\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_testing.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "run_test",
            "description": "\n        Run an async test function.\n\n        :param test_func: the test function\n        :param kwargs: keyword arguments to call the test function with\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\abc\\_testing.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "buffer",
            "description": "The bytes currently in the buffer.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\buffered.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "extra_attributes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\buffered.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "extra_attributes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\file.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_path",
            "description": "\n        Create a file read stream by opening the given file.\n\n        :param path: path of the file to read from\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\file.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_path",
            "description": "\n        Create a file write stream by opening the given file for writing.\n\n        :param path: path of the file to write to\n        :param append: if ``True``, open the file for appending; if ``False``, any\n            existing file at the given path will be truncated\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\file.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "extra_attributes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\stapled.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "extra_attributes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\stapled.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "extra_attributes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\stapled.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "extra_attributes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\text.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "extra_attributes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\text.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "extra_attributes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\text.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "wrap",
            "description": "\n        Wrap an existing stream with Transport Layer Security.\n\n        This performs a TLS handshake with the peer.\n\n        :param transport_stream: a bytes-transporting stream to wrap\n        :param server_side: ``True`` if this is the server side of the connection,\n            ``False`` if this is the client side (if omitted, will be set to ``False``\n            if ``hostname`` has been provided, ``False`` otherwise). Used only to create\n            a default context when an explicit context has not been provided.\n        :param hostname: host name of the peer (if host name checking is desired)\n        :param ssl_context: the SSLContext object to use (if not provided, a secure\n            default will be created)\n        :param standard_compatible: if ``False``, skip the closing handshake when\n            closing the connection, and don't raise an exception if the peer does the\n            same\n        :raises ~ssl.SSLError: if the TLS handshake fails\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\tls.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "extra_attributes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\tls.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "handle_handshake_error",
            "description": "\n        Handle an exception raised during the TLS handshake.\n\n        This method does 3 things:\n\n        #. Forcefully closes the original stream\n        #. Logs the exception (unless it was a cancellation exception) using the\n           ``anyio.streams.tls`` logger\n        #. Reraises the exception if it was a base exception or a cancellation exception\n\n        :param exc: the exception\n        :param stream: the original stream\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\tls.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "handler_wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\tls.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "extra_attributes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\streams\\tls.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_effectively_cancelled",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_parent_cancellation_is_visible_to_us",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "deadline",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "deadline",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "deadline.setter"
            ]
        },
        {
            "name": "cancel_called",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cancelled_caught",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "shield",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "shield",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "shield.setter"
            ]
        },
        {
            "name": "pid",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "returncode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "stdin",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "stdout",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "stderr",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_raw_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_raw_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_raw_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_raw_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_raw_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_raw_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "max_value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "total_tokens.setter"
            ]
        },
        {
            "name": "borrowed_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "available_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "run",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "current_token",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "current_time",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "cancelled_exception_class",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "checkpoint",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "checkpoint_if_cancelled",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "cancel_shielded_checkpoint",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "sleep",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_cancel_scope",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "current_effective_deadline",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_task_group",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_event",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_lock",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_semaphore",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_capacity_limiter",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "run_sync_in_worker_thread",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "check_cancelled",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "run_async_from_thread",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "run_sync_from_thread",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "create_blocking_portal",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "open_process",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "setup_process_pool_exit_at_shutdown",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "connect_tcp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "connect_unix",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_tcp_listener",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_unix_listener",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_udp_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_unix_datagram_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "getaddrinfo",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "getnameinfo",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "wait_readable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "wait_writable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "current_default_thread_limiter",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "open_signal_receiver",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_current_task",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_running_tasks",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "wait_all_tasks_blocked",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_test_runner",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_asyncio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "deadline",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "deadline",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "deadline.setter"
            ]
        },
        {
            "name": "cancel_called",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cancelled_caught",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "shield",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "shield",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "shield.setter"
            ]
        },
        {
            "name": "pid",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "returncode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "stdin",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "stdout",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "stderr",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_raw_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_convert_runtime_error_msg",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "max_value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "total_tokens.setter"
            ]
        },
        {
            "name": "borrowed_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "available_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "run",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "current_token",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "current_time",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "cancelled_exception_class",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "checkpoint",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "checkpoint_if_cancelled",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "cancel_shielded_checkpoint",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "sleep",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_cancel_scope",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "current_effective_deadline",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_task_group",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_event",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_lock",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_semaphore",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_capacity_limiter",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "run_sync_in_worker_thread",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "check_cancelled",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "run_async_from_thread",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "run_sync_from_thread",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_blocking_portal",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "open_process",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "setup_process_pool_exit_at_shutdown",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "connect_tcp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "connect_unix",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_tcp_listener",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_unix_listener",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_udp_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_unix_datagram_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod",
                "overload"
            ]
        },
        {
            "name": "create_unix_datagram_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod",
                "overload"
            ]
        },
        {
            "name": "create_unix_datagram_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "getaddrinfo",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "getnameinfo",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "wait_readable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "wait_writable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "current_default_thread_limiter",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "open_signal_receiver",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_current_task",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_running_tasks",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "wait_all_tasks_blocked",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_test_runner",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_backends\\_trio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "wrapped",
            "description": "The wrapped file object.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "write",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "write",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "writelines",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "writelines",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "open_file",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "open_file",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "parts",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "drive",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "root",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "anchor",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "parents",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "parent",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "suffix",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "suffixes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "stem",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_uri",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "info",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cwd",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "home",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "open",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "open",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_fileio.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "connect_tcp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_sockets.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "connect_tcp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_sockets.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "connect_tcp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_sockets.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "connect_tcp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_sockets.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "connect_tcp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_sockets.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "_event",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_lock",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "value",
            "description": "The current value of the semaphore.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "max_value",
            "description": "The maximum value of the semaphore.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_semaphore",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "max_value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_tokens",
            "description": "\n        The total number of tokens available for borrowing.\n\n        This is a read-write property. If the total number of tokens is increased, the\n        proportionate number of tasks waiting on this limiter will be granted their\n        tokens.\n\n        .. versionchanged:: 3.0\n            The property is now writable.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "total_tokens.setter"
            ]
        },
        {
            "name": "borrowed_tokens",
            "description": "The number of tokens that have currently been borrowed.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "available_tokens",
            "description": "The number of tokens currently available to be borrowed",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_limiter",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "total_tokens.setter"
            ]
        },
        {
            "name": "borrowed_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "available_tokens",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_synchronization.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "deadline",
            "description": "\n        The time (clock value) when this scope is cancelled automatically.\n\n        Will be ``float('inf')`` if no timeout has been set.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tasks.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "deadline",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tasks.py",
            "decorator": [
                "deadline.setter"
            ]
        },
        {
            "name": "cancel_called",
            "description": "``True`` if :meth:`cancel` has been called.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tasks.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cancelled_caught",
            "description": "\n        ``True`` if this scope suppressed a cancellation exception it itself raised.\n\n        This is typically used to check if any work was interrupted, or to see if the\n        scope was cancelled due to its deadline being reached. The value will, however,\n        only be ``True`` if the cancellation was triggered by the scope itself (and not\n        an outer scope).\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tasks.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "shield",
            "description": "\n        ``True`` if this scope is shielded from external cancellation.\n\n        While a scope is shielded, it will not receive cancellations from outside.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tasks.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "shield",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tasks.py",
            "decorator": [
                "shield.setter"
            ]
        },
        {
            "name": "fail_after",
            "description": "\n    Create a context manager which raises a :class:`TimeoutError` if does not finish in\n    time.\n\n    :param delay: maximum allowed time (in seconds) before raising the exception, or\n        ``None`` to disable the timeout\n    :param shield: ``True`` to shield the cancel scope from external cancellation\n    :return: a context manager that yields a cancel scope\n    :rtype: :class:`~typing.ContextManager`\\\\[:class:`~anyio.CancelScope`\\\\]\n\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tasks.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "__init__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__init__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__init__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__init__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__init__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__init__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "closed",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "write",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "write",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "writelines",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "writelines",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "mkstemp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "mkstemp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "mkdtemp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "mkdtemp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_tempfile.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "extra_attributes",
            "description": "\n        A mapping of the extra attributes to callables that return the corresponding\n        values.\n\n        If the provider wraps another provider, the attributes from that wrapper should\n        also be included in the returned mapping (but the wrapper may override the\n        callables from the wrapped instance).\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_typedattr.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "extra",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_typedattr.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "extra",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_typedattr.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "extra",
            "description": "\n        extra(attribute, default=undefined)\n\n        Return the value of the given typed extra attribute.\n\n        :param attribute: the attribute (member of a :class:`~TypedAttributeSet`) to\n            look for\n        :param default: the value that should be returned if no value is found for the\n            attribute\n        :raises ~anyio.TypedAttributeLookupError: if the search failed and no default\n            value was given\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\anyio\\_core\\_typedattr.py",
            "decorator": [
                "final"
            ]
        },
        {
            "name": "create",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_context.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_for_psd2",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_context.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_expiry_timestamp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_context.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_session_timeout_seconds",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_context.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "environment_type",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "api_key",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "token",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "installation_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "session_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "proxy_url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "restore",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_context.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        Creates an ApiContext instance from JSON string.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_context.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "uri_base",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\api_environment_type.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "load_api_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\bunq_context.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "api_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\bunq_context.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "user_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\bunq_context.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update_api_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\bunq_context.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "token",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\installation_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "private_key_client",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\installation_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "public_key_server",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\installation_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "token",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\session_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "expiry_time",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\session_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_id",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\session_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_person",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\session_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_company",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\session_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_api_key",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\session_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_payment_service_provider",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\session_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__get_user_object",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\user_context.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "user_id",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\user_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_company",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\user_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_person",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\user_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_api_key",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\user_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "primary_monetary_account",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\context\\user_context.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "message",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\exception\\api_exception.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "response_code",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\exception\\api_exception.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "response_id",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\exception\\api_exception.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "create_exception_for_response",
            "description": "\n\n        :return: The exception according to the status code.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\exception\\exception_factory.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_generate_message_error",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\exception\\exception_factory.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_glue_all_error_message",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\exception\\exception_factory.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_append_params_to_uri",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\api_client.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_default_headers",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\api_client.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_generate_random_request_id",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\api_client.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_create_bunq_response_raw",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\api_client.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\bunq_response.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "headers",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\bunq_response.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pagination",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\bunq_response.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cast_from_bunq_response",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\bunq_response.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "body_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\bunq_response_raw.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "headers",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\bunq_response_raw.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "create_query_string",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\http_util.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "url_params_previous_page",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\pagination.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "url_params_count_only",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\pagination.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "url_params_next_page",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\pagination.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_next_id",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\http\\pagination.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\anchor_object_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "can_serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\anchor_object_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_object_class",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\anchor_object_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\api_environment_type_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\api_environment_type_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "set_initializer",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "register_custom_adapter",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_serializer",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_deserializer",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "can_deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_initialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_deserialize_default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_is_deserialized",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_deserialize_dict",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_deserialize_dict_attributes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_deserialize_key",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_value_specs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_fetch_attribute_specs_from_doc",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_fetch_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_fetch_type_main",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_fetch_type_sub",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_str_to_type",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_str_to_type_from_member_module",
            "description": "\n        :raise: BunqException when could not find the class for the string.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_deserialize_value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_deserialize_list",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_fill_default_values",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "can_serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_serialize_default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_is_primitive",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_is_type_primitive",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_is_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_is_bytes_type",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_serialize_list",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_obj_raw",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_serialize_dict",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "main",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "types",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\converter.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\date_time_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\date_time_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\float_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\float_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "can_deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\geolocation_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "deserialize",
            "description": "\n\n        :raise: NotImplementedError\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\geolocation_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\geolocation_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "add_if_not_none",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\geolocation_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\installation_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\installation_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "can_serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\installation_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\installation_context_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\installation_context_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\monetary_account_reference_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\monetary_account_reference_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\pagination_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "parse_pagination_dict",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\pagination_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update_dict_id_field_from_response_field",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\pagination_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\pagination_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\session_server_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\session_server_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "deserialize",
            "description": "\n        :type target_class: ShareDetail|type\n        :type obj: dict\n\n        :rtype: ShareDetail\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\share_detail_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_field_or_none",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\share_detail_adapter.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\json\\share_detail_adapter.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_from_json_array_nested",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\bunq_model.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_from_json",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\bunq_model.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_unwrap_response_single",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\bunq_model.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_process_for_id",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\bunq_model.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_process_for_uuid",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\bunq_model.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_from_json_list",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\bunq_model.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_api_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\bunq_model.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_determine_user_id",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\bunq_model.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_determine_monetary_account_id",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\bunq_model.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_remove_field_for_request",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\bunq_model.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        Create a new DeviceServer providing the installation token in the header\n        and signing the request with the private part of the key you used to\n        create the installation. The API Key that you are using will be bound to\n        the IP address of the DeviceServer which you have\n        created.<br/><br/>Using a Wildcard API Key gives you the freedom to make\n        API calls even if the IP address has changed after the POST\n        device-server.<br/><br/>Find out more at this link <a\n        href=\"https://bunq.com/en/apikey-dynamic-ip\"\n        target=\"_blank\">https://bunq.com/en/apikey-dynamic-ip</a>.\n\n        :param description: The description of the DeviceServer. This is only\n        for your own reference when reading the DeviceServer again.\n        :type description: str\n        :param secret: The API key. You can request an API key in the bunq app.\n        :type secret: str\n        :param permitted_ips: An array of IPs (v4 or v6) this DeviceServer will\n        be able to do calls from. These will be linked to the API key.\n        :type permitted_ips: list[str]\n        :type custom_headers: dict[str, str]|None\n        :type api_context: ApiContext\n\n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\device_server_internal.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\id.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "id_",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\installation.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "token",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\installation.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "server_public_key",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\installation.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type api_context: ApiContext\n        :type public_key_string: str\n\n        :rtype: BunqResponse[Installation]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\installation.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "generate_request_body_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\installation.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_with_list_response",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\notification_filter_push_user_internal.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_with_list_response",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\notification_filter_url_monetary_account_internal.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_with_list_response",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\notification_filter_url_user_internal.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "token",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\oauth_access_token.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "token_type",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\oauth_access_token.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "state",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\oauth_access_token.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "create",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\oauth_access_token.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_token_uri",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\oauth_access_token.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_json",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\oauth_access_token.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "determine_auth_uri_format",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\oauth_access_token.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "authorization_uri",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\oauth_authorization_uri.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "create",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\oauth_authorization_uri.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "determine_auth_uri_format",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\oauth_authorization_uri.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "grant_type",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\oauth_grant_type.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "response_type",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\oauth_response_type.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "create_with_api_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\payment_service_provider_credential_internal.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "server_public_key",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\public_key_server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "id_",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\session_server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "token",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\session_server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_person",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\session_server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_company",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\session_server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_api_key",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\session_server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_payment_service_provider",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\session_server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "create",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\session_server.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "generate_request_body_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\session_server.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\session_token.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\session_token.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\session_token.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "token",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\session_token.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "uuid",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\core\\uuid.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get all subscription billing contract for the authenticated user.\n        \n        :type user_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBillingContractSubscriptionList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "contract_date_start",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "contract_date_end",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "contract_version",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "subscription_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "subscription_type_downgrade",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BillingContractSubscriptionApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get all limits for the authenticated user.\n        \n        :type user_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCustomerLimitList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "limit_monetary_account",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "limit_monetary_account_remaining",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "limit_card_debit_maestro",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "limit_card_debit_mastercard",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "limit_card_debit_wildcard",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "limit_card_wildcard",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "limit_card_replacement",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "limit_amount_monthly",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "spent_amount_monthly",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CustomerLimitApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type invoice_id: int\n        :type invoice_export_pdf_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInvoiceExportPdf\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "invoice_id": {
                        "type": "string"
                    },
                    "invoice_export_pdf_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "invoice_id",
                    "invoice_export_pdf_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :type invoice_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "invoice_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "invoice_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update",
            "description": "\n        :type user_id: int\n        :type invoice_id: int\n        :type invoice_export_pdf_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "invoice_id": {
                        "type": "string"
                    },
                    "invoice_export_pdf_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "invoice_id",
                    "invoice_export_pdf_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "delete",
            "description": "\n        :type user_id: int\n        :type invoice_id: int\n        :type invoice_export_pdf_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseNone\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "invoice_id": {
                        "type": "string"
                    },
                    "invoice_export_pdf_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "invoice_id",
                    "invoice_export_pdf_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: InvoiceExportPdfApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type invoice_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBytes\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "invoice_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "invoice_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: InvoiceExportPdfContentApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInvoiceList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type invoice_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInvoice\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "invoice_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "invoice_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "invoice_date",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "invoice_number",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "category",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "group",
            "description": "\n        :rtype: list[object_.InvoiceItemGroup]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_vat_inclusive",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_vat_exclusive",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_vat",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "address",
            "description": "\n        :rtype: object_.Address\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counterparty_alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counterparty_address",
            "description": "\n        :rtype: object_.Address\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "chamber_of_commerce_number",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "vat_number",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "request_reference_split_the_bill",
            "description": "\n        :rtype: list[object_.RequestInquiryReference]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: InvoiceApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInvoiceByUserList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type invoice_by_user_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInvoiceByUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "invoice_by_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "invoice_by_user_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "invoice_date",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "invoice_number",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "group",
            "description": "\n        :rtype: list[object_.InvoiceItemGroup]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_vat_inclusive",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_vat_exclusive",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_vat",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "address",
            "description": "\n        :rtype: object_.Address\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counterparty_alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counterparty_address",
            "description": "\n        :rtype: object_.Address\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "chamber_of_commerce_number",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "vat_number",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: InvoiceByUserApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseAdditionalTransactionInformationCategoryList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "category",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "order",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description_translated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "color",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "icon",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AdditionalTransactionInformationCategoryApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :param status: Whether this category is active. Only relevant for\n        user-defined categories.\n        :type status: str\n        :param category: The category.\n        :type category: str\n        :param description: The description of the category.\n        :type description: str\n        :param color: The color of the category.\n        :type color: str\n        :param icon: The icon of the category.\n        :type icon: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "status"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AdditionalTransactionInformationCategoryUserDefinedApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get the raw content of a specific attachment.\n        \n        :type user_id: int\n        :type chat_conversation_id: int\n        :type attachment_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBytes\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "chat_conversation_id": {
                        "type": "string"
                    },
                    "attachment_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "chat_conversation_id",
                    "attachment_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AttachmentConversationContentApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get the raw content of a specific attachment.\n        \n        :type user_id: int\n        :type monetary_account_id: int\n        :type attachment_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBytes\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "attachment_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "attachment_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AttachmentMonetaryAccountContentApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get the raw content of a specific attachment.\n        \n        :type attachment_public_uuid: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBytes\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "attachment_public_uuid": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "attachment_public_uuid"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AttachmentPublicContentApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get the raw content of a specific attachment.\n        \n        :type user_id: int\n        :type attachment_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBytes\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "attachment_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "attachment_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AttachmentUserContentApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        Create a new monetary account attachment. Create a POST request with a\n        payload that contains the binary representation of the file, without any\n        JSON wrapping. Make sure you define the MIME type (i.e. image/jpeg) in\n        the Content-Type header. You are required to provide a description of\n        the attachment using the X-Bunq-Attachment-Description header.\n        \n        :type user_id: int\n        :type monetary_account_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "request_bytes": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "request_bytes"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "attachment",
            "description": "\n        :rtype: object_.Attachment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AttachmentMonetaryAccountApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        Create a new public attachment. Create a POST request with a payload\n        that contains a binary representation of the file, without any JSON\n        wrapping. Make sure you define the MIME type (i.e. image/jpeg, or\n        image/png) in the Content-Type header. You are required to provide a\n        description of the attachment using the X-Bunq-Attachment-Description\n        header.\n        \n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseStr\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "request_bytes": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "request_bytes"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Get a specific attachment's metadata through its UUID. The Content-Type\n        header of the response will describe the MIME type of the attachment\n        file.\n        \n        :type api_context: ApiContext\n        :type attachment_public_uuid: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseAttachmentPublic\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "attachment_public_uuid": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "attachment_public_uuid"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "attachment",
            "description": "\n        :rtype: object_.Attachment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AttachmentPublicApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Get a specific attachment. The header of the response contains the\n        content-type of the attachment.\n        \n        :type api_context: ApiContext\n        :type user_id: int\n        :type attachment_user_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseAttachmentUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "attachment_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "attachment_user_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "attachment",
            "description": "\n        :rtype: object_.Attachment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AttachmentUserApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :param attachment_public_uuid: The public UUID of the public attachment\n        from which an avatar image must be created.\n        :type attachment_public_uuid: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseStr\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "attachment_public_uuid": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "attachment_public_uuid"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type avatar_uuid: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseAvatar\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "avatar_uuid": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "avatar_uuid"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "image",
            "description": "\n        :rtype: list[object_.Image]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AvatarApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type bank_switch_service_netherlands_incoming_payment_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBankSwitchServiceNetherlandsIncomingPayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "bank_switch_service_netherlands_incoming_payment_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "bank_switch_service_netherlands_incoming_payment_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "bank_switch_service",
            "description": "\n        :rtype: BankSwitchServiceNetherlandsIncoming\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment",
            "description": "\n        :rtype: Payment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BankSwitchServiceNetherlandsIncomingPaymentApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "user_alias",
            "description": "\n        :rtype: object_.LabelUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counterparty_alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time_start_desired",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time_start_actual",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time_end",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "attachment",
            "description": "\n        :rtype: object_.Attachment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "rejection_reason",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "rejection_reason_description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "rejection_reason_description_translated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "rejection_reason_together_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BankSwitchServiceNetherlandsIncomingApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        Create a new Payment.\n        \n        :type user_id: int\n        :type monetary_account_id: int\n        :param amount: The Amount to transfer with the Payment. Must be bigger\n        than 0 and smaller than the MonetaryAccount's balance.\n        :type amount: object_.Amount\n        :param counterparty_alias: The Alias of the party we are transferring\n        the money to. Can be an Alias of type EMAIL or PHONE_NUMBER (for bunq\n        MonetaryAccounts or bunq.to payments) or IBAN (for external bank\n        account).\n        :type counterparty_alias: object_.Pointer\n        :param description: The description for the Payment. Maximum 140\n        characters for Payments to external IBANs, 9000 characters for Payments\n        to only other bunq MonetaryAccounts. Field is required but can be an\n        empty string.\n        :type description: str\n        :param attachment: The Attachments to attach to the Payment.\n        :type attachment: list[object_.AttachmentMonetaryAccountPayment]\n        :param merchant_reference: Optional data to be included with the Payment\n        specific to the merchant.\n        :type merchant_reference: str\n        :param allow_bunqto: Whether or not sending a bunq.to payment is\n        allowed.\n        :type allow_bunqto: bool\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string"
                    },
                    "counterparty_alias": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "amount",
                    "counterparty_alias",
                    "description"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Get a specific previous Payment.\n        \n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type payment_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponsePayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "payment_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "payment_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get a listing of all Payments performed on a given MonetaryAccount\n        (incoming and outgoing).\n        \n        :type user_id: int\n        :type monetary_account_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponsePaymentList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counterparty_alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment_arrival_expected",
            "description": "\n        :rtype: object_.PaymentArrivalExpected\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bunqto_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bunqto_sub_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bunqto_share_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bunqto_expiry",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bunqto_time_responded",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "attachment",
            "description": "\n        :rtype: list[object_.AttachmentMonetaryAccountPayment]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "merchant_reference",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "batch_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "scheduled_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "address_shipping",
            "description": "\n        :rtype: object_.Address\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "address_billing",
            "description": "\n        :rtype: object_.Address\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "geolocation",
            "description": "\n        :rtype: object_.Geolocation\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "request_reference_split_the_bill",
            "description": "\n        :rtype: list[object_.RequestInquiryReference]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "balance_after_mutation",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment_auto_allocate_instance",
            "description": "\n        :rtype: PaymentAutoAllocateInstance\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment_suspended_outgoing",
            "description": "\n        :rtype: PaymentSuspendedOutgoing\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment_fee",
            "description": "\n        :rtype: object_.PaymentFee\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: PaymentApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type payment_auto_allocate_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponsePaymentAutoAllocateInstanceList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "payment_auto_allocate_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "payment_auto_allocate_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type payment_auto_allocate_id: int\n        :type payment_auto_allocate_instance_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponsePaymentAutoAllocateInstance\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "payment_auto_allocate_id": {
                        "type": "string"
                    },
                    "payment_auto_allocate_instance_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "payment_auto_allocate_id",
                    "payment_auto_allocate_instance_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment_auto_allocate_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "error_message",
            "description": "\n        :rtype: list[object_.Error]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment_batch",
            "description": "\n        :rtype: PaymentBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_ginmon_transaction_order",
            "description": "\n        :rtype: list[GinmonTransaction]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: PaymentAutoAllocateInstanceApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        Create a payment batch by sending an array of single payment objects,\n        that will become part of the batch.\n        \n        :type user_id: int\n        :type monetary_account_id: int\n        :param payments: The list of payments we want to send in a single batch.\n        :type payments: list[Payment]\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "payments": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "payments"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update",
            "description": "\n        Revoke a bunq.to payment batch. The status of all the payments will be\n        set to REVOKED.\n        \n        :type user_id: int\n        :type monetary_account_id: int\n        :type payment_batch_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "payment_batch_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "payment_batch_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Return the details of a specific payment batch.\n        \n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type payment_batch_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponsePaymentBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "payment_batch_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "payment_batch_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Return all the payment batches for a monetary account.\n        \n        :type user_id: int\n        :type monetary_account_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponsePaymentBatchList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "payments",
            "description": "\n        :rtype: list[Payment]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: PaymentBatchApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status_description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status_description_translated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_billing",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_billing_original",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "isin",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "external_identifier",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_user",
            "description": "\n        :rtype: object_.LabelUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_monetary_account",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counter_label_monetary_account",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "event_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: GinmonTransactionApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "monetary_account_id",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time_execution",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: PaymentSuspendedOutgoingApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type bunq_me_fundraiser_profile_user_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBunqMeFundraiserProfileUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "bunq_me_fundraiser_profile_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "bunq_me_fundraiser_profile_user_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBunqMeFundraiserProfileUserList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "monetary_account_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "owner_user_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "color",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "currency",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "attachment",
            "description": "\n        :rtype: object_.AttachmentPublic\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pointer",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "redirect_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BunqMeFundraiserProfileUserApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type bunq_me_fundraiser_result_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBunqMeFundraiserResult\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "bunq_me_fundraiser_result_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "bunq_me_fundraiser_result_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bunqme_fundraiser_profile",
            "description": "\n        :rtype: BunqMeFundraiserProfile\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payments",
            "description": "\n        :rtype: list[Payment]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BunqMeFundraiserResultApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "color",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "currency",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "attachment",
            "description": "\n        :rtype: object_.AttachmentPublic\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pointer",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "redirect_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "invite_profile_name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "merchant_available",
            "description": "\n        :rtype: list[object_.BunqMeMerchantAvailable]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BunqMeFundraiserProfileApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type bunq_me_tab_result_response_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBunqMeTabResultResponse\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "bunq_me_tab_result_response_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "bunq_me_tab_result_response_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "payment",
            "description": "\n        :rtype: Payment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BunqMeTabResultResponseApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :param bunqme_tab_entry: The bunq.me entry containing the payment\n        information.\n        :type bunqme_tab_entry: BunqMeTabEntry\n        :param status: The status of the bunq.me. Ignored in POST requests but\n        can be used for cancelling the bunq.me by setting status as CANCELLED\n        with a PUT request.\n        :type status: str\n        :param event_id: The ID of the related event if the bunqMeTab made by\n        'split' functionality.\n        :type event_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "bunqme_tab_entry": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "bunqme_tab_entry"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type bunq_me_tab_id: int\n        :param status: The status of the bunq.me. Ignored in POST requests but\n        can be used for cancelling the bunq.me by setting status as CANCELLED\n        with a PUT request.\n        :type status: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "bunq_me_tab_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "bunq_me_tab_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBunqMeTabList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type bunq_me_tab_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseBunqMeTab\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "bunq_me_tab_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "bunq_me_tab_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time_expiry",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias_monetary_account",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bunqme_tab_share_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bunqme_tab_entry",
            "description": "\n        :rtype: BunqMeTabEntry\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bunqme_tab_entries",
            "description": "\n        :rtype: list[BunqMeTabEntry]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "result_inquiries",
            "description": "\n        :rtype: list[BunqMeTabResultInquiry]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BunqMeTabApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_inquired",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "redirect_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "merchant_available",
            "description": "\n        :rtype: list[object_.BunqMeMerchantAvailable]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "invite_profile_name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BunqMeTabEntryApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "payment",
            "description": "\n        :rtype: Payment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bunq_me_tab_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BunqMeTabResultInquiryApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :param cards: The cards that need to be replaced.\n        :type cards: list[object_.CardBatchReplaceEntry]\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCardBatchReplace\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "cards": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "cards"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "updated_card_ids",
            "description": "\n        :rtype: list[object_.BunqId]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardBatchReplaceApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :param cards: The cards that need to be updated.\n        :type cards: list[object_.CardBatchEntry]\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCardBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "cards": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "cards"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "updated_card_ids",
            "description": "\n        :rtype: list[object_.BunqId]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardBatchApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        Create a new credit card request.\n        \n        :type user_id: int\n        :param second_line: The second line of text on the card, used as\n        name/description for it. It can contain at most 17 characters and it can\n        be empty.\n        :type second_line: str\n        :param name_on_card: The user's name as it will be on the card. Check\n        'card-name' for the available card names for a user.\n        :type name_on_card: str\n        :param type_: The type of card to order. Can be MASTERCARD.\n        :type type_: str\n        :param product_type: The product type of the card to order.\n        :type product_type: str\n        :param first_line: The first line of text on the card, used as\n        name/description for it. It can contain at most 17 characters and it can\n        be empty.\n        :type first_line: str\n        :param preferred_name_on_card: The user's preferred name that can be put\n        on the card.\n        :type preferred_name_on_card: str\n        :param alias: The pointer to the monetary account that will be connected\n        at first with the card. Its IBAN code is also the one that will be\n        printed on the card itself. The pointer must be of type IBAN.\n        :type alias: object_.Pointer\n        :param pin_code_assignment: Array of Types, PINs, account IDs assigned\n        to the card.\n        :type pin_code_assignment: list[object_.CardPinAssignment]\n        :param monetary_account_id_fallback: ID of the MA to be used as fallback\n        for this card if insufficient balance. Fallback account is removed if\n        not supplied.\n        :type monetary_account_id_fallback: int\n        :param order_status: The order status of this card. Can be\n        CARD_REQUEST_PENDING or VIRTUAL_DELIVERY.\n        :type order_status: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCardCredit\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "second_line": {
                        "type": "string"
                    },
                    "name_on_card": {
                        "type": "string"
                    },
                    "type_": {
                        "type": "string"
                    },
                    "product_type": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "second_line",
                    "name_on_card",
                    "type_",
                    "product_type"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "public_uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_owner_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_holder_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "product_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "product_sub_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "first_line",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "second_line",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "order_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "expiry_date",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name_on_card",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "preferred_name_on_card",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "primary_account_numbers",
            "description": "\n        :rtype: list[object_.CardPrimaryAccountNumber]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment_account_reference",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_limit",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_limit_atm",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country_permission",
            "description": "\n        :rtype: list[object_.CardCountryPermission]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_monetary_account_ordered",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_monetary_account_current",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account",
            "description": "\n        :rtype: MonetaryAccount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pin_code_assignment",
            "description": "\n        :rtype: list[object_.CardPinAssignment]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account_id_fallback",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_shipment_tracking_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_card_eligible_for_free_replacement",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_replacement",
            "description": "\n        :rtype: CardReplacement\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_generated_cvc2",
            "description": "\n        :rtype: CardGeneratedCvc2\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_limited_edition",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_metal_member_since_date",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "company_employee_card",
            "description": "\n        :rtype: CompanyEmployeeCard\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardCreditApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_new_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardReplacementApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        Generate a new CVC2 code for a card.\n        \n        :type user_id: int\n        :type card_id: int\n        :param type_: The type of generated cvc2. Can be STATIC or GENERATED.\n        :type type_: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "card_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "card_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Get the details for a specific generated CVC2 code.\n        \n        :type api_context: ApiContext\n        :type user_id: int\n        :type card_id: int\n        :type card_generated_cvc2_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCardGeneratedCvc2\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "card_id": {
                        "type": "string"
                    },
                    "card_generated_cvc2_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "card_id",
                    "card_generated_cvc2_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update",
            "description": "\n        :type user_id: int\n        :type card_id: int\n        :type card_generated_cvc2_id: int\n        :param type_: The type of generated cvc2. Can be STATIC or GENERATED.\n        :type type_: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "card_id": {
                        "type": "string"
                    },
                    "card_generated_cvc2_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "card_id",
                    "card_generated_cvc2_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get all generated CVC2 codes for a card.\n        \n        :type user_id: int\n        :type card_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCardGeneratedCvc2List\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "card_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "card_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cvc2",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "expiry_time",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardGeneratedCvc2ApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        Create a new debit card request.\n        \n        :type user_id: int\n        :param second_line: The second line of text on the card, used as\n        name/description for it. It can contain at most 17 characters and it can\n        be empty.\n        :type second_line: str\n        :param name_on_card: The user's name as it will be on the card. Check\n        'card-name' for the available card names for a user.\n        :type name_on_card: str\n        :param type_: The type of card to order. Can be MAESTRO or MASTERCARD.\n        :type type_: str\n        :param product_type: The product type of the card to order.\n        :type product_type: str\n        :param preferred_name_on_card: The user's preferred name that can be put\n        on the card.\n        :type preferred_name_on_card: str\n        :param alias: The pointer to the monetary account that will be connected\n        at first with the card. Its IBAN code is also the one that will be\n        printed on the card itself. The pointer must be of type IBAN.\n        :type alias: object_.Pointer\n        :param pin_code_assignment: Array of Types, PINs, account IDs assigned\n        to the card.\n        :type pin_code_assignment: list[object_.CardPinAssignment]\n        :param monetary_account_id_fallback: ID of the MA to be used as fallback\n        for this card if insufficient balance. Fallback account is removed if\n        not supplied.\n        :type monetary_account_id_fallback: int\n        :param order_status: The order status of this card. Can be\n        CARD_REQUEST_PENDING or VIRTUAL_DELIVERY.\n        :type order_status: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCardDebit\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "second_line": {
                        "type": "string"
                    },
                    "name_on_card": {
                        "type": "string"
                    },
                    "type_": {
                        "type": "string"
                    },
                    "product_type": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "second_line",
                    "name_on_card",
                    "type_",
                    "product_type"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "public_uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_owner_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_holder_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "product_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "product_sub_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "first_line",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "second_line",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "order_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "expiry_date",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name_on_card",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "preferred_name_on_card",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "primary_account_numbers",
            "description": "\n        :rtype: list[object_.CardPrimaryAccountNumber]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment_account_reference",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_limit",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_limit_atm",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country_permission",
            "description": "\n        :rtype: list[object_.CardCountryPermission]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_monetary_account_ordered",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_monetary_account_current",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account",
            "description": "\n        :rtype: MonetaryAccount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pin_code_assignment",
            "description": "\n        :rtype: list[object_.CardPinAssignment]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account_id_fallback",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_shipment_tracking_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_card_eligible_for_free_replacement",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_replacement",
            "description": "\n        :rtype: CardReplacement\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_generated_cvc2",
            "description": "\n        :rtype: CardGeneratedCvc2\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_limited_edition",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_metal_member_since_date",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "company_employee_card",
            "description": "\n        :rtype: CompanyEmployeeCard\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardDebitApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Return all the accepted card names for a specific user.\n        \n        :type user_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCardNameList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "possible_card_name_array",
            "description": "\n        :rtype: list[str]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardNameApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        Request a card replacement.\n        \n        :type user_id: int\n        :type card_id: int\n        :param name_on_card: The user's name as it will be on the card. Check\n        'card-name' for the available card names for a user.\n        :type name_on_card: str\n        :param preferred_name_on_card: The user's preferred name that can be put\n        on the card.\n        :type preferred_name_on_card: str\n        :param pin_code_assignment: Array of Types, PINs, account IDs assigned\n        to the card.\n        :type pin_code_assignment: list[object_.CardPinAssignment]\n        :param second_line: The second line on the card.\n        :type second_line: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "card_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "card_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardReplaceApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "update",
            "description": "\n        Update the card details. Allow to change pin code, status, limits,\n        country permissions and the monetary account connected to the card. When\n        the card has been received, it can be also activated through this\n        endpoint.\n        \n        :type user_id: int\n        :type card_id: int\n        :param pin_code: The plaintext pin code. Requests require encryption to\n        be enabled.\n        :type pin_code: str\n        :param activation_code: DEPRECATED: Activate a card by setting status to\n        ACTIVE when the order_status is ACCEPTED_FOR_PRODUCTION.\n        :type activation_code: str\n        :param status: The status to set for the card. Can be ACTIVE,\n        DEACTIVATED, LOST, STOLEN or CANCELLED, and can only be set to\n        LOST/STOLEN/CANCELLED when order status is\n        ACCEPTED_FOR_PRODUCTION/DELIVERED_TO_CUSTOMER/CARD_UPDATE_REQUESTED/CARD_UPDATE_SENT/CARD_UPDATE_ACCEPTED.\n        Can only be set to DEACTIVATED after initial activation, i.e.\n        order_status is\n        DELIVERED_TO_CUSTOMER/CARD_UPDATE_REQUESTED/CARD_UPDATE_SENT/CARD_UPDATE_ACCEPTED.\n        Mind that all the possible choices (apart from ACTIVE and DEACTIVATED)\n        are permanent and cannot be changed after.\n        :type status: str\n        :param order_status: The order status to set for the card. Set to\n        CARD_REQUEST_PENDING to get a virtual card produced.\n        :type order_status: str\n        :param card_limit: The spending limit for the card.\n        :type card_limit: object_.Amount\n        :param card_limit_atm: The ATM spending limit for the card.\n        :type card_limit_atm: object_.Amount\n        :param country_permission: The countries for which to grant (temporary)\n        permissions to use the card.\n        :type country_permission: list[object_.CardCountryPermission]\n        :param pin_code_assignment: Array of Types, PINs, account IDs assigned\n        to the card.\n        :type pin_code_assignment: list[object_.CardPinAssignment]\n        :param primary_account_numbers: Array of PANs and their attributes.\n        :type primary_account_numbers: list[object_.CardPrimaryAccountNumber]\n        :param monetary_account_id_fallback: ID of the MA to be used as fallback\n        for this card if insufficient balance. Fallback account is removed if\n        not supplied.\n        :type monetary_account_id_fallback: int\n        :param preferred_name_on_card: The user's preferred name as it will be\n        on the card.\n        :type preferred_name_on_card: str\n        :param second_line: The second line of text on the card\n        :type second_line: str\n        :param cancellation_reason: The reason for card cancellation.\n        :type cancellation_reason: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCard\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "card_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "card_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Return the details of a specific card.\n        \n        :type api_context: ApiContext\n        :type user_id: int\n        :type card_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCard\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "card_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "card_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Return all the cards available to the user.\n        \n        :type user_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCardList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "public_uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_owner_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_holder_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "product_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "product_sub_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "first_line",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "second_line",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "order_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "expiry_date",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name_on_card",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "preferred_name_on_card",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "primary_account_numbers",
            "description": "\n        :rtype: list[object_.CardPrimaryAccountNumber]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment_account_reference",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_limit",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_limit_atm",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country_permission",
            "description": "\n        :rtype: list[object_.CardCountryPermission]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_monetary_account_ordered",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_monetary_account_current",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account",
            "description": "\n        :rtype: MonetaryAccount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pin_code_assignment",
            "description": "\n        :rtype: list[object_.CardPinAssignment]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account_id_fallback",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_shipment_tracking_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_card_eligible_for_free_replacement",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_replacement",
            "description": "\n        :rtype: CardReplacement\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_generated_cvc2",
            "description": "\n        :rtype: CardGeneratedCvc2\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_limited_edition",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_metal_member_since_date",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "company_employee_card",
            "description": "\n        :rtype: CompanyEmployeeCard\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        Pin the certificate chain.\n        \n        :type user_id: int\n        :param certificate_chain: The certificate chain in .PEM format.\n        :type certificate_chain: list[object_.Certificate]\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "certificate_chain": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "certificate_chain"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "delete",
            "description": "\n        Remove the pinned certificate chain with the specific ID.\n        \n        :type user_id: int\n        :type certificate_pinned_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseNone\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "certificate_pinned_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "certificate_pinned_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        List all the pinned certificate chain for the given user.\n        \n        :type user_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCertificatePinnedList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Get the pinned certificate chain with the specified ID.\n        \n        :type api_context: ApiContext\n        :type user_id: int\n        :type certificate_pinned_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCertificatePinned\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "certificate_pinned_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "certificate_pinned_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "certificate_chain",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CertificatePinnedApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type company_employee_setting_adyen_card_transaction_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCompanyEmployeeSettingAdyenCardTransaction\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "company_employee_setting_adyen_card_transaction_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "company_employee_setting_adyen_card_transaction_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account_payout_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CompanyEmployeeSettingAdyenCardTransactionApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :param name: The company name.\n        :type name: str\n        :param address_main: The company's main address.\n        :type address_main: object_.Address\n        :param address_postal: The company's postal address.\n        :type address_postal: object_.Address\n        :param country: The country where the company is registered.\n        :type country: str\n        :param legal_form: The company's legal form.\n        :type legal_form: str\n        :param subscription_type: The subscription type for the company.\n        :type subscription_type: str\n        :param ubo: The names and birth dates of the company's ultimate\n        beneficiary owners. Minimum zero, maximum four.\n        :type ubo: list[object_.Ubo]\n        :param chamber_of_commerce_number: The company's chamber of commerce\n        number.\n        :type chamber_of_commerce_number: str\n        :param avatar_uuid: The public UUID of the company's avatar.\n        :type avatar_uuid: str\n        :param vat_number: DEPRECATED All the vat numbers of the company\n        :type vat_number: object_.CompanyVatNumber\n        :param vat_numbers: All the vat numbers of the company\n        :type vat_numbers: list[object_.CompanyVatNumber]\n        :param signup_track_type: The type of signup track the user is\n        following.\n        :type signup_track_type: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "address_main": {
                        "type": "string"
                    },
                    "address_postal": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "legal_form": {
                        "type": "string"
                    },
                    "subscription_type": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "name",
                    "address_main",
                    "address_postal",
                    "country",
                    "legal_form",
                    "subscription_type"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type company_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCompany\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "company_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "company_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCompanyList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update",
            "description": "\n        :type user_id: int\n        :type company_id: int\n        :param avatar_uuid: The public UUID of the company's avatar.\n        :type avatar_uuid: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "company_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "company_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "UserCompany",
            "description": "\n        :rtype: UserCompany\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CompanyApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Get a specific company.\n        \n        :type api_context: ApiContext\n        :type user_company_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseUserCompany\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update",
            "description": "\n        Modify a specific company's data.\n        \n        :type user_company_id: int\n        :param name: The company name.\n        :type name: str\n        :param public_nick_name: The company's nick name.\n        :type public_nick_name: str\n        :param avatar_uuid: The public UUID of the company's avatar.\n        :type avatar_uuid: str\n        :param address_main: The user's main address.\n        :type address_main: object_.Address\n        :param address_postal: The company's postal address.\n        :type address_postal: object_.Address\n        :param language: The person's preferred language. Formatted as a ISO\n        639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by\n        an underscore.\n        :type language: str\n        :param region: The person's preferred region. Formatted as a ISO 639-1\n        language code plus a ISO 3166-1 alpha-2 country code, seperated by an\n        underscore.\n        :type region: str\n        :param country: The country where the company is registered.\n        :type country: str\n        :param ubo: The names and birth dates of the company's ultimate\n        beneficiary owners. Minimum zero, maximum four.\n        :type ubo: list[object_.Ubo]\n        :param chamber_of_commerce_number: The company's chamber of commerce\n        number.\n        :type chamber_of_commerce_number: str\n        :param legal_form: The company's legal form.\n        :type legal_form: str\n        :param status: The user status. Can be: ACTIVE, SIGNUP, RECOVERY.\n        :type status: str\n        :param sub_status: The user sub-status. Can be: NONE, FACE_RESET,\n        APPROVAL, APPROVAL_DIRECTOR, APPROVAL_PARENT, APPROVAL_SUPPORT,\n        COUNTER_IBAN, IDEAL or SUBMIT.\n        :type sub_status: str\n        :param session_timeout: The setting for the session timeout of the\n        company in seconds.\n        :type session_timeout: int\n        :param daily_limit_without_confirmation_login: The amount the company\n        can pay in the session without asking for credentials.\n        :type daily_limit_without_confirmation_login: object_.Amount\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "public_uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "display_name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "public_nick_name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: list[object_.Pointer]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "chamber_of_commerce_number",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "legal_form",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_of_business_entity",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sector_of_industry",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counter_bank_iban",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "avatar",
            "description": "\n        :rtype: object_.Avatar\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "address_main",
            "description": "\n        :rtype: object_.Address\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "address_postal",
            "description": "\n        :rtype: object_.Address\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "address_shipping",
            "description": "\n        :rtype: object_.Address\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "version_terms_of_service",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "directors",
            "description": "\n        :rtype: list[object_.LabelUser]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "region",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ubo",
            "description": "\n        :rtype: list[object_.Ubo]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "session_timeout",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "daily_limit_without_confirmation_login",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "notification_filters",
            "description": "\n        :rtype: list[object_.NotificationFilter]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "customer",
            "description": "\n        :rtype: Customer\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "customer_limit",
            "description": "\n        :rtype: CustomerLimit\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "billing_contract",
            "description": "\n        :rtype: list[BillingContractSubscription]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "deny_reason",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "relations",
            "description": "\n        :rtype: list[RelationUser]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "tax_resident",
            "description": "\n        :rtype: list[object_.TaxResident]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: UserCompanyApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "billing_account_id",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "invoice_notification_preference",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CustomerApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "user_id",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counter_user_id",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_user",
            "description": "\n        :rtype: object_.LabelUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counter_label_user",
            "description": "\n        :rtype: object_.LabelUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "relationship",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counter_user_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "company_employee_setting_adyen_card_transaction",
            "description": "\n        :rtype: CompanyEmployeeSettingAdyenCardTransaction\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_company_employee_card",
            "description": "\n        :rtype: list[CompanyEmployeeCard]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: RelationUserApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "card",
            "description": "\n        :rtype: Card\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "company_name_on_card",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_limit_monthly",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_spent_monthly",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "number_of_company_employee_card_receipt_pending",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "company_employee_card_limit",
            "description": "\n        :rtype: CompanyEmployeeCardLimit\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CompanyEmployeeCardApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "user_company_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_employee_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_limit_monthly",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_spent_monthly",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CompanyEmployeeCardLimitApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :param pointer_iban: The pointer (IBAN) of the account we're querying.\n        :type pointer_iban: object_.Pointer\n        :param amount: The amount we want to check for.\n        :type amount: object_.Amount\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseConfirmationOfFunds\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "pointer_iban": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "pointer_iban",
                    "amount"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "has_sufficient_funds",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: ConfirmationOfFundsApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCurrencyCloudBeneficiaryRequirementList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "payment_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "legal_entity_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_field",
            "description": "\n        :rtype: list[object_.CurrencyCloudBeneficiaryRequirementField]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CurrencyCloudBeneficiaryRequirementApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :param name: The name of the beneficiary.\n        :type name: str\n        :param country: The country of the beneficiary.\n        :type country: str\n        :param currency: The currency of the beneficiary.\n        :type currency: str\n        :param payment_type: The payment type this requirement is for.\n        :type payment_type: str\n        :param legal_entity_type: The legal entity type of the beneficiary.\n        :type legal_entity_type: str\n        :param all_field: All fields that were required by CurrencyCloud.\n        Obtained through the CurrencyCloudBeneficiaryRequirement listing.\n        :type all_field: list[str]\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "payment_type": {
                        "type": "string"
                    },
                    "legal_entity_type": {
                        "type": "string"
                    },
                    "all_field": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "name",
                    "country",
                    "currency",
                    "payment_type",
                    "legal_entity_type",
                    "all_field"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type currency_cloud_beneficiary_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCurrencyCloudBeneficiary\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "currency_cloud_beneficiary_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "currency_cloud_beneficiary_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCurrencyCloudBeneficiaryList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "account_number",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "currency",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "external_identifier",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CurrencyCloudBeneficiaryApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :param pointers: The points we want to know the fees for.\n        :type pointers: list[object_.Pointer]\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "pointers": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "pointers"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "amount_fee",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CurrencyCloudPaymentQuoteApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :param amount: The amount to convert.\n        :type amount: object_.Amount\n        :param currency_source: The currency we are converting.\n        :type currency_source: str\n        :param currency_target: The currency we are converting towards.\n        :type currency_target: str\n        :param order_type: The type of the quote, SELL or BUY.\n        :type order_type: str\n        :param counterparty_alias: The Alias of the party we are transferring\n        the money to.\n        :type counterparty_alias: object_.Pointer\n        :param status: The status of the quote.\n        :type status: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string"
                    },
                    "currency_source": {
                        "type": "string"
                    },
                    "currency_target": {
                        "type": "string"
                    },
                    "order_type": {
                        "type": "string"
                    },
                    "counterparty_alias": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "amount",
                    "currency_source",
                    "currency_target",
                    "order_type",
                    "counterparty_alias"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type currency_conversion_quote_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCurrencyConversionQuote\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "currency_conversion_quote_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "currency_conversion_quote_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type currency_conversion_quote_id: int\n        :param status: The status of the quote.\n        :type status: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCurrencyConversionQuote\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "currency_conversion_quote_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "currency_conversion_quote_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_source",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_target",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "rate",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time_expiry",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CurrencyConversionQuoteApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCurrencyConversionList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type currency_conversion_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseCurrencyConversion\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "currency_conversion_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "currency_conversion_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "date_delivery_expected",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "rate",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counter_amount",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "group_uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "order_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_monetary_account",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counter_label_monetary_account",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment",
            "description": "\n        :rtype: Payment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CurrencyConversionApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        Create a new DeviceServer providing the installation token in the header\n        and signing the request with the private part of the key you used to\n        create the installation. The API Key that you are using will be bound to\n        the IP address of the DeviceServer which you have\n        created.<br/><br/>Using a Wildcard API Key gives you the freedom to make\n        API calls even if the IP address has changed after the POST\n        device-server.<br/><br/>Find out more at this link <a\n        href=\"https://bunq.com/en/apikey-dynamic-ip\"\n        target=\"_blank\">https://bunq.com/en/apikey-dynamic-ip</a>.\n        \n        :param description: The description of the DeviceServer. This is only\n        for your own reference when reading the DeviceServer again.\n        :type description: str\n        :param secret: The API key. You can request an API key in the bunq app.\n        :type secret: str\n        :param permitted_ips: An array of IPs (v4 or v6) this DeviceServer will\n        be able to do calls from. These will be linked to the API key.\n        :type permitted_ips: list[str]\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "description",
                    "secret"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Get one of your DeviceServers.\n        \n        :type api_context: ApiContext\n        :type device_server_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseDeviceServer\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "device_server_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "device_server_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get a collection of all the DeviceServers you have created.\n        \n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseDeviceServerList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ip",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: DeviceServerApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Get a single Device. A Device is either a DevicePhone or a DeviceServer.\n        \n        :type api_context: ApiContext\n        :type device_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseDevice\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "device_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "device_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get a collection of Devices. A Device is either a DevicePhone or a\n        DeviceServer.\n        \n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseDeviceList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "DeviceServer",
            "description": "\n        :rtype: DeviceServer\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: DeviceApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        Create a new DraftPayment.\n        \n        :type user_id: int\n        :type monetary_account_id: int\n        :param entries: The list of entries in the DraftPayment. Each entry will\n        result in a payment when the DraftPayment is accepted.\n        :type entries: list[object_.DraftPaymentEntry]\n        :param number_of_required_accepts: The number of accepts that are\n        required for the draft payment to receive status ACCEPTED. Currently\n        only 1 is valid.\n        :type number_of_required_accepts: int\n        :param status: The status of the DraftPayment.\n        :type status: str\n        :param previous_updated_timestamp: The last updated_timestamp that you\n        received for this DraftPayment. This needs to be provided to prevent\n        race conditions.\n        :type previous_updated_timestamp: str\n        :param schedule: The schedule details when creating or updating a\n        scheduled payment.\n        :type schedule: Schedule\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "entries": {
                        "type": "string"
                    },
                    "number_of_required_accepts": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "entries",
                    "number_of_required_accepts"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update",
            "description": "\n        Update a DraftPayment.\n        \n        :type user_id: int\n        :type monetary_account_id: int\n        :type draft_payment_id: int\n        :param status: The status of the DraftPayment.\n        :type status: str\n        :param previous_updated_timestamp: The last updated_timestamp that you\n        received for this DraftPayment. This needs to be provided to prevent\n        race conditions.\n        :type previous_updated_timestamp: str\n        :param schedule: The schedule details when creating or updating a\n        scheduled payment.\n        :type schedule: Schedule\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "draft_payment_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "draft_payment_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get a listing of all DraftPayments from a given MonetaryAccount.\n        \n        :type user_id: int\n        :type monetary_account_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseDraftPaymentList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Get a specific DraftPayment.\n        \n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type draft_payment_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseDraftPayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "draft_payment_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "draft_payment_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_alias_created",
            "description": "\n        :rtype: object_.LabelUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "responses",
            "description": "\n        :rtype: list[object_.DraftPaymentResponse]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "entries",
            "description": "\n        :rtype: list[object_.DraftPaymentEntry]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "object_",
            "description": "\n        :rtype: object_.DraftPaymentAnchorObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "request_reference_split_the_bill",
            "description": "\n        :rtype: list[object_.RequestInquiryReference]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "schedule",
            "description": "\n        :rtype: Schedule\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: DraftPaymentApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Get a specific schedule definition for a given monetary account.\n        \n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type schedule_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseSchedule\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "schedule_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "schedule_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get a collection of scheduled definition for a given monetary account.\n        You can add the parameter type to filter the response. When\n        type={SCHEDULE_DEFINITION_PAYMENT,SCHEDULE_DEFINITION_PAYMENT_BATCH} is\n        provided only schedule definition object that relate to these\n        definitions are returned.\n        \n        :type user_id: int\n        :type monetary_account_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseScheduleList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "time_start",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time_end",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "recurrence_unit",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "recurrence_size",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "object_",
            "description": "\n        :rtype: object_.ScheduleAnchorObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: ScheduleApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: ServerErrorApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        Get a specific event for a given user.\n        \n        :type api_context: ApiContext\n        :type user_id: int\n        :type event_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseEvent\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "event_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "event_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        Get a collection of events for a given user. You can add query the\n        parameters monetary_account_id, status and/or display_user_event to\n        filter the response. When monetary_account_id={id,id} is provided only\n        events that relate to these monetary account ids are returned. When\n        status={AWAITING_REPLY/FINALIZED} is provided the response only contains\n        events with the status AWAITING_REPLY or FINALIZED. When\n        display_user_event={true/false} is set to false user events are excluded\n        from the response, when not provided user events are displayed. User\n        events are events that are not related to a monetary account (for\n        example: connect invites).\n        \n        :type user_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseEventList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "action",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_id",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account_id",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "object_",
            "description": "\n        :rtype: object_.EventObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "object_data_at_event",
            "description": "\n        :rtype: object_.EventObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_event_latest_for_object",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_event_reassignable",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: EventApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type feature_announcement_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseFeatureAnnouncement\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "feature_announcement_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "feature_announcement_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "avatar",
            "description": "\n        :rtype: object_.Avatar\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "title",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub_title",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: FeatureAnnouncementApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :param amount_requested: The requested amount of money to add.\n        :type amount_requested: object_.Amount\n        :param issuer: The BIC of the issuing bank to ask for money.\n        :type issuer: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "amount_requested": {
                        "type": "string"
                    },
                    "issuer": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "amount_requested",
                    "issuer"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type ideal_merchant_transaction_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseIdealMerchantTransaction\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "ideal_merchant_transaction_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "ideal_merchant_transaction_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseIdealMerchantTransactionList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "monetary_account_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counterparty_alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_guaranteed",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_requested",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "expiration",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "issuer",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "issuer_name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "issuer_authentication_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "purchase_identifier",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status_timestamp",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "transaction_identifier",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: IdealMerchantTransactionApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :param payment: The payment details.\n        :type payment: object_.SchedulePaymentEntry\n        :param schedule: The schedule details when creating or updating a\n        scheduled payment.\n        :type schedule: Schedule\n        :param purpose: The purpose of this scheduled payment.\n        :type purpose: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "payment": {
                        "type": "string"
                    },
                    "schedule": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "payment",
                    "schedule"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "delete",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type schedule_payment_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseNone\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "schedule_payment_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "schedule_payment_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type schedule_payment_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseSchedulePayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "schedule_payment_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "schedule_payment_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseSchedulePaymentList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type schedule_payment_id: int\n        :param payment: The payment details.\n        :type payment: object_.SchedulePaymentEntry\n        :param schedule: The schedule details when creating or updating a\n        scheduled payment.\n        :type schedule: Schedule\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseSchedulePayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "schedule_payment_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "schedule_payment_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "payment",
            "description": "\n        :rtype: object_.SchedulePaymentEntry\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "schedule",
            "description": "\n        :rtype: Schedule\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "purpose",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: SchedulePaymentApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type schedule_payment_batch_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseSchedulePaymentBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "schedule_payment_batch_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "schedule_payment_batch_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :param payments: The payment details.\n        :type payments: list[object_.SchedulePaymentEntry]\n        :param schedule: The schedule details when creating a scheduled payment.\n        :type schedule: Schedule\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "payments": {
                        "type": "string"
                    },
                    "schedule": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "payments",
                    "schedule"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type schedule_payment_batch_id: int\n        :param payments: The payment details.\n        :type payments: list[object_.SchedulePaymentEntry]\n        :param schedule: The schedule details when creating a scheduled payment.\n        :type schedule: Schedule\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "schedule_payment_batch_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "schedule_payment_batch_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "delete",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type schedule_payment_batch_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseNone\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "schedule_payment_batch_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "schedule_payment_batch_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "payments",
            "description": "\n        :rtype: list[object_.SchedulePaymentEntry]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "schedule",
            "description": "\n        :rtype: Schedule\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: SchedulePaymentBatchApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type schedule_id: int\n        :type schedule_instance_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseScheduleInstance\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "schedule_id": {
                        "type": "string"
                    },
                    "schedule_instance_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "schedule_id",
                    "schedule_instance_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type schedule_id: int\n        :type schedule_instance_id: int\n        :param state: Change the state of the scheduleInstance from\n        FAILED_USER_ERROR to RETRY.\n        :type state: str\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseInt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "schedule_id": {
                        "type": "string"
                    },
                    "schedule_instance_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "schedule_id",
                    "schedule_instance_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type schedule_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseScheduleInstanceList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "schedule_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "schedule_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "state",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time_start",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time_end",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "error_message",
            "description": "\n        :rtype: list[object_.Error]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "scheduled_object",
            "description": "\n        :rtype: object_.ScheduleAnchorObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "result_object",
            "description": "\n        :rtype: object_.ScheduleInstanceAnchorObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "request_reference_split_the_bill",
            "description": "\n        :rtype: list[object_.RequestInquiryReference]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: ScheduleInstanceApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "\n        :type api_context: ApiContext\n        :type user_id: int\n        :type monetary_account_id: int\n        :type master_card_action_id: int\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseMasterCardAction\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "master_card_action_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "master_card_action_id"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list",
            "description": "\n        :type user_id: int\n        :type monetary_account_id: int\n        :type params: dict[str, str]|None\n        :type custom_headers: dict[str, str]|None\n        \n        :rtype: BunqResponseMasterCardActionList\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_local",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_converted",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_billing",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_original_local",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_original_billing",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount_fee",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_authorisation_id_response",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "decision",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "payment_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "decision_description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "decision_description_translated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "decision_together_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "authorisation_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "authorisation_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pan_entry_mode_user",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "settlement_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "clearing_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "maturity_date",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "city",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counterparty_alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_card",
            "description": "\n        :rtype: object_.LabelCard\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "merchant_id",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "token_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "reservation_expiry_time",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "clearing_expiry_time",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "applied_limit",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "secure_code_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "wallet_provider_id",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "request_reference_split_the_bill",
            "description": "\n        :rtype: list[object_.RequestInquiryReference]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "card_tokenization_event",
            "description": "\n        :rtype: Event\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_mastercard_action_refund",
            "description": "\n        :rtype: list[MasterCardActionRefund]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pos_card_presence",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pos_card_holder_presence",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "eligible_whitelist_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cashback_payout_item",
            "description": "\n        :rtype: CashbackPayoutItem\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "point_mutation",
            "description": "\n        :rtype: PointMutation\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "blacklist",
            "description": "\n        :rtype: UserBlocklistMasterCardMerchant\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "blocklist",
            "description": "\n        :rtype: UserBlocklistMasterCardMerchant\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "additional_authentication_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pin_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "mastercard_action_report",
            "description": "\n        :rtype: MasterCardActionReport\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "merchant_category_code",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "company_employee_card_receipt",
            "description": "\n        :rtype: CompanyEmployeeCardReceipt\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: MasterCardActionApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_user_creator",
            "description": "\n        :rtype: object_.LabelUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "reference_mastercard_action_event",
            "description": "\n        :rtype: list[object_.MasterCardActionReference]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "mastercard_action_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sub_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "reason",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counterparty_alias",
            "description": "\n        :rtype: object_.MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_card",
            "description": "\n        :rtype: object_.LabelCard\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time_refund",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "additional_information",
            "description": "\n        :rtype: object_.AdditionalInformation\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status_description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status_description_translated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status_together_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: MasterCardActionRefundApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount",
            "description": "\n        :rtype: object_.Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "rate_applied",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "transaction_category",
            "description": "\n        :rtype: AdditionalTransactionInformationCategory\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_partner_promotion",
            "description": "\n        :rtype: UserPartnerPromotionCashback\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CashbackPayoutItemApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "number_of_transaction_remaining",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "partner_promotion",
            "description": "\n        :rtype: PartnerPromotionCashback\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: UserPartnerPromotionCashbackApiObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\endpoint.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "value",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "currency",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AmountObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_description_translated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "instance_description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "product_vat_exclusive",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "product_vat_inclusive",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "item",
            "description": "\n        :rtype: list[InvoiceItem]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: InvoiceItemGroupObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "billing_date",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_description_translated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "unit_vat_exclusive",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "unit_vat_inclusive",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "vat",
            "description": "\n        :rtype: float\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "quantity",
            "description": "\n        :rtype: float\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_vat_exclusive",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "total_vat_inclusive",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: InvoiceItemObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "iban",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "display_name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "avatar",
            "description": "\n        :rtype: Avatar\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_user",
            "description": "\n        :rtype: LabelUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bunq_me",
            "description": "\n        :rtype: MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_light",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "swift_bic",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "swift_account_number",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "transferwise_account_number",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "transferwise_bank_code",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "merchant_category_code",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: LabelMonetaryAccountObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "anchor_uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "image",
            "description": "\n        :rtype: list[Image]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "style",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AvatarObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "attachment_public_uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "content_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "height",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "width",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: ImageObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "avatar",
            "description": "\n        :rtype: Avatar\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "public_nick_name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "display_name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: LabelUserObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "value",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: PointerObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "street",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "house_number",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "po_box",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "postal_code",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "city",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "province",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "extra",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "mailbox_name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_user_address_updated",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AddressObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: RequestInquiryReferenceObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "content_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "urls",
            "description": "\n        :rtype: list[AttachmentUrl]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AttachmentObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AttachmentUrlObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: PaymentArrivalExpectedObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AttachmentMonetaryAccountPaymentObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "latitude",
            "description": "\n        :rtype: float\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "longitude",
            "description": "\n        :rtype: float\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "altitude",
            "description": "\n        :rtype: float\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "radius",
            "description": "\n        :rtype: float\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: GeolocationObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "error_description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "error_description_translated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: ErrorObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "value",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "currency",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "invoice_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: PaymentFeeObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "content_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AttachmentPublicObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "merchant_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "available",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BunqMeMerchantAvailableObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BunqIdObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardBatchReplaceEntryObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "routing_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardPinAssignmentObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardBatchEntryObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardCountryPermissionObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "monetary_account_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "four_digit",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CardPrimaryAccountNumberObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "certificate",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CertificateObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "date_of_birth",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "nationality",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: UboObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "notification_delivery_method",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "notification_target",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "category",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: NotificationFilterObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "tax_number",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: TaxResidentObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "country",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "value",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CompanyVatNumberObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "label",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "validation_expression",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "input_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CurrencyCloudBeneficiaryRequirementFieldObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_alias_created",
            "description": "\n        :rtype: LabelUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: DraftPaymentResponseObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "amount",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counterparty_alias",
            "description": "\n        :rtype: MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "merchant_reference",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "attachment",
            "description": "\n        :rtype: list[AttachmentMonetaryAccountPayment]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: DraftPaymentEntryObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "Payment",
            "description": "\n        :rtype: endpoint.Payment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "PaymentBatch",
            "description": "\n        :rtype: endpoint.PaymentBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: DraftPaymentAnchorObjectObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "Payment",
            "description": "\n        :rtype: endpoint.Payment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "PaymentBatch",
            "description": "\n        :rtype: endpoint.PaymentBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: ScheduleAnchorObjectObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "BunqMeTab",
            "description": "\n        :rtype: endpoint.BunqMeTab\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "BunqMeTabResultResponse",
            "description": "\n        :rtype: endpoint.BunqMeTabResultResponse\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "BunqMeFundraiserResult",
            "description": "\n        :rtype: endpoint.BunqMeFundraiserResult\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "Card",
            "description": "\n        :rtype: endpoint.Card\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "CardDebit",
            "description": "\n        :rtype: endpoint.CardDebit\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "DraftPayment",
            "description": "\n        :rtype: endpoint.DraftPayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "FeatureAnnouncement",
            "description": "\n        :rtype: endpoint.FeatureAnnouncement\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "IdealMerchantTransaction",
            "description": "\n        :rtype: endpoint.IdealMerchantTransaction\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "Invoice",
            "description": "\n        :rtype: endpoint.Invoice\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ScheduledPayment",
            "description": "\n        :rtype: endpoint.SchedulePayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ScheduledPaymentBatch",
            "description": "\n        :rtype: endpoint.SchedulePaymentBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ScheduledInstance",
            "description": "\n        :rtype: endpoint.ScheduleInstance\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "MasterCardAction",
            "description": "\n        :rtype: endpoint.MasterCardAction\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "BankSwitchServiceNetherlandsIncomingPayment",
            "description": "\n        :rtype: endpoint.BankSwitchServiceNetherlandsIncomingPayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "Payment",
            "description": "\n        :rtype: endpoint.Payment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "PaymentBatch",
            "description": "\n        :rtype: endpoint.PaymentBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "RequestInquiryBatch",
            "description": "\n        :rtype: endpoint.RequestInquiryBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "RequestInquiry",
            "description": "\n        :rtype: endpoint.RequestInquiry\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "RequestResponse",
            "description": "\n        :rtype: endpoint.RequestResponse\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ShareInviteBankInquiry",
            "description": "\n        :rtype: endpoint.ShareInviteMonetaryAccountInquiry\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ShareInviteBankResponse",
            "description": "\n        :rtype: endpoint.ShareInviteMonetaryAccountResponse\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "SofortMerchantTransaction",
            "description": "\n        :rtype: endpoint.SofortMerchantTransaction\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "TransferwisePayment",
            "description": "\n        :rtype: endpoint.TransferwiseTransfer\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: EventObjectObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "amount",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "counterparty_alias",
            "description": "\n        :rtype: MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "attachment",
            "description": "\n        :rtype: list[AttachmentMonetaryAccountPayment]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "merchant_reference",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: SchedulePaymentEntryObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "Payment",
            "description": "\n        :rtype: endpoint.Payment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "PaymentBatch",
            "description": "\n        :rtype: endpoint.PaymentBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: ScheduleInstanceAnchorObjectObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "uuid",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "second_line",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "expiry_date",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "label_user",
            "description": "\n        :rtype: LabelUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: LabelCardObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "event_id",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: MasterCardActionReferenceObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "category",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "reason",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "comment",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "attachment",
            "description": "\n        :rtype: list[AttachmentMasterCardActionRefund]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "terms_and_conditions",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AdditionalInformationObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: AttachmentMasterCardActionRefundObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "BillingInvoice",
            "description": "\n        :rtype: endpoint.Invoice\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "DraftPayment",
            "description": "\n        :rtype: endpoint.DraftPayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "MasterCardAction",
            "description": "\n        :rtype: endpoint.MasterCardAction\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "Payment",
            "description": "\n        :rtype: endpoint.Payment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "PaymentBatch",
            "description": "\n        :rtype: endpoint.PaymentBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "RequestResponse",
            "description": "\n        :rtype: endpoint.RequestResponse\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ScheduleInstance",
            "description": "\n        :rtype: endpoint.ScheduleInstance\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "WhitelistResult",
            "description": "\n        :rtype: endpoint.WhitelistResult\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "TransferwisePayment",
            "description": "\n        :rtype: endpoint.TransferwiseTransfer\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "CurrencyConversion",
            "description": "\n        :rtype: endpoint.CurrencyConversion\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: RequestReferenceSplitTheBillAnchorObjectObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "requestResponse",
            "description": "\n        :rtype: endpoint.RequestResponse\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "draftPayment",
            "description": "\n        :rtype: endpoint.DraftPayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: WhitelistResultViewAnchoredObjectObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "payment",
            "description": "\n        :rtype: ShareDetailPayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "read_only",
            "description": "\n        :rtype: ShareDetailReadOnly\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "draft_payment",
            "description": "\n        :rtype: ShareDetailDraftPayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: ShareDetailObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "make_payments",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "make_draft_payments",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "view_balance",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "view_old_events",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "view_new_events",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: ShareDetailPaymentObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "view_balance",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "view_old_events",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "view_new_events",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: ShareDetailReadOnlyObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "make_draft_payments",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "view_balance",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "view_old_events",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "view_new_events",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: ShareDetailDraftPaymentObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "balance_preferred",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "balance_threshold_low",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "issuer",
            "description": "\n        :rtype: Issuer\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: MonetaryAccountProfileFillObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "bic",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: IssuerObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "balance_preferred",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "balance_threshold_high",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "savings_account_alias",
            "description": "\n        :rtype: MonetaryAccountReference\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: MonetaryAccountProfileDrainObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "color",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "icon",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "default_avatar_status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "restriction_chat",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "sdd_expiration_action",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: MonetaryAccountSettingObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "alias",
            "description": "\n        :rtype: LabelUser\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: CoOwnerObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "amount_target",
            "description": "\n        :rtype: Amount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time_end",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: BirdeeInvestmentPortfolioGoalObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "category",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_user_id",
            "description": "\n        :rtype: list[str]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_monetary_account_id",
            "description": "\n        :rtype: list[str]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: NotificationFilterEmailObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "category",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_user_id",
            "description": "\n        :rtype: list[str]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_monetary_account_id",
            "description": "\n        :rtype: list[str]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: NotificationFilterPushObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "category",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_user_id",
            "description": "\n        :rtype: list[str]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_monetary_account_id",
            "description": "\n        :rtype: list[str]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_verification_type",
            "description": "\n        :rtype: list[str]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "notification_target",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: NotificationFilterUrlObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "target_url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "category",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "event_type",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "object_",
            "description": "\n        :rtype: NotificationAnchorObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: NotificationUrlObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "BunqMeFundraiserResult",
            "description": "\n        :rtype: endpoint.BunqMeFundraiserResult\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "BunqMeTab",
            "description": "\n        :rtype: endpoint.BunqMeTab\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "BunqMeTabResultInquiry",
            "description": "\n        :rtype: endpoint.BunqMeTabResultInquiry\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "BunqMeTabResultResponse",
            "description": "\n        :rtype: endpoint.BunqMeTabResultResponse\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ChatMessage",
            "description": "\n        :rtype: endpoint.ChatMessage\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "DraftPayment",
            "description": "\n        :rtype: endpoint.DraftPayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "IdealMerchantTransaction",
            "description": "\n        :rtype: endpoint.IdealMerchantTransaction\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "Invoice",
            "description": "\n        :rtype: endpoint.Invoice\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "MasterCardAction",
            "description": "\n        :rtype: endpoint.MasterCardAction\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "MonetaryAccount",
            "description": "\n        :rtype: endpoint.MonetaryAccount\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "Payment",
            "description": "\n        :rtype: endpoint.Payment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "PaymentBatch",
            "description": "\n        :rtype: endpoint.PaymentBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "RequestInquiry",
            "description": "\n        :rtype: endpoint.RequestInquiry\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "RequestInquiryBatch",
            "description": "\n        :rtype: endpoint.RequestInquiryBatch\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "RequestResponse",
            "description": "\n        :rtype: endpoint.RequestResponse\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ShareInviteBankInquiry",
            "description": "\n        :rtype: endpoint.ShareInviteMonetaryAccountInquiry\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ShareInviteBankResponse",
            "description": "\n        :rtype: endpoint.ShareInviteMonetaryAccountResponse\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ScheduledPayment",
            "description": "\n        :rtype: endpoint.SchedulePayment\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ScheduledInstance",
            "description": "\n        :rtype: endpoint.ScheduleInstance\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "User",
            "description": "\n        :rtype: endpoint.User\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: NotificationAnchorObjectObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "UserPerson",
            "description": "\n        :rtype: endpoint.UserPerson\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "UserCompany",
            "description": "\n        :rtype: endpoint.UserCompany\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "UserPaymentServiceProvider",
            "description": "\n        :rtype: endpoint.UserPaymentServiceProvider\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: UserApiKeyAnchoredUserObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "id_",
            "description": "\n        :rtype: int\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "created",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "updated",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: OauthCallbackUrlObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "description",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ip",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: PermittedDeviceObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "group",
            "description": "\n        :rtype: TransferwiseRequirementFieldGroup\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: TransferwiseRequirementFieldObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "key",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "refresh_requirements_on_change",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "required",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "display_format",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "example",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "min_length",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "max_length",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "validation_regexp",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "validation_async",
            "description": "\n        :rtype: TransferwiseRequirementFieldGroupValidationAsync\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "values_allowed",
            "description": "\n        :rtype: TransferwiseRequirementFieldGroupValuesAllowed\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: TransferwiseRequirementFieldGroupObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "url",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "params",
            "description": "\n        :rtype: TransferwiseRequirementFieldGroupValidationAsyncParams\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: TransferwiseRequirementFieldGroupValidationAsyncObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "key",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "parameter_name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "required",
            "description": "\n        :rtype: bool\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: TransferwiseRequirementFieldGroupValidationAsyncParamsObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "key",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: TransferwiseRequirementFieldGroupValuesAllowedObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "allEntry",
            "description": "\n        :rtype: list[HealthCheckResultEntry]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: HealthCheckResultObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "type_",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "status",
            "description": "\n        :rtype: str\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        :type json_str: str\n        \n        :rtype: HealthCheckResultEntryObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "json_str": {
                        "type": "string"
                    }
                },
                "required": [
                    "json_str"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "create_from_pointer",
            "description": "\n        :type pointer: PointerObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "pointer": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "pointer"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_from_label_monetary_account",
            "description": "\n        :type label_monetary_account: LabelMonetaryAccountObject\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "label_monetary_account": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "label_monetary_account"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\bunq\\sdk\\model\\generated\\object_.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\big5prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\big5prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\charsetgroupprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\charsetgroupprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\charsetprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "state",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\charsetprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "filter_high_byte_only",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "buf": {
                        "type": "string"
                    }
                },
                "required": [
                    "buf"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\charsetprober.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "filter_international_words",
            "description": "\n        We define three types of bytes:\n        alphabet: english alphabets [a-zA-Z]\n        international: international characters [\\x80-\\xFF]\n        marker: everything else [^a-zA-Z\\x80-\\xFF]\n\n        The input buffer can be thought to contain a series of words delimited\n        by markers. This function works to filter all words that contain at\n        least one international character. All contiguous sequences of markers\n        are replaced by a single space ascii character.\n\n        This filter applies to all scripts which do not use English characters.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "buf": {
                        "type": "string"
                    }
                },
                "required": [
                    "buf"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\charsetprober.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "filter_with_english_letters",
            "description": "\n        Returns a copy of ``buf`` that retains only the sequences of English\n        alphabet and high byte characters that are not between <> characters.\n        Also retains English alphabet and high byte characters immediately\n        before occurrences of >.\n\n        This filter can be applied to all scripts which contain both English\n        characters and extended ASCII characters, but is currently only used by\n        ``Latin1Prober``.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "buf": {
                        "type": "string"
                    }
                },
                "required": [
                    "buf"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\charsetprober.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\codingstatemachine.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\cp949prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\cp949prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "get_num_categories",
            "description": ":returns: The number of likelihood categories in the enum.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\enums.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\escprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\escprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\eucjpprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\eucjpprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\euckrprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\euckrprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\euctwprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\euctwprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\gb2312prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\gb2312prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\hebrewprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\hebrewprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "state",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\hebrewprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\jpcntx.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\latin1prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\latin1prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\mbcharsetprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\mbcharsetprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\sbcharsetprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\sbcharsetprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\sjisprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\sjisprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\utf8prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\chardet\\utf8prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "encoding_languages",
            "description": "\n    Single-byte encoding language association. Some code page are heavily linked to particular language(s).\n    This function does the correspondence.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\cd.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "mb_encoding_languages",
            "description": "\n    Multi-byte encoding language association. Some code page are heavily linked to particular language(s).\n    This function does the correspondence.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\cd.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "get_target_features",
            "description": "\n    Determine main aspects from a supported language if it contains accents and if is pure Latin.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\cd.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "ratio",
            "description": "\n        Compute the chaos ratio based on what your feed() has seen.\n        Must NOT be lower than 0.; No restriction gt 0.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\md.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ratio",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\md.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ratio",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\md.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ratio",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\md.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ratio",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\md.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ratio",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\md.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ratio",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\md.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ratio",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\md.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ratio",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\md.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ratio",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\md.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_suspiciously_successive_range",
            "description": "\n    Determine if two Unicode range seen next to each other can be considered as suspicious.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\md.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "mess_ratio",
            "description": "\n    Compute a mess ratio given a decoded bytes sequence. The maximum threshold does stop the computation earlier.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\md.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "multi_byte_usage",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "encoding",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "encoding_aliases",
            "description": "\n        Encoding name are known by many name, using this could help when searching for IBM855 when it's listed as CP855.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bom",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "byte_order_mark",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "languages",
            "description": "\n        Return the complete list of possible languages found in decoded sequence.\n        Usually not really useful. Returned list may be empty even if 'language' property return something != 'Unknown'.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "\n        Most probable language found in decoded sequence. If none were detected or inferred, the property will return\n        \"Unknown\".\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "chaos",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "coherence",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "percent_chaos",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "percent_coherence",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "raw",
            "description": "\n        Original untouched bytes.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "submatch",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "has_submatch",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "alphabets",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "could_be_from_charset",
            "description": "\n        The complete list of encoding that output the exact SAME str result and therefore could be the originating\n        encoding.\n        This list does include the encoding available in property 'encoding'.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "fingerprint",
            "description": "\n        Retrieve the unique SHA256 computed using the transformed (re-encoded) payload. Not the original one.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__dict__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_accentuated",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\utils.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "remove_accent",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\utils.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "unicode_range",
            "description": "\n    Retrieve the Unicode range official name from a single character.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\utils.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "is_latin",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\utils.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "is_punctuation",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\utils.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "is_symbol",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\utils.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "is_emoticon",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\utils.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "is_separator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\charset_normalizer\\utils.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "augment_usage_errors",
            "description": "Context manager that attaches extra information to exceptions.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "scope",
            "description": "This helper method can be used with the context object to promote\n        it to the current thread local (see :func:`get_current_context`).\n        The default behavior of this is to invoke the cleanup functions which\n        can be disabled by setting `cleanup` to `False`.  The cleanup\n        functions are typically used for things such as closing file handles.\n\n        If the cleanup is intended the context object can also be directly\n        used as a context manager.\n\n        Example usage::\n\n            with ctx.scope():\n                assert get_current_context() is ctx\n\n        This is equivalent::\n\n            with ctx:\n                assert get_current_context() is ctx\n\n        .. versionadded:: 5.0\n\n        :param cleanup: controls if the cleanup functions should be run or\n                        not.  The default is to run these functions.  In\n                        some situations the context only wants to be\n                        temporarily pushed in which case this can be disabled.\n                        Nested pushes automatically defer the cleanup.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "meta",
            "description": "This is a dictionary which is shared with all the contexts\n        that are nested.  It exists so that click utilities can store some\n        state here if they need to.  It is however the responsibility of\n        that code to manage this dictionary well.\n\n        The keys are supposed to be unique dotted strings.  For instance\n        module paths are a good choice for it.  What is stored in there is\n        irrelevant for the operation of click.  However what is important is\n        that code that places data here adheres to the general semantics of\n        the system.\n\n        Example usage::\n\n            LANG_KEY = f'{__name__}.lang'\n\n            def set_language(value):\n                ctx = get_current_context()\n                ctx.meta[LANG_KEY] = value\n\n            def get_language():\n                return get_current_context().meta.get(LANG_KEY, 'en_US')\n\n        .. versionadded:: 5.0\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "command_path",
            "description": "The computed command path.  This is used for the ``usage``\n        information on the help page.  It's automatically created by\n        combining the info names of the chain of contexts to the root.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "lookup_default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "lookup_default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "invoke",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "__self": {
                        "type": "string"
                    }
                },
                "required": [
                    "__self"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "invoke",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "__self": {
                        "type": "string"
                    }
                },
                "required": [
                    "__self"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "main",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "main",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "command",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "command",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "group",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "group",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "human_readable_name",
            "description": "Returns the human readable name of this parameter.  This is the\n        same as the name for options, but the metavar for arguments.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "get_default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "get_default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "get_default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "get_default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "human_readable_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\core.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "command",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\decorators.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "command",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\decorators.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "command",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\decorators.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "command",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\decorators.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "group",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\decorators.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "group",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\decorators.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "group",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\decorators.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "group",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\decorators.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "show_help",
            "description": "Callback that print the help page on ``<stdout>`` and exits.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\decorators.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "section",
            "description": "Helpful context manager that writes a paragraph, a heading,\n        and the indents.\n\n        :param name: the section name that is written as heading.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\formatting.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "indentation",
            "description": "A context manager that increases the indentation.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\formatting.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "get_current_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\globals.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "get_current_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\globals.py",
            "decorator": [
                "t.overload"
            ]
        },
        {
            "name": "takes_value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\parser.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "func_name",
            "description": "The name of the shell function defined by the completion\n        script.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\shell_completion.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_check_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\shell_completion.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_pause_echo",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\testing.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\testing.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\testing.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "output",
            "description": "The (standard) output as unicode string.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\testing.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "stdout",
            "description": "The standard output as unicode string.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\testing.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "stderr",
            "description": "The standard error as unicode string.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\testing.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "isolation",
            "description": "A context manager that sets up the isolation for invoking of a\n        command line tool.  This sets up stdin with the given input data\n        and `os.environ` with the overrides from the given dictionary.\n        This also rebinds some internals in Click to be mocked (like the\n        prompt functionality).\n\n        This is automatically done in the :meth:`invoke` method.\n\n        :param input: the input stream to put into sys.stdin.\n        :param env: the environment overrides as dictionary.\n        :param color: whether the output should contain color codes. The\n                      application can still override this explicitly.\n\n        .. versionchanged:: 8.0\n            ``stderr`` is opened with ``errors=\"backslashreplace\"``\n            instead of the default ``\"strict\"``.\n\n        .. versionchanged:: 4.0\n            Added the ``color`` parameter.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\testing.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "visible_input",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\testing.py",
            "decorator": [
                "_pause_echo"
            ]
        },
        {
            "name": "hidden_input",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\testing.py",
            "decorator": [
                "_pause_echo"
            ]
        },
        {
            "name": "_getchar",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\testing.py",
            "decorator": [
                "_pause_echo"
            ]
        },
        {
            "name": "isolated_filesystem",
            "description": "A context manager that creates a temporary directory and\n        changes the current working directory to it. This isolates tests\n        that affect the contents of the CWD to prevent them from\n        interfering with each other.\n\n        :param temp_dir: Create the temporary directory under this\n            directory. If given, the created directory is not removed\n            when exiting.\n\n        .. versionchanged:: 8.0\n            Added the ``temp_dir`` parameter.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\testing.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "arity",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\types.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\types.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "arity",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\types.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\_compat.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pct",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\_termui_impl.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "time_per_iteration",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\_termui_impl.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "eta",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\_termui_impl.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "raw_terminal",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\_termui_impl.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "raw_terminal",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\_termui_impl.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "extra_indent",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\click\\_textwrap.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "decrypt",
            "description": "Decrypt a piece of data using a passphrase and *PBES1*.\n\n        The algorithm to use is automatically detected.\n\n        :Parameters:\n          data : byte string\n            The piece of data to decrypt.\n          passphrase : byte string\n            The passphrase to use for decrypting the data.\n        :Returns:\n          The decrypted data, as a binary string.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "passphrase": {
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "passphrase"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\IO\\_PBES.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "encrypt",
            "description": "Encrypt a piece of data using a passphrase and *PBES2*.\n\n        :Parameters:\n          data : byte string\n            The piece of data to encrypt.\n          passphrase : byte string\n            The passphrase to use for encrypting the data.\n          protection : string\n            The identifier of the encryption algorithm to use.\n            The default value is '``PBKDF2WithHMAC-SHA1AndDES-EDE3-CBC``'.\n          prot_params : dictionary\n            Parameters of the protection algorithm.\n\n            +------------------+-----------------------------------------------+\n            | Key              | Description                                   |\n            +==================+===============================================+\n            | iteration_count  | The KDF algorithm is repeated several times to|\n            |                  | slow down brute force attacks on passwords    |\n            |                  | (called *N* or CPU/memory cost in scrypt).    |\n            |                  |                                               |\n            |                  | The default value for PBKDF2 is 1 000.        |\n            |                  | The default value for scrypt is 16 384.       |\n            +------------------+-----------------------------------------------+\n            | salt_size        | Salt is used to thwart dictionary and rainbow |\n            |                  | attacks on passwords. The default value is 8  |\n            |                  | bytes.                                        |\n            +------------------+-----------------------------------------------+\n            | block_size       | *(scrypt only)* Memory-cost (r). The default  |\n            |                  | value is 8.                                   |\n            +------------------+-----------------------------------------------+\n            | parallelization  | *(scrypt only)* CPU-cost (p). The default     |\n            |                  | value is 1.                                   |\n            +------------------+-----------------------------------------------+\n\n\n          randfunc : callable\n            Random number generation function; it should accept\n            a single integer N and return a string of random data,\n            N bytes long. If not specified, a new RNG will be\n            instantiated from ``Cryptodome.Random``.\n\n        :Returns:\n          The encrypted data, as a binary string.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "passphrase": {
                        "type": "string"
                    },
                    "protection": {
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "passphrase",
                    "protection"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\IO\\_PBES.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "decrypt",
            "description": "Decrypt a piece of data using a passphrase and *PBES2*.\n\n        The algorithm to use is automatically detected.\n\n        :Parameters:\n          data : byte string\n            The piece of data to decrypt.\n          passphrase : byte string\n            The passphrase to use for decrypting the data.\n        :Returns:\n          The decrypted data, as a binary string.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "passphrase": {
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "passphrase"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\IO\\_PBES.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "__int__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__str__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__repr__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "to_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "from_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "byte_string": {
                        "type": "string"
                    }
                },
                "required": [
                    "byte_string"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "staticmethod",
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__eq__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__ne__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__lt__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__le__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__gt__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__ge__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__nonzero__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "is_negative",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__add__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__sub__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__mul__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "factor": {
                        "type": "string"
                    }
                },
                "required": [
                    "factor"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__floordiv__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "divisor": {
                        "type": "string"
                    }
                },
                "required": [
                    "divisor"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__mod__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "divisor": {
                        "type": "string"
                    }
                },
                "required": [
                    "divisor"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "inplace_pow",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "exponent": {
                        "type": "string"
                    }
                },
                "required": [
                    "exponent"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__pow__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "exponent": {
                        "type": "string"
                    }
                },
                "required": [
                    "exponent"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__abs__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "sqrt",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__iadd__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__isub__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__imul__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__imod__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__and__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__or__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__rshift__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "pos": {
                        "type": "string"
                    }
                },
                "required": [
                    "pos"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__irshift__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "pos": {
                        "type": "string"
                    }
                },
                "required": [
                    "pos"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__lshift__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "pos": {
                        "type": "string"
                    }
                },
                "required": [
                    "pos"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__ilshift__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "pos": {
                        "type": "string"
                    }
                },
                "required": [
                    "pos"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "get_bit",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "n": {
                        "type": "string"
                    }
                },
                "required": [
                    "n"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "is_odd",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "is_even",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "size_in_bits",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "size_in_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "is_perfect_square",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "fail_if_divisible_by",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "small_prime": {
                        "type": "string"
                    }
                },
                "required": [
                    "small_prime"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "multiply_accumulate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "a": {
                        "type": "string"
                    },
                    "b": {
                        "type": "string"
                    }
                },
                "required": [
                    "a",
                    "b"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "set",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "source": {
                        "type": "string"
                    }
                },
                "required": [
                    "source"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "inplace_inverse",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "modulus": {
                        "type": "string"
                    }
                },
                "required": [
                    "modulus"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "inverse",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "modulus": {
                        "type": "string"
                    }
                },
                "required": [
                    "modulus"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "gcd",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "lcm",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term": {
                        "type": "string"
                    }
                },
                "required": [
                    "term"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "jacobi_symbol",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "a": {
                        "type": "string"
                    },
                    "n": {
                        "type": "string"
                    }
                },
                "required": [
                    "a",
                    "n"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "staticmethod",
                "abc.abstractmethod"
            ]
        },
        {
            "name": "_tonelli_shanks",
            "description": "Tonelli-shanks algorithm for computing the square root\n        of n modulo a prime p.\n\n        n must be in the range [0..p-1].\n        p must be at least even.\n\n        The return value r is the square root of modulo p. If non-zero,\n        another solution will also exist (p-r).\n\n        Note we cannot assume that p is really a prime: if it's not,\n        we can either raise an exception or return the correct value.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "n": {
                        "type": "string"
                    },
                    "p": {
                        "type": "string"
                    }
                },
                "required": [
                    "n",
                    "p"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "random",
            "description": "Generate a random natural integer of a certain size.\n\n        :Keywords:\n          exact_bits : positive integer\n            The length in bits of the resulting random Integer number.\n            The number is guaranteed to fulfil the relation:\n\n                2^bits > result >= 2^(bits - 1)\n\n          max_bits : positive integer\n            The maximum length in bits of the resulting random Integer number.\n            The number is guaranteed to fulfil the relation:\n\n                2^bits > result >=0\n\n          randfunc : callable\n            A function that returns a random byte string. The length of the\n            byte string is passed as parameter. Optional.\n            If not provided (or ``None``), randomness is read from the system RNG.\n\n        :Return: a Integer object\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "random_range",
            "description": "Generate a random integer within a given internal.\n\n        :Keywords:\n          min_inclusive : integer\n            The lower end of the interval (inclusive).\n          max_inclusive : integer\n            The higher end of the interval (inclusive).\n          max_exclusive : integer\n            The higher end of the interval (exclusive).\n          randfunc : callable\n            A function that returns a random byte string. The length of the\n            byte string is passed as parameter. Optional.\n            If not provided (or ``None``), randomness is read from the system RNG.\n        :Returns:\n            An Integer randomly taken in the given interval.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_mult_modulo_bytes",
            "description": "Multiply two integers, take the modulo, and encode as big endian.\n        This specialized method is used for RSA decryption.\n\n        Args:\n          term1 : integer\n            The first term of the multiplication, non-negative.\n          term2 : integer\n            The second term of the multiplication, non-negative.\n          modulus: integer\n            The modulus, a positive odd number.\n        :Returns:\n            A byte string, with the result of the modular multiplication\n            encoded in big endian mode.\n            It is as long as the modulus would be, with zero padding\n            on the left if needed.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term1": {
                        "type": "string",
                        "description": "integer"
                    },
                    "term2": {
                        "type": "string",
                        "description": "integer"
                    },
                    "modulus": {
                        "type": "string",
                        "description": "integer"
                    }
                },
                "required": [
                    "term1",
                    "term2",
                    "modulus"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerBase.py",
            "decorator": [
                "staticmethod",
                "abc.abstractmethod"
            ]
        },
        {
            "name": "from_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "byte_string": {
                        "type": "string"
                    }
                },
                "required": [
                    "byte_string"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerCustom.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_mult_modulo_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term1": {
                        "type": "string"
                    },
                    "term2": {
                        "type": "string"
                    },
                    "modulus": {
                        "type": "string"
                    }
                },
                "required": [
                    "term1",
                    "term2",
                    "modulus"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerCustom.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "from_bytes",
            "description": "Convert a byte string into a number.\n\n        :Parameters:\n          byte_string : byte string\n            The input number, encoded in network order.\n            It can only be non-negative.\n          byteorder : string\n            'big' for big-endian integers (default), 'little' for litte-endian.\n\n        :Return:\n          The ``Integer`` object carrying the same value as the input.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "byte_string": {
                        "type": "string"
                    }
                },
                "required": [
                    "byte_string"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerGMP.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "jacobi_symbol",
            "description": "Compute the Jacobi symbol",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "a": {
                        "type": "string"
                    },
                    "n": {
                        "type": "string"
                    }
                },
                "required": [
                    "a",
                    "n"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerGMP.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_mult_modulo_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term1": {
                        "type": "string"
                    },
                    "term2": {
                        "type": "string"
                    },
                    "modulus": {
                        "type": "string"
                    }
                },
                "required": [
                    "term1",
                    "term2",
                    "modulus"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerGMP.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "from_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "byte_string": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "byte_string"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerNative.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "jacobi_symbol",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "a": {
                        "type": "string"
                    },
                    "n": {
                        "type": "string"
                    }
                },
                "required": [
                    "a",
                    "n"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerNative.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_mult_modulo_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "term1": {
                        "type": "string"
                    },
                    "term2": {
                        "type": "string"
                    },
                    "modulus": {
                        "type": "string"
                    }
                },
                "required": [
                    "term1",
                    "term2",
                    "modulus"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Math\\_IntegerNative.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_encap",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Protocol\\HPKE.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_decap",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Protocol\\HPKE.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_verify_psk_inputs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Protocol\\HPKE.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "new",
            "description": "Create a new S2V PRF.\n\n        :Parameters:\n          key : byte string\n            A secret that can be used as key for CMACs\n            based on ciphers from ``ciphermod``.\n          ciphermod : module\n            A block cipher module from `Cryptodome.Cipher`.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "ciphermod": {
                        "type": "string"
                    }
                },
                "required": [
                    "key",
                    "ciphermod"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Protocol\\KDF.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "split",
            "description": "Split a secret into ``n`` shares.\n\n        The secret can be reconstructed later using just ``k`` shares\n        out of the original ``n``.\n        Each share must be kept confidential to the person it was\n        assigned to.\n\n        Each share is associated to an index (starting from 1).\n\n        Args:\n          k (integer):\n            The number of shares needed to reconstruct the secret.\n          n (integer):\n            The number of shares to create (at least ``k``).\n          secret (byte string):\n            A byte string of 16 bytes (e.g. an AES 128 key).\n          ssss (bool):\n            If ``True``, the shares can be used with the ``ssss`` utility\n            (without using the \"diffusion layer\").\n            Default: ``False``.\n\n        Return (tuples):\n            ``n`` tuples, one per participant.\n            A tuple contains two items:\n\n            1. the unique index (an integer)\n            2. the share (16 bytes)\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "k": {
                        "type": "integer"
                    },
                    "n": {
                        "type": "integer"
                    },
                    "secret": {
                        "type": "string"
                    }
                },
                "required": [
                    "k",
                    "n",
                    "secret"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Protocol\\SecretSharing.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "combine",
            "description": "Recombine a secret, if enough shares are presented.\n\n        Args:\n          shares (tuples):\n            The *k* tuples, each containing the index (an integer) and\n            the share (a byte string, 16 bytes long) that were assigned to\n            a participant.\n\n            .. note::\n\n                Pass exactly as many share as they are required,\n                and no more.\n\n          ssss (bool):\n            If ``True``, the shares were produced by the ``ssss`` utility\n            (without using the \"diffusion layer\").\n            Default: ``False``.\n\n        Return:\n            The original secret, as a byte string (16 bytes long).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "shares": {
                        "type": "string"
                    }
                },
                "required": [
                    "shares"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Protocol\\SecretSharing.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "d",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\PublicKey\\ECC.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "seed",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\PublicKey\\ECC.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pointQ",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\PublicKey\\ECC.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "x",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\PublicKey\\_point.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "y",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\PublicKey\\_point.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "xy",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\PublicKey\\_point.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "x",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\PublicKey\\_point.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "create_test",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "factory": {
                        "type": "string"
                    },
                    "key_size": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "name",
                    "factory",
                    "key_size"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\SelfTest\\Cipher\\test_EAX.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "new",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    }
                },
                "required": [
                    "key"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\SelfTest\\Hash\\test_Poly1305.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "new",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    }
                },
                "required": [
                    "key"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\SelfTest\\Hash\\test_Poly1305.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_definite_form",
            "description": "Build length octets according to BER/DER\n                definite form.\n                ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "length": {
                        "type": "string"
                    }
                },
                "required": [
                    "length"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Util\\asn1.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get",
            "description": "Return the memory location we point to",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Util\\_raw_api.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "address_of",
            "description": "Return a raw pointer to this pointer",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\Cryptodome\\Util\\_raw_api.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "cli",
            "description": "This script is used to set, get or unset values from a .env file.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\dotenv\\cli.py",
            "decorator": [
                "click.group",
                "click.option",
                "click.option",
                "click.option",
                "click.version_option",
                "click.pass_context"
            ]
        },
        {
            "name": "stream_file",
            "description": "\n    Open a file and yield the corresponding (decoded) stream.\n\n    Exits with error code 2 if the file cannot be opened.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\dotenv\\cli.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "list",
            "description": "Display all the stored key/value.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\dotenv\\cli.py",
            "decorator": [
                "cli.command",
                "click.pass_context",
                "click.option"
            ]
        },
        {
            "name": "set",
            "description": "Store the given key/value.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\dotenv\\cli.py",
            "decorator": [
                "cli.command",
                "click.pass_context",
                "click.argument",
                "click.argument"
            ]
        },
        {
            "name": "get",
            "description": "Retrieve the value for the given key.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\dotenv\\cli.py",
            "decorator": [
                "cli.command",
                "click.pass_context",
                "click.argument"
            ]
        },
        {
            "name": "unset",
            "description": "Removes the given key.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\dotenv\\cli.py",
            "decorator": [
                "cli.command",
                "click.pass_context",
                "click.argument"
            ]
        },
        {
            "name": "run",
            "description": "Run command with environment variables present.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\dotenv\\cli.py",
            "decorator": [
                "cli.command",
                "click.pass_context",
                "click.option",
                "click.argument"
            ]
        },
        {
            "name": "dotenv",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "line": {
                        "type": "string"
                    }
                },
                "required": [
                    "line"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\dotenv\\ipython.py",
            "decorator": [
                "magic_arguments",
                "argument",
                "argument",
                "argument",
                "line_magic"
            ]
        },
        {
            "name": "_get_stream",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\dotenv\\main.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "rewrite",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\dotenv\\main.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "start",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\dotenv\\parser.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "resolve",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\dotenv\\variables.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "states",
            "description": "A dictionary like::\n\n           {CLIENT: <client state>, SERVER: <server state>}\n\n        See :ref:`state-machine` for details.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\h11\\_connection.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "our_state",
            "description": "The current state of whichever role we are playing. See\n        :ref:`state-machine` for details.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\h11\\_connection.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "their_state",
            "description": "The current state of whichever role we are NOT playing. See\n        :ref:`state-machine` for details.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\h11\\_connection.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "they_are_waiting_for_100_continue",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\h11\\_connection.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "trailing_data",
            "description": "Data that has been received, but not yet processed, represented as\n        a tuple with two elements, where the first is a byte-string containing\n        the unprocessed data itself, and the second is a bool that is True if\n        the receive connection was closed.\n\n        See :ref:`switching-protocols` for discussion of why you'd want this.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\h11\\_connection.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "send",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\h11\\_connection.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "send",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\h11\\_connection.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "send",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\h11\\_connection.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "normalize_and_validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\h11\\_headers.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "normalize_and_validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\h11\\_headers.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "normalize_and_validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\h11\\_headers.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "stream",
            "description": "\n    Sends an HTTP request, returning the response within a content manager.\n\n    ```\n    with httpcore.stream(\"GET\", \"https://www.example.com/\") as response:\n        ...\n    ```\n\n    When using the `stream()` function, the body of the response will not be\n    automatically read. If you want to access the response body you should\n    either use `content = response.read()`, or `for chunk in response.iter_content()`.\n\n    Arguments:\n        method: The HTTP method for the request. Typically one of `\"GET\"`,\n            `\"OPTIONS\"`, `\"HEAD\"`, `\"POST\"`, `\"PUT\"`, `\"PATCH\"`, or `\"DELETE\"`.\n        url: The URL of the HTTP request. Either as an instance of `httpcore.URL`,\n            or as str/bytes.\n        headers: The HTTP request headers. Either as a dictionary of str/bytes,\n            or as a list of two-tuples of str/bytes.\n        content: The content of the request body. Either as bytes,\n            or as a bytes iterator.\n        extensions: A dictionary of optional extra information included on the request.\n            Possible keys include `\"timeout\"`.\n\n    Returns:\n        An instance of `httpcore.Response`.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpcore\\_api.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "map_exceptions",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpcore\\_exceptions.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "origin",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpcore\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "content",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpcore\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "connections",
            "description": "\n        Return a list of the connections currently in the pool.\n\n        For example:\n\n        ```python\n        >>> pool.connections\n        [\n            <AsyncHTTPConnection ['https://example.com:443', HTTP/1.1, ACTIVE, Request Count: 6]>,\n            <AsyncHTTPConnection ['https://example.com:443', HTTP/1.1, IDLE, Request Count: 9]> ,\n            <AsyncHTTPConnection ['http://example.com:80', HTTP/1.1, IDLE, Request Count: 1]>,\n        ]\n        ```\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpcore\\_async\\connection_pool.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "stream",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpcore\\_async\\interfaces.py",
            "decorator": [
                "contextlib.asynccontextmanager"
            ]
        },
        {
            "name": "connections",
            "description": "\n        Return a list of the connections currently in the pool.\n\n        For example:\n\n        ```python\n        >>> pool.connections\n        [\n            <HTTPConnection ['https://example.com:443', HTTP/1.1, ACTIVE, Request Count: 6]>,\n            <HTTPConnection ['https://example.com:443', HTTP/1.1, IDLE, Request Count: 9]> ,\n            <HTTPConnection ['http://example.com:80', HTTP/1.1, IDLE, Request Count: 1]>,\n        ]\n        ```\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpcore\\_sync\\connection_pool.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "stream",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpcore\\_sync\\interfaces.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "stream",
            "description": "\n    Alternative to `httpx.request()` that streams the response body\n    instead of loading it into memory at once.\n\n    **Parameters**: See `httpx.request`.\n\n    See also: [Streaming Responses][0]\n\n    [0]: /quickstart#streaming-responses\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_api.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "is_closed",
            "description": "\n        Check if the client being closed\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "trust_env",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "timeout",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "timeout",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "timeout.setter"
            ]
        },
        {
            "name": "event_hooks",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "event_hooks",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "event_hooks.setter"
            ]
        },
        {
            "name": "auth",
            "description": "\n        Authentication class used when none is passed at the request-level.\n\n        See also [Authentication][0].\n\n        [0]: /quickstart/#authentication\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "auth",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "auth.setter"
            ]
        },
        {
            "name": "base_url",
            "description": "\n        Base URL to use when sending requests with relative URLs.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "base_url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "base_url.setter"
            ]
        },
        {
            "name": "headers",
            "description": "\n        HTTP headers to include when sending requests.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "headers",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "headers.setter"
            ]
        },
        {
            "name": "cookies",
            "description": "\n        Cookie values to include when sending requests.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cookies",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "cookies.setter"
            ]
        },
        {
            "name": "params",
            "description": "\n        Query parameters to include in the URL when sending requests.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "params",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "params.setter"
            ]
        },
        {
            "name": "stream",
            "description": "\n        Alternative to `httpx.request()` that streams the response body\n        instead of loading it into memory at once.\n\n        **Parameters**: See `httpx.request`.\n\n        See also: [Streaming Responses][0]\n\n        [0]: /quickstart#streaming-responses\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "stream",
            "description": "\n        Alternative to `httpx.request()` that streams the response body\n        instead of loading it into memory at once.\n\n        **Parameters**: See `httpx.request`.\n\n        See also: [Streaming Responses][0]\n\n        [0]: /quickstart#streaming-responses\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_client.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "raw_auth",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_config.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "main",
            "description": "\n    An HTTP command line client.\n    Sends a request and displays the response.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_main.py",
            "decorator": [
                "click.command",
                "click.argument",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option"
            ]
        },
        {
            "name": "encoding",
            "description": "\n        Header encoding is mandated as ascii, but we allow fallbacks to utf-8\n        or iso-8859-1.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "encoding",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "encoding.setter"
            ]
        },
        {
            "name": "raw",
            "description": "\n        Returns a list of the raw header items, as byte pairs.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "content",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "elapsed",
            "description": "\n        Returns the time taken for the complete request/response\n        cycle to complete.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "elapsed",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "elapsed.setter"
            ]
        },
        {
            "name": "request",
            "description": "\n        Returns the request instance associated to the current response.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "request",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "request.setter"
            ]
        },
        {
            "name": "http_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "reason_phrase",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "url",
            "description": "\n        Returns the URL for which the request was made.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "content",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "text",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "encoding",
            "description": "\n        Return an encoding to use for decoding the byte content into text.\n        The priority for determining this is given by...\n\n        * `.encoding = <>` has been set explicitly.\n        * The encoding as specified by the charset parameter in the Content-Type header.\n        * The encoding as determined by `default_encoding`, which may either be\n          a string like \"utf-8\" indicating the encoding to use, or may be a callable\n          which enables charset autodetection.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "encoding",
            "description": "\n        Set the encoding to use for decoding the byte content into text.\n\n        If the `text` attribute has been accessed, attempting to set the\n        encoding will throw a ValueError.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "encoding.setter"
            ]
        },
        {
            "name": "charset_encoding",
            "description": "\n        Return the encoding, as specified by the Content-Type header.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_informational",
            "description": "\n        A property which is `True` for 1xx status codes, `False` otherwise.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_success",
            "description": "\n        A property which is `True` for 2xx status codes, `False` otherwise.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_redirect",
            "description": "\n        A property which is `True` for 3xx status codes, `False` otherwise.\n\n        Note that not all responses with a 3xx status code indicate a URL redirect.\n\n        Use `response.has_redirect_location` to determine responses with a properly\n        formed URL redirection.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_client_error",
            "description": "\n        A property which is `True` for 4xx status codes, `False` otherwise.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_server_error",
            "description": "\n        A property which is `True` for 5xx status codes, `False` otherwise.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_error",
            "description": "\n        A property which is `True` for 4xx and 5xx status codes, `False` otherwise.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "has_redirect_location",
            "description": "\n        Returns True for 3xx responses with a properly formed URL redirection,\n        `False` otherwise.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cookies",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "links",
            "description": "\n        Returns the parsed header links of the response, if any\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "num_bytes_downloaded",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "get_reason_phrase",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_status_codes.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_informational",
            "description": "\n        Returns `True` for 1xx status codes, `False` otherwise.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_status_codes.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_success",
            "description": "\n        Returns `True` for 2xx status codes, `False` otherwise.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_status_codes.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_redirect",
            "description": "\n        Returns `True` for 3xx status codes, `False` otherwise.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_status_codes.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_client_error",
            "description": "\n        Returns `True` for 4xx status codes, `False` otherwise.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_status_codes.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_server_error",
            "description": "\n        Returns `True` for 5xx status codes, `False` otherwise.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_status_codes.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_error",
            "description": "\n        Returns `True` for 4xx or 5xx status codes, `False` otherwise.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_status_codes.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "authority",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_urlparse.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "netloc",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_urlparse.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "priority",
            "description": "\n        The priority allows URLPattern instances to be sortable, so that\n        we can match from most specific to least specific.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_utils.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "map_httpcore_exceptions",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx\\_transports\\default.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "response",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx_sse\\_api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "connect_sse",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx_sse\\_api.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "aconnect_sse",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx_sse\\_api.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "event",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx_sse\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "data",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx_sse\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "id",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx_sse\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "retry",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\httpx_sse\\_models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "version",
            "description": "Show the MCP version.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\cli\\cli.py",
            "decorator": [
                "app.command"
            ]
        },
        {
            "name": "dev",
            "description": "Run a MCP server with the MCP Inspector.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\cli\\cli.py",
            "decorator": [
                "app.command"
            ]
        },
        {
            "name": "run",
            "description": "Run a MCP server.\n\n    The server can be specified in two ways:\\n\n    1. Module approach: server.py - runs the module directly, expecting a server.run() call.\\n\n    2. Import approach: server.py:app - imports and runs the specified server object.\\n\\n\n\n    Note: This command runs the server directly. You are responsible for ensuring\n    all dependencies are available.\\n\n    For dependency management, use `mcp install` or `mcp dev` instead.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\cli\\cli.py",
            "decorator": [
                "app.command"
            ]
        },
        {
            "name": "install",
            "description": "Install a MCP server in the Claude desktop app.\n\n    Environment variables are preserved once added and only updated if new values\n    are explicitly provided.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\cli\\cli.py",
            "decorator": [
                "app.command"
            ]
        },
        {
            "name": "sse_client",
            "description": "\n    Client transport for SSE.\n\n    `sse_read_timeout` determines how long (in seconds) the client will wait for a new\n    event before disconnecting. All other HTTP operations are controlled by `timeout`.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\client\\sse.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "websocket_client",
            "description": "\n    WebSocket client transport for MCP, symmetrical to the server version.\n\n    Connects to 'url' using the 'mcp' subprotocol, then yields:\n        (read_stream, write_stream)\n\n    - read_stream: As you read from this stream, you'll receive either valid\n      JSONRPCMessage objects or Exception objects (when validation fails).\n    - write_stream: Write JSONRPCMessage objects to this stream to send them\n      over the WebSocket to the server.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\client\\websocket.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "stdio_client",
            "description": "\n    Client transport for stdio: this will connect to a server by spawning a\n    process and communicating with it over stdin/stdout.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\client\\stdio\\__init__.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "client_params",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\session.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "incoming_messages",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\session.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "connect_sse",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\sse.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "stdio_server",
            "description": "\n    Server transport for stdio: this communicates with an MCP client by reading\n    from the current process' stdin and writing to stdout.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\stdio.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "websocket_server",
            "description": "\n    WebSocket server transport for MCP. This is an ASGI application, suitable to be\n    used with a framework like Starlette and a server like Hypercorn.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\websocket.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "wrap",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\server.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "instructions",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "fastmcp",
            "description": "Access to the FastMCP server.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "request_context",
            "description": "Access to the underlying request context.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "client_id",
            "description": "Get the client ID if available.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "request_id",
            "description": "Get the unique ID for this request.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "session",
            "description": "Access to the underlying session for advanced usage.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_function",
            "description": "Create a Prompt from a function.\n\n        The function can return:\n        - A string (converted to a message)\n        - A Message object\n        - A dict (converted to a message)\n        - A sequence of any of the above\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\prompts\\base.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "set_default_name",
            "description": "Set default name from URI if not provided.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\resources\\base.py",
            "decorator": [
                "field_validator",
                "classmethod"
            ]
        },
        {
            "name": "read",
            "description": "Read the resource content.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\resources\\base.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "from_function",
            "description": "Create a template from a function.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\resources\\templates.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate_absolute_path",
            "description": "Ensure path is absolute.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\resources\\types.py",
            "decorator": [
                "pydantic.field_validator",
                "classmethod"
            ]
        },
        {
            "name": "set_binary_from_mime_type",
            "description": "Set is_binary based on mime_type if not explicitly set.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\resources\\types.py",
            "decorator": [
                "pydantic.field_validator",
                "classmethod"
            ]
        },
        {
            "name": "validate_absolute_path",
            "description": "Ensure path is absolute.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\resources\\types.py",
            "decorator": [
                "pydantic.field_validator",
                "classmethod"
            ]
        },
        {
            "name": "from_function",
            "description": "Create a Tool from a function.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\fastmcp\\tools\\base.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "lifespan",
            "description": "Default lifespan context manager that does nothing.\n\n    Args:\n        server: The server instance this lifespan is managing\n\n    Returns:\n        An empty context object\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "server": {
                        "type": "string",
                        "description": "The server instance this lifespan is managing"
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "server",
                    "Returns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\lowlevel\\server.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "request_context",
            "description": "If called outside of a request context, this will raise a LookupError.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\server\\lowlevel\\server.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "create_client_server_memory_streams",
            "description": "\n    Creates a pair of bidirectional memory streams for client-server communication.\n\n    Returns:\n        A tuple of (client_streams, server_streams) where each is a tuple of\n        (read_stream, write_stream)\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\shared\\memory.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "create_connected_server_and_client_session",
            "description": "Creates a ClientSession that is connected to a running MCP server.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\shared\\memory.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "progress",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\shared\\progress.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "in_flight",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\shared\\session.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cancelled",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\mcp\\shared\\session.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "find_spec",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "fullname": {
                        "type": "string"
                    }
                },
                "required": [
                    "fullname"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\__pip-runner__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_install_requirements",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\build_env.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "record_download_origin",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\cache.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_dictionary",
            "description": "A dictionary representing the loaded configuration.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\configuration.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "key",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\self_outdated_check.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "exc_logging_wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\cli\\base_command.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "main_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\cli\\command_context.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "option_list_all",
            "description": "Get a list of all options, including those in option groups.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\cli\\parser.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_get_index_urls",
            "description": "Return a list of index urls from user-provided options.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\cli\\req_command.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "determine_resolver_variant",
            "description": "Determines which resolver should be used, based on the given options.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\cli\\req_command.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "make_requirement_preparer",
            "description": "\n        Create a RequirementPreparer instance for the given parameters.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\cli\\req_command.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "make_resolver",
            "description": "\n        Create a Resolver instance for the given parameters.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\cli\\req_command.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "trace_basic_info",
            "description": "\n        Trace basic information about the provided objects.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\cli\\req_command.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "open_spinner",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\cli\\spinners.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "hidden_cursor",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\cli\\spinners.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "run",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\commands\\download.py",
            "decorator": [
                "with_cleanup"
            ]
        },
        {
            "name": "run",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\commands\\install.py",
            "decorator": [
                "with_cleanup"
            ]
        },
        {
            "name": "run",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\commands\\wheel.py",
            "decorator": [
                "with_cleanup"
            ]
        },
        {
            "name": "build_tracker_id",
            "description": "A string that uniquely identifies this requirement to the build tracker.\n\n        If None, then this dist has no work to do in the build tracker, and\n        ``.prepare_distribution_metadata()`` will not be called.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\distributions\\base.py",
            "decorator": [
                "abc.abstractproperty"
            ]
        },
        {
            "name": "get_metadata_distribution",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\distributions\\base.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "prepare_distribution_metadata",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\distributions\\base.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "build_tracker_id",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\distributions\\installed.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "build_tracker_id",
            "description": "Identify this requirement uniquely by its link.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\distributions\\sdist.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "build_tracker_id",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\distributions\\wheel.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\collector.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "wrapper_wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\collector.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "parse_links",
            "description": "\n    Parse a Simple API's Index Content, and yield its anchor elements as Link objects.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\collector.py",
            "decorator": [
                "with_cached_index_content"
            ]
        },
        {
            "name": "create",
            "description": "\n        :param session: The Session to use to make requests.\n        :param suppress_no_index: Whether to ignore the --no-index option\n            when constructing the SearchScope object.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\collector.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "find_links",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\collector.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "create",
            "description": "Create a CandidateEvaluator object.\n\n        :param target_python: The target Python interpreter to use when\n            checking compatibility. If None (the default), a TargetPython\n            object will be constructed from the running Python.\n        :param specifier: An optional object implementing `filter`\n            (e.g. `packaging.specifiers.SpecifierSet`) to filter applicable\n            versions.\n        :param hashes: An optional collection of allowed hashes.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\package_finder.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create",
            "description": "Create a PackageFinder.\n\n        :param selection_prefs: The candidate selection preferences, as a\n            SelectionPreferences object.\n        :param target_python: The target Python interpreter to use when\n            checking compatibility. If None (the default), a TargetPython\n            object will be constructed from the running Python.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\package_finder.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "target_python",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\package_finder.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "search_scope",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\package_finder.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "search_scope",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\package_finder.py",
            "decorator": [
                "search_scope.setter"
            ]
        },
        {
            "name": "find_links",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\package_finder.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "index_urls",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\package_finder.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "trusted_hosts",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\package_finder.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "allow_all_prereleases",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\package_finder.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "prefer_binary",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\package_finder.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "find_all_candidates",
            "description": "Find all available InstallationCandidate for project_name\n\n        This checks index_urls and find_links.\n        All versions found are returned as an InstallationCandidate list.\n\n        See LinkEvaluator.evaluate_link() for details on which files\n        are accepted.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\package_finder.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "find_best_candidate",
            "description": "Find matches for the given project and specifier.\n\n        :param specifier: An optional object implementing `filter`\n            (e.g. `packaging.specifiers.SpecifierSet`) to filter applicable\n            versions.\n\n        :return: A `BestCandidateResult` instance.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\package_finder.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "link",
            "description": "Returns the underlying link, if there's one.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\sources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "page_candidates",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\sources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "project_name_to_urls",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\sources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "link",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\sources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "link",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\sources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "link",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\sources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "link",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\index\\sources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_osx_framework",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\locations\\base.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "_looks_like_red_hat_lib",
            "description": "Red Hat patches platlib in unix_prefix and unix_home, but not purelib.\n\n    This is the only way I can see to tell a Red Hat-patched Python.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\locations\\__init__.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "_looks_like_debian_scheme",
            "description": "Debian adds two additional schemes.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\locations\\__init__.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "_looks_like_red_hat_scheme",
            "description": "Red Hat patches ``sys.prefix`` and ``sys.exec_prefix``.\n\n    Red Hat's ``00251-change-user-install-location.patch`` changes the install\n    command's ``prefix`` and ``exec_prefix`` to append ``\"/local\"``. This is\n    (fortunately?) done quite unconditionally, so we create a default command\n    object without any configuration to detect this.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\locations\\__init__.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "_looks_like_slackware_scheme",
            "description": "Slackware patches sysconfig but fails to patch distutils and site.\n\n    Slackware changes sysconfig's user scheme to use ``\"lib64\"`` for the lib\n    path, but does not do the same to the site module.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\locations\\__init__.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "_looks_like_msys2_mingw_scheme",
            "description": "MSYS2 patches distutils and sysconfig to use a UNIX-like scheme.\n\n    However, MSYS2 incorrectly patches sysconfig ``nt`` scheme. The fix is\n    likely going to be included in their 3.10 release, so we ignore the warning.\n    See msys2/MINGW-packages#9319.\n\n    MSYS2 MINGW's patch uses lowercase ``\"lib\"`` instead of the usual uppercase,\n    and is missing the final ``\"site-packages\"``.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\locations\\__init__.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "_warn_mismatched",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\locations\\__init__.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "_log_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\locations\\__init__.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "group",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_directory",
            "description": "Load the distribution from a metadata directory.\n\n        :param directory: Path to a metadata directory, e.g. ``.dist-info``.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_metadata_file_contents",
            "description": "Load the distribution from the contents of a METADATA file.\n\n        This is used to implement PEP 658 by generating a \"shallow\" dist object that can\n        be used for resolution without downloading or building the actual dist yet.\n\n        :param metadata_contents: The contents of a METADATA file.\n        :param filename: File name for the dist with this metadata.\n        :param project_name: Name of the project this dist represents.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_wheel",
            "description": "Load the distribution from a given wheel.\n\n        :param wheel: A concrete wheel definition.\n        :param name: File name of the wheel.\n\n        :raises InvalidWheel: Whenever loading of the wheel causes a\n            :py:exc:`zipfile.BadZipFile` exception to be thrown.\n        :raises UnsupportedWheel: If the wheel is a valid zip, but malformed\n            internally.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "location",
            "description": "Where the distribution is loaded from.\n\n        A string value is not necessarily a filesystem path, since distributions\n        can be loaded from other sources, e.g. arbitrary zip archives. ``None``\n        means the distribution is created in-memory.\n\n        Do not canonicalize this value with e.g. ``pathlib.Path.resolve()``. If\n        this is a symbolic link, we want to preserve the relative path between\n        it and files in the distribution.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "editable_project_location",
            "description": "The project location for editable distributions.\n\n        This is the directory where pyproject.toml or setup.py is located.\n        None if the distribution is not installed in editable mode.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "installed_location",
            "description": "The distribution's \"installed\" location.\n\n        This should generally be a ``site-packages`` directory. This is\n        usually ``dist.location``, except for legacy develop-installed packages,\n        where ``dist.location`` is the source code location, and this is where\n        the ``.egg-link`` file is.\n\n        The returned location is normalized (in particular, with symlinks removed).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "info_location",
            "description": "Location of the .[egg|dist]-info directory or file.\n\n        Similarly to ``location``, a string value is not necessarily a\n        filesystem path. ``None`` means the distribution is created in-memory.\n\n        For a modern .dist-info installation on disk, this should be something\n        like ``{location}/{raw_name}-{version}.dist-info``.\n\n        Do not canonicalize this value with e.g. ``pathlib.Path.resolve()``. If\n        this is a symbolic link, we want to preserve the relative path between\n        it and other files in the distribution.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "installed_by_distutils",
            "description": "Whether this distribution is installed with legacy distutils format.\n\n        A distribution installed with \"raw\" distutils not patched by setuptools\n        uses one single file at ``info_location`` to store metadata. We need to\n        treat this specially on uninstallation.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "installed_as_egg",
            "description": "Whether this distribution is installed as an egg.\n\n        This usually indicates the distribution was installed by (older versions\n        of) easy_install.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "installed_with_setuptools_egg_info",
            "description": "Whether this distribution is installed with the ``.egg-info`` format.\n\n        This usually indicates the distribution was installed with setuptools\n        with an old pip version or with ``single-version-externally-managed``.\n\n        Note that this ensure the metadata store is a directory. distutils can\n        also installs an ``.egg-info``, but as a file, not a directory. This\n        property is *False* for that case. Also see ``installed_by_distutils``.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "installed_with_dist_info",
            "description": "Whether this distribution is installed with the \"modern format\".\n\n        This indicates a \"modern\" installation, e.g. storing metadata in the\n        ``.dist-info`` directory. This applies to installations made by\n        setuptools (but through pip, not directly), or anything using the\n        standardized build backend interface (PEP 517).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "canonical_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "setuptools_filename",
            "description": "Convert a project name to its setuptools-compatible filename.\n\n        This is a copy of ``pkg_resources.to_filename()`` for compatibility.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "direct_url",
            "description": "Obtain a DirectUrl from this distribution.\n\n        Returns None if the distribution has no `direct_url.json` metadata,\n        or if `direct_url.json` is invalid.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "installer",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "requested",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "editable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "local",
            "description": "If distribution is installed in the current virtual environment.\n\n        Always True if we're not in a virtualenv.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "in_usersite",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "in_site_packages",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_metadata_cached",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "metadata",
            "description": "Metadata of distribution parsed from e.g. METADATA or PKG-INFO.\n\n        This should return an empty message if the metadata file is unavailable.\n\n        :raises NoneMetadataError: If the metadata file is available, but does\n            not contain valid metadata.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "metadata_dict",
            "description": "PEP 566 compliant JSON-serializable representation of METADATA or PKG-INFO.\n\n        This should return an empty dict if the metadata file is unavailable.\n\n        :raises NoneMetadataError: If the metadata file is available, but does\n            not contain valid metadata.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "metadata_version",
            "description": "Value of \"Metadata-Version:\" in distribution metadata, if available.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "raw_name",
            "description": "Value of \"Name:\" in distribution metadata.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "requires_python",
            "description": "Value of \"Requires-Python:\" in distribution metadata.\n\n        If the key does not exist or contains an invalid value, an empty\n        SpecifierSet should be returned.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_paths",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\base.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_directory",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_metadata_file_contents",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_wheel",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "location",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "installed_location",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "info_location",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "installed_by_distutils",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "canonical_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_paths",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "select_backend",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\__init__.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_compat.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "parent",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_compat.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_zipfile",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_dists.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_directory",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_dists.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_metadata_file_contents",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_dists.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_wheel",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_dists.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "location",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_dists.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "info_location",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_dists.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "installed_location",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_dists.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "canonical_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_dists.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_dists.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_emit_egg_deprecation",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_envs.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_envs.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_paths",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\metadata\\importlib\\_envs.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_from_dict",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\direct_url.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "hash",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\direct_url.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "hash",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\direct_url.py",
            "decorator": [
                "hash.setter"
            ]
        },
        {
            "name": "_from_dict",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\direct_url.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_from_dict",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\direct_url.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "redacted_url",
            "description": "url with user:password part removed unless it is formed with\n        environment variables as specified in PEP 610, or it is ``git``\n        in the case of a git URL.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\direct_url.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_dict",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\direct_url.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_json",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\direct_url.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "handle_mutual_excludes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\format_control.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_install_req_to_dict",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\installation_report.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "find_hash_url_fragment",
            "description": "Search a string for a checksum algorithm name and encoded output value.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "classmethod",
                "functools.lru_cache"
            ]
        },
        {
            "name": "from_json",
            "description": "\n        Convert an pypi json document from a simple repository page into a Link.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_element",
            "description": "\n        Convert an anchor element's attributes in a simple repository page to a Link.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "filename",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "file_path",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "scheme",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "netloc",
            "description": "\n        This can contain auth information.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "path",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ext",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "url_without_fragment",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "subdirectory_fragment",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "hash",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "hash_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "show_url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_file",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_wheel",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_vcs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_yanked",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "has_hash",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "links_equivalent",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\link.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "create",
            "description": "\n        Create a SearchScope object after normalizing the `find_links`.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\models\\search_scope.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_auth_info",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\network\\auth.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "save_auth_info",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\network\\auth.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "get_keyring_provider",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\network\\auth.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "PATH_as_shutil_which_determines_it",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\network\\auth.py",
            "decorator": [
                "typing.no_type_check"
            ]
        },
        {
            "name": "keyring_provider",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\network\\auth.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "keyring_provider",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\network\\auth.py",
            "decorator": [
                "keyring_provider.setter"
            ]
        },
        {
            "name": "use_keyring",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\network\\auth.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "suppressed_cache_errors",
            "description": "If we can't access the cache then we can just skip caching and process\n    requests as if caching wasn't enabled.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\network\\cache.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "mode",
            "description": "Opening mode, which is always rb.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "Path to the underlying file.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "closed",
            "description": "Whether the file is closed.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_stay",
            "description": "Return a context manager keeping the position.\n\n        At the end of the block, seek back to original position.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "from_dist",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\operations\\freeze.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_generate_file",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\operations\\install\\wheel.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "req_error_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\operations\\install\\wheel.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "supports_pyproject_editable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "specifier",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_direct",
            "description": "Whether this requirement was specified as a direct URL.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_pinned",
            "description": "Return whether I am pinned to an exact version.\n\n        For example, some-package==1.2 is pinned; some-package>1.2 is not.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "has_hash_options",
            "description": "Return whether any known-good hashes are specified as options.\n\n        These activate --require-hashes mode; hashes specified as part of a\n        URL do not.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_wheel",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_wheel_from_cache",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "unpacked_source_directory",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "setup_py_path",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "setup_cfg_path",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pyproject_toml_path",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "metadata",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_install.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_requirements",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_set.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "requirements_to_install",
            "description": "Return the list of requirements that need to be installed.\n\n        TODO remove this property together with the legacy resolver, since the new\n             resolver only returns requirements that need to be installed.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_set.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "unique",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_uninstall.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "uninstallation_paths",
            "description": "\n    Yield all the uninstallation paths for dist based on RECORD-without-.py[co]\n\n    Yield paths to all the files in RECORD. For each .py file in RECORD, add\n    the .pyc and .pyo in the same directory.\n\n    UninstallPathSet.add() takes care of the __pycache__ .py[co].\n\n    If RECORD is not found, raises UninstallationError,\n    with possible information from the INSTALLER file.\n\n    https://packaging.python.org/specifications/recording-installed-packages/\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_uninstall.py",
            "decorator": [
                "_unique"
            ]
        },
        {
            "name": "can_rollback",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_uninstall.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_dist",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\req\\req_uninstall.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "empty",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\base.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_ireq",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\base.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "project_name",
            "description": "The \"project name\" of a requirement.\n\n        This is different from ``name`` if this requirement contains extras,\n        in which case ``name`` would contain the ``[...]`` part, while this\n        refers to the name of the project.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "The name identifying this requirement in the resolver.\n\n        This is different from ``project_name`` if this requirement contains\n        extras, where ``project_name`` would not contain the ``[...]`` part.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "project_name",
            "description": "The \"project name\" of the candidate.\n\n        This is different from ``name`` if this candidate contains extras,\n        in which case ``name`` would contain the ``[...]`` part, while this\n        refers to the name of the project.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "The name identifying this candidate in the resolver.\n\n        This is different from ``project_name`` if this candidate contains\n        extras, where ``project_name`` would not contain the ``[...]`` part.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_installed",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_editable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "source_link",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "source_link",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "project_name",
            "description": "The normalised name of the project the candidate refers to",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "project_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_editable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "project_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "The normalised name of the project the candidate refers to",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_installed",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_editable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "source_link",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "project_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "force_reinstall",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__bool__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "is_backtrack_cause",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\provider.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "project_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\requirements.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\requirements.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "project_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\requirements.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\requirements.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "project_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\requirements.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\requirements.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "project_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\requirements.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\resolution\\resolvelib\\requirements.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "adjacent_tmp_file",
            "description": "Return a file-like object pointing to a tmp file next to path.\n\n    The file is created securely and is ensured to be written to disk\n    after the context reaches its end.\n\n    kwargs will be passed to tempfile.NamedTemporaryFile to control\n    the way the temporary file will be opened.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\filesystem.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "digest_count",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\hashes.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "indent_log",
            "description": "\n    A context manager which will cause the log output to be indented for any\n    log messages emitted inside it.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\logging.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "rmtree",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\misc.py",
            "decorator": [
                "retry"
            ]
        },
        {
            "name": "from_stream",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\misc.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "encoding",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\misc.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "captured_output",
            "description": "Return a context manager used by captured_stdout/stdin/stderr\n    that temporarily replaces the sys stream *stream_name* with a StringIO.\n\n    Taken from Lib/support/__init__.py in the CPython repo.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\misc.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "get_requirement",
            "description": "Construct a packaging.Requirement object with caching",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\packaging.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "global_tempdir_manager",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\temp_dir.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "tempdir_registry",
            "description": "Provides a scoped global tempdir registry that can be used to dictate\n    whether directories should be deleted.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\temp_dir.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "path",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\temp_dir.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_generate_names",
            "description": "Generates a series of temporary names.\n\n        The algorithm replaces the leading characters in the name\n        with ones that are valid filesystem characters, but are not\n        valid package names (for both Python and pip definitions of\n        package).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\temp_dir.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "yield_lines",
            "description": "r\"\"\"\n    Yield valid lines of a string or iterable.\n\n    >>> list(yield_lines(''))\n    []\n    >>> list(yield_lines(['foo', 'bar']))\n    ['foo', 'bar']\n    >>> list(yield_lines('foo\\nbar'))\n    ['foo', 'bar']\n    >>> list(yield_lines('\\nfoo\\n#bar\\nbaz #comment'))\n    ['foo', 'baz #comment']\n    >>> list(yield_lines(['foo\\nbar', 'baz', 'bing\\n\\n\\n']))\n    ['foo', 'bar', 'baz', 'bing']\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "iterable": {
                        "type": "string"
                    }
                },
                "required": [
                    "iterable"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\_jaraco_text.py",
            "decorator": [
                "functools.singledispatch"
            ]
        },
        {
            "name": "_",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    }
                },
                "required": [
                    "text"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\utils\\_jaraco_text.py",
            "decorator": [
                "yield_lines.register"
            ]
        },
        {
            "name": "get_base_rev_args",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\bazaar.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get_url_rev_and_auth",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\bazaar.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_remote_url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\bazaar.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_revision",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\bazaar.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_commit_id_equal",
            "description": "Always assume the versions don't match",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\bazaar.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_base_rev_args",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get_current_branch",
            "description": "\n        Return the current branch, or None if HEAD isn't at a branch\n        (e.g. detached HEAD).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_revision_sha",
            "description": "\n        Return (sha_or_none, is_branch), where sha_or_none is a commit hash\n        if the revision names a remote branch or tag, otherwise None.\n\n        Args:\n          dest: the repository directory.\n          rev: the revision name.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_should_fetch",
            "description": "\n        Return true if rev is a ref or is a commit that we don't have locally.\n\n        Branches and tags are not considered in this method because they are\n        assumed to be always available locally (which is a normal outcome of\n        ``git clone`` and ``git fetch --tags``).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "resolve_revision",
            "description": "\n        Resolve a revision to a new RevOptions object with the SHA1 of the\n        branch, tag, or ref if found.\n\n        Args:\n          rev_options: a RevOptions object.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_commit_id_equal",
            "description": "\n        Return whether the current commit hash equals the given name.\n\n        Args:\n          dest: the repository directory.\n          name: a string name.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_remote_url",
            "description": "\n        Return URL of the first remote encountered.\n\n        Raises RemoteNotFoundError if the repository does not have a remote\n        url configured.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_git_remote_to_pip_url",
            "description": "\n        Convert a remote url from what git uses to what pip accepts.\n\n        There are 3 legal forms **url** may take:\n\n            1. A fully qualified url: ssh://git@example.com/foo/bar.git\n            2. A local project.git folder: /path/to/bare/repository.git\n            3. SCP shorthand for form 1: git@example.com:foo/bar.git\n\n        Form 1 is output as-is. Form 2 must be converted to URI and form 3 must\n        be converted to form 1.\n\n        See the corresponding test test_git_remote_url_to_pip() for examples of\n        sample inputs/outputs.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "has_commit",
            "description": "\n        Check if rev is a commit that is available in the local repository.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_revision",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_subdirectory",
            "description": "\n        Return the path to Python project root, relative to the repo root.\n        Return None if the project root is in the repo root.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_url_rev_and_auth",
            "description": "\n        Prefixes stub URLs like 'user@hostname:user/repo.git' with 'ssh://'.\n        That's required because although they use SSH they sometimes don't\n        work with a ssh:// scheme (e.g. GitHub). But we need a scheme for\n        parsing. Hence we remove it again afterwards and return it as a stub.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update_submodules",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_repository_root",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "should_add_vcs_url_prefix",
            "description": "In either https or ssh form, requirements must be prefixed with git+.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\git.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get_base_rev_args",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\mercurial.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get_remote_url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\mercurial.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_revision",
            "description": "\n        Return the repository-local changeset revision number, as an integer.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\mercurial.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_requirement_revision",
            "description": "\n        Return the changeset identification hash, as a 40-character\n        hexadecimal string\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\mercurial.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_commit_id_equal",
            "description": "Always assume the versions don't match",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\mercurial.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_subdirectory",
            "description": "\n        Return the path to Python project root, relative to the repo root.\n        Return None if the project root is in the repo root.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\mercurial.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_repository_root",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\mercurial.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "should_add_vcs_url_prefix",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\subversion.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_base_rev_args",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\subversion.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get_revision",
            "description": "\n        Return the maximum revision for all files under a given location\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\subversion.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_netloc_and_auth",
            "description": "\n        This override allows the auth information to be passed to svn via the\n        --username and --password options instead of via the URL.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\subversion.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_url_rev_and_auth",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\subversion.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "make_rev_args",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\subversion.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get_remote_url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\subversion.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_svn_url_rev",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\subversion.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_commit_id_equal",
            "description": "Always assume the versions don't match",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\subversion.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "arg_rev",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "backends",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "dirnames",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "all_schemes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "should_add_vcs_url_prefix",
            "description": "\n        Return whether the vcs prefix (e.g. \"git+\") should be added to a\n        repository's remote url when used in a requirement.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_subdirectory",
            "description": "\n        Return the path to Python project root, relative to the repo root.\n        Return None if the project root is in the repo root.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_requirement_revision",
            "description": "\n        Return the revision string that should be used in a requirement.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_src_requirement",
            "description": "\n        Return the requirement string to use to redownload the files\n        currently at the given repository directory.\n\n        Args:\n          project_name: the (unescaped) project name.\n\n        The return value has a form similar to the following:\n\n            {repository_url}@{revision}#egg={project_name}\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_base_rev_args",
            "description": "\n        Return the base revision arguments for a vcs command.\n\n        Args:\n          rev: the name of a revision to install.  Cannot be None.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "rev": {
                        "type": "string",
                        "description": "the name of a revision to install.  Cannot be None."
                    }
                },
                "required": [
                    "rev"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "make_rev_options",
            "description": "\n        Return a RevOptions object.\n\n        Args:\n          rev: the name of a revision to install.\n          extra_args: a list of extra options.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_is_local_repository",
            "description": "\n        posix absolute paths start with os.path.sep,\n        win32 ones start with drive (like c:\\\\folder)\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_netloc_and_auth",
            "description": "\n        Parse the repository URL's netloc, and return the new netloc to use\n        along with auth information.\n\n        Args:\n          netloc: the original repository URL netloc.\n          scheme: the repository URL's scheme without the vcs prefix.\n\n        This is mainly for the Subversion class to override, so that auth\n        information can be provided via the --username and --password options\n        instead of through the URL.  For other subclasses like Git without\n        such an option, auth information must stay in the URL.\n\n        Returns: (netloc, (username, password)).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_url_rev_and_auth",
            "description": "\n        Parse the repository URL to use, and return the URL, revision,\n        and auth info to use.\n\n        Returns: (url, rev, (username, password)).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "make_rev_args",
            "description": "\n        Return the RevOptions \"extra arguments\" to use in obtain().\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "normalize_url",
            "description": "\n        Normalize a URL for comparison by unquoting it and removing any\n        trailing slash.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "compare_urls",
            "description": "\n        Compare two repo URLs for identity, ignoring incidental differences.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_commit_id_equal",
            "description": "\n        Return whether the id of the current commit equals the given name.\n\n        Args:\n          dest: the repository directory.\n          name: a string name.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_remote_url",
            "description": "\n        Return the url used at location\n\n        Raises RemoteNotFoundError if the repository does not have a remote\n        url configured.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_revision",
            "description": "\n        Return the current commit id of the files at the given location.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "run_command",
            "description": "\n        Run a VCS subcommand\n        This is simply a wrapper around call_subprocess that adds the VCS\n        command name, and checks that the VCS is available\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_repository_directory",
            "description": "\n        Return whether a directory path is a repository directory.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_repository_root",
            "description": "\n        Return the \"root\" (top-level) directory controlled by the vcs,\n        or `None` if the directory is not in any.\n\n        It is meant to be overridden to implement smarter detection\n        mechanisms for specific vcs.\n\n        This can do more than is_repository_directory() alone. For\n        example, the Git override checks that Git is actually available.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__prepare__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "this_bases": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "name",
                    "this_bases"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\six.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_proto_hook",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "other": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "other"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__class_getitem__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "params": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "params"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "typing._tp_cache"
            ]
        },
        {
            "name": "__int__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__float__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__complex__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__bytes__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__index__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__abs__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__round__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "TypedDict",
            "description": "A simple typed namespace. At runtime it is equivalent to a plain dict.\n\n        TypedDict creates a dictionary type such that a type checker will expect all\n        instances to have a certain set of keys, where each key is\n        associated with a value of a consistent type. This expectation\n        is not checked at runtime.\n\n        Usage::\n\n            class Point2D(TypedDict):\n                x: int\n                y: int\n                label: str\n\n            a: Point2D = {'x': 1, 'y': 2, 'label': 'good'}  # OK\n            b: Point2D = {'z': 3, 'label': 'bad'}           # Fails type check\n\n            assert Point2D(x=1, y=2, label='first') == dict(x=1, y=2, label='first')\n\n        The type info can be accessed via the Point2D.__annotations__ dict, and\n        the Point2D.__required_keys__ and Point2D.__optional_keys__ frozensets.\n        TypedDict supports an additional equivalent form::\n\n            Point2D = TypedDict('Point2D', {'x': int, 'y': int, 'label': str})\n\n        By default, all keys must be present in a TypedDict. It is possible\n        to override this by specifying totality::\n\n            class Point2D(TypedDict, total=False):\n                x: int\n                y: int\n\n        This means that a Point2D TypedDict can have any of the keys omitted. A type\n        checker is only expected to support a literal False or True as the value of\n        the total argument. True is the default, and makes all items defined in the\n        class body be required.\n\n        The Required and NotRequired special forms can also be used to mark\n        individual keys as being required or not required::\n\n            class Point2D(TypedDict):\n                x: int  # the \"x\" key must always be present (Required is the default)\n                y: NotRequired[int]  # the \"y\" key can be omitted\n\n        See PEP 655 for more details on Required and NotRequired.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "__typename": {
                        "type": "string"
                    }
                },
                "required": [
                    "__typename"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "_ensure_subclassable"
            ]
        },
        {
            "name": "__class_getitem__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "params": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "params"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "typing._tp_cache"
            ]
        },
        {
            "name": "TypeAlias",
            "description": "Special marker indicating that an assignment should\n        be recognized as a proper type alias definition by type\n        checkers.\n\n        For example::\n\n            Predicate: TypeAlias = Callable[..., bool]\n\n        It's invalid when used anywhere except as in the example above.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "_ExtensionsSpecialForm"
            ]
        },
        {
            "name": "args",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "kwargs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__parameters__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_concatenate_getitem",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "typing._tp_cache"
            ]
        },
        {
            "name": "Concatenate",
            "description": "Used in conjunction with ``ParamSpec`` and ``Callable`` to represent a\n        higher order function which adds, removes or transforms parameters of a\n        callable.\n\n        For example::\n\n           Callable[Concatenate[int, P], int]\n\n        See PEP 612 for detailed information.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "_ExtensionsSpecialForm"
            ]
        },
        {
            "name": "TypeGuard",
            "description": "Special typing form used to annotate the return type of a user-defined\n        type guard function.  ``TypeGuard`` only accepts a single type argument.\n        At runtime, functions marked this way should return a boolean.\n\n        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static\n        type checkers to determine a more precise type of an expression within a\n        program's code flow.  Usually type narrowing is done by analyzing\n        conditional code flow and applying the narrowing to a block of code.  The\n        conditional expression here is sometimes referred to as a \"type guard\".\n\n        Sometimes it would be convenient to use a user-defined boolean function\n        as a type guard.  Such a function should use ``TypeGuard[...]`` as its\n        return type to alert static type checkers to this intention.\n\n        Using  ``-> TypeGuard`` tells the static type checker that for a given\n        function:\n\n        1. The return value is a boolean.\n        2. If the return value is ``True``, the type of its argument\n        is the type inside ``TypeGuard``.\n\n        For example::\n\n            def is_str(val: Union[str, float]):\n                # \"isinstance\" type guard\n                if isinstance(val, str):\n                    # Type of ``val`` is narrowed to ``str``\n                    ...\n                else:\n                    # Else, type of ``val`` is narrowed to ``float``.\n                    ...\n\n        Strict type narrowing is not enforced -- ``TypeB`` need not be a narrower\n        form of ``TypeA`` (it can even be a wider form) and this may lead to\n        type-unsafe results.  The main reason is to allow for things like\n        narrowing ``List[object]`` to ``List[str]`` even though the latter is not\n        a subtype of the former, since ``List`` is invariant.  The responsibility of\n        writing type-safe type guards is left to the user.\n\n        ``TypeGuard`` also works with type variables.  For more information, see\n        PEP 647 (User-Defined Type Guards).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "_ExtensionsSpecialForm"
            ]
        },
        {
            "name": "__getitem__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "typing._tp_cache"
            ]
        },
        {
            "name": "LiteralString",
            "description": "Represents an arbitrary literal string.\n\n        Example::\n\n          from pip._vendor.typing_extensions import LiteralString\n\n          def query(sql: LiteralString) -> ...:\n              ...\n\n          query(\"SELECT * FROM table\")  # ok\n          query(f\"SELECT * FROM {input()}\")  # not ok\n\n        See PEP 675 for details.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "params": {
                        "type": "string"
                    }
                },
                "required": [
                    "params"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "_SpecialForm"
            ]
        },
        {
            "name": "Self",
            "description": "Used to spell the type of \"self\" in classes.\n\n        Example::\n\n          from typing import Self\n\n          class ReturnsSelf:\n              def parse(self, data: bytes) -> Self:\n                  ...\n                  return self\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "params": {
                        "type": "string"
                    }
                },
                "required": [
                    "params"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "_SpecialForm"
            ]
        },
        {
            "name": "Never",
            "description": "The bottom type, a type that has no members.\n\n        This can be used to define a function that should never be\n        called, or a function that never returns::\n\n            from pip._vendor.typing_extensions import Never\n\n            def never_call_me(arg: Never) -> None:\n                pass\n\n            def int_or_str(arg: int | str) -> None:\n                never_call_me(arg)  # type checker error\n                match arg:\n                    case int():\n                        print(\"It's an int\")\n                    case str():\n                        print(\"It's a str\")\n                    case _:\n                        never_call_me(arg)  # ok, arg is of type Never\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "params": {
                        "type": "string"
                    }
                },
                "required": [
                    "params"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "_SpecialForm"
            ]
        },
        {
            "name": "Required",
            "description": "A special typing construct to mark a key of a total=False TypedDict\n        as required. For example:\n\n            class Movie(TypedDict, total=False):\n                title: Required[str]\n                year: int\n\n            m = Movie(\n                title='The Matrix',  # typechecker error if key is omitted\n                year=1999,\n            )\n\n        There is no runtime checking that a required key is actually provided\n        when instantiating a related TypedDict.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "_ExtensionsSpecialForm"
            ]
        },
        {
            "name": "NotRequired",
            "description": "A special typing construct to mark a key of a TypedDict as\n        potentially missing. For example:\n\n            class Movie(TypedDict):\n                title: str\n                year: NotRequired[int]\n\n            m = Movie(\n                title='The Matrix',  # typechecker error if key is omitted\n                year=1999,\n            )\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "_ExtensionsSpecialForm"
            ]
        },
        {
            "name": "Unpack",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "string"
                    }
                },
                "required": [
                    "parameters"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "_UnpackSpecialForm"
            ]
        },
        {
            "name": "__new__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "NamedTuple",
            "description": "Typed version of namedtuple.\n\n        Usage::\n\n            class Employee(NamedTuple):\n                name: str\n                id: int\n\n        This is equivalent to::\n\n            Employee = collections.namedtuple('Employee', ['name', 'id'])\n\n        The resulting class has an extra __annotations__ attribute, giving a\n        dict that maps field names to types.  (The field names are also in\n        the _fields attribute, which is part of the namedtuple API.)\n        An alternative equivalent functional syntax is also accepted::\n\n            Employee = NamedTuple('Employee', [('name', str), ('id', int)])\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "__typename": {
                        "type": "string"
                    }
                },
                "required": [
                    "__typename"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\typing_extensions.py",
            "decorator": [
                "_ensure_subclassable"
            ]
        },
        {
            "name": "_urlnorm",
            "description": "Normalize the URL to create a safe key for the cache",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "cache_url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "encode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\big5prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\big5prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\charsetgroupprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\charsetgroupprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\charsetprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\charsetprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "state",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\charsetprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "filter_high_byte_only",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\charsetprober.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "filter_international_words",
            "description": "\n        We define three types of bytes:\n        alphabet: english alphabets [a-zA-Z]\n        international: international characters [\\x80-\\xFF]\n        marker: everything else [^a-zA-Z\\x80-\\xFF]\n        The input buffer can be thought to contain a series of words delimited\n        by markers. This function works to filter all words that contain at\n        least one international character. All contiguous sequences of markers\n        are replaced by a single space ascii character.\n        This filter applies to all scripts which do not use English characters.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\charsetprober.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "remove_xml_tags",
            "description": "\n        Returns a copy of ``buf`` that retains only the sequences of English\n        alphabet and high byte characters that are not between <> characters.\n        This filter can be applied to all scripts which contain both English\n        characters and extended ASCII characters, but is currently only used by\n        ``Latin1Prober``.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\charsetprober.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\codingstatemachine.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\cp949prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\cp949prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "get_num_categories",
            "description": ":returns: The number of likelihood categories in the enum.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\enums.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\escprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\escprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\eucjpprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\eucjpprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\euckrprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\euckrprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\euctwprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\euctwprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\gb2312prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\gb2312prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\hebrewprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\hebrewprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "state",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\hebrewprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\johabprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\johabprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\jpcntx.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\latin1prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\latin1prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\macromanprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\macromanprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\sbcharsetprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\sbcharsetprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\sjisprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\sjisprober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "input_state",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\universaldetector.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "has_win_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\universaldetector.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_probers",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\universaldetector.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\utf1632prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\utf1632prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "state",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\utf1632prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "charset_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\utf8prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "language",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\chardet\\utf8prober.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "closed",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\ansitowin32.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "colorama_text",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\initialise.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "testStripIsTrueOnWindows",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\ansitowin32_test.py",
            "decorator": [
                "patch",
                "patch"
            ]
        },
        {
            "name": "setUp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\initialise_test.py",
            "decorator": [
                "skipUnless"
            ]
        },
        {
            "name": "testInitWrapsOnWindows",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "_": {
                        "type": "string"
                    }
                },
                "required": [
                    "_"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\initialise_test.py",
            "decorator": [
                "patch",
                "patch",
                "patch"
            ]
        },
        {
            "name": "testInitDoesntWrapOnEmulatedWindows",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "_": {
                        "type": "string"
                    }
                },
                "required": [
                    "_"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\initialise_test.py",
            "decorator": [
                "patch",
                "patch"
            ]
        },
        {
            "name": "testAutoResetPassedOn",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "mockATW32": {
                        "type": "string"
                    },
                    "_": {
                        "type": "string"
                    }
                },
                "required": [
                    "mockATW32",
                    "_"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\initialise_test.py",
            "decorator": [
                "patch",
                "patch"
            ]
        },
        {
            "name": "testAutoResetChangeable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "mockATW32": {
                        "type": "string"
                    }
                },
                "required": [
                    "mockATW32"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\initialise_test.py",
            "decorator": [
                "patch"
            ]
        },
        {
            "name": "testAtexitRegisteredOnlyOnce",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "mockRegister": {
                        "type": "string"
                    }
                },
                "required": [
                    "mockRegister"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\initialise_test.py",
            "decorator": [
                "patch"
            ]
        },
        {
            "name": "testJustFixWindowsConsole",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\initialise_test.py",
            "decorator": [
                "patch"
            ]
        },
        {
            "name": "osname",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\utils.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "replace_by",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "stream": {
                        "type": "string"
                    }
                },
                "required": [
                    "stream"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\utils.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "replace_original_by",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "stream": {
                        "type": "string"
                    }
                },
                "required": [
                    "stream"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\utils.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "pycharm",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\utils.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "testInit",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "mockWin32": {
                        "type": "string"
                    }
                },
                "required": [
                    "mockWin32"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\winterm_test.py",
            "decorator": [
                "patch"
            ]
        },
        {
            "name": "testGetAttrs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\winterm_test.py",
            "decorator": [
                "skipUnless"
            ]
        },
        {
            "name": "testResetAll",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "mockWin32": {
                        "type": "string"
                    }
                },
                "required": [
                    "mockWin32"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\winterm_test.py",
            "decorator": [
                "patch"
            ]
        },
        {
            "name": "testFore",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\winterm_test.py",
            "decorator": [
                "skipUnless"
            ]
        },
        {
            "name": "testBack",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\winterm_test.py",
            "decorator": [
                "skipUnless"
            ]
        },
        {
            "name": "testStyle",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\winterm_test.py",
            "decorator": [
                "skipUnless"
            ]
        },
        {
            "name": "testSetConsole",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "mockWin32": {
                        "type": "string"
                    }
                },
                "required": [
                    "mockWin32"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\winterm_test.py",
            "decorator": [
                "patch"
            ]
        },
        {
            "name": "testSetConsoleOnStderr",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "mockWin32": {
                        "type": "string"
                    }
                },
                "required": [
                    "mockWin32"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\colorama\\tests\\winterm_test.py",
            "decorator": [
                "patch"
            ]
        },
        {
            "name": "distinfo_dirname",
            "description": "\n        The *name* and *version* parameters are converted into their\n        filename-escaped form, i.e. any ``'-'`` characters are replaced\n        with ``'_'`` other than the one in ``'dist-info'`` and the one\n        separating the name from the version number.\n\n        :parameter name: is converted to a standard distribution name by replacing\n                         any runs of non- alphanumeric characters with a single\n                         ``'-'``.\n        :type name: string\n        :parameter version: is converted to a standard version string. Spaces\n                            become dots, and all other non-alphanumeric characters\n                            (except dots) become dashes, with runs of multiple\n                            dashes condensed to a single dash.\n        :type version: string\n        :returns: directory name\n        :rtype: string",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "name",
                    "version"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\database.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "source_url",
            "description": "\n        The source archive download URL for this distribution.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\database.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name_and_version",
            "description": "\n        A utility property which displays the name and version in parentheses.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\database.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "provides",
            "description": "\n        A set of distribution names and versions provided by this distribution.\n        :return: A set of \"name (version)\" strings.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\database.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "run_requires",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\database.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "meta_requires",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\database.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "build_requires",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\database.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "test_requires",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\database.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "dev_requires",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\database.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "exports",
            "description": "\n        Return the information exported by this distribution.\n        :return: A dictionary of exports, mapping an export category to a dict\n                 of :class:`ExportEntry` instances describing the individual\n                 export entries, and keyed by name.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\database.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "shared_locations",
            "description": "\n        A dictionary of shared locations whose keys are in the set 'prefix',\n        'purelib', 'platlib', 'scripts', 'headers', 'data' and 'namespace'.\n        The corresponding value is the absolute path of that category for\n        this distribution, and takes into account any paths selected by the\n        user at installation time (e.g. via command-line arguments). In the\n        case of the 'namespace' key, this would be a list of absolute paths\n        for the roots of namespace packages in this distribution.\n\n        The first time this property is accessed, the relevant information is\n        read from the SHARED file in the .dist-info directory.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\database.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "links",
            "description": "\n        Return the URLs of all the links on a page together with information\n        about their \"rel\" attribute, for determining which ones to treat as\n        downloads and which ones to queue for further scraping.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\locators.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "name_and_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "provides",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "provides",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
            "decorator": [
                "provides.setter"
            ]
        },
        {
            "name": "dictionary",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "dependencies",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "dependencies",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
            "decorator": [
                "dependencies.setter"
            ]
        },
        {
            "name": "file_path",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\resources.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\resources.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "size",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\resources.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "resources",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\resources.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "tempdir",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\util.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "chdir",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "d": {
                        "type": "string"
                    }
                },
                "required": [
                    "d"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\util.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "socket_timeout",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\util.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\util.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "strong_connections",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\util.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "dot",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\util.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "maximum",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\util.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "percentage",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\util.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ETA",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\util.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "speed",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\util.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_prerelease",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "exact_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_prerelease",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_prerelease",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_prerelease",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "filename",
            "description": "\n        Build and return a filename from the various components.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "exists",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "tags",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "metadata",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "info",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "_os_release_info",
            "description": "\n        Get the information items from the specified os-release file.\n\n        Returns:\n            A dictionary containing all information items.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distro\\distro.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "_parse_os_release_content",
            "description": "\n        Parse the lines of an os-release file.\n\n        Parameters:\n\n        * lines: Iterable through the lines in the os-release file.\n                 Each line must be a unicode string or a UTF-8 encoded byte\n                 string.\n\n        Returns:\n            A dictionary containing all information items.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distro\\distro.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_lsb_release_info",
            "description": "\n        Get the information items from the lsb_release command output.\n\n        Returns:\n            A dictionary containing all information items.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distro\\distro.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "_parse_lsb_release_content",
            "description": "\n        Parse the output of the lsb_release command.\n\n        Parameters:\n\n        * lines: Iterable through the lines of the lsb_release output.\n                 Each line must be a unicode string or a UTF-8 encoded byte\n                 string.\n\n        Returns:\n            A dictionary containing all information items.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distro\\distro.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_uname_info",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distro\\distro.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "_oslevel_info",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distro\\distro.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "_debian_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distro\\distro.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "_parse_uname_content",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distro\\distro.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_to_str",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distro\\distro.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_distro_release_info",
            "description": "\n        Get the information items from the specified distro release file.\n\n        Returns:\n            A dictionary containing all information items.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distro\\distro.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "_parse_distro_release_content",
            "description": "\n        Parse a line from a distro release file.\n\n        Parameters:\n        * line: Line from the distro release file. Must be a unicode string\n                or a UTF-8 encoded byte string.\n\n        Returns:\n            A dictionary containing all information items.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\distro\\distro.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "from_bytes",
            "description": "Unpack bytes into a `Timestamp` object.\n\n        Used for pure-Python msgpack unpacking.\n\n        :param b: Payload from msgpack ext message with code -1\n        :type b: bytes\n\n        :returns: Timestamp object unpacked from msgpack ext payload\n        :rtype: Timestamp\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "b": {
                        "type": "string"
                    }
                },
                "required": [
                    "b"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\msgpack\\ext.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "from_unix",
            "description": "Create a Timestamp from posix timestamp in seconds.\n\n        :param unix_float: Posix timestamp in seconds.\n        :type unix_float: int or float.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "unix_sec": {
                        "type": "string"
                    }
                },
                "required": [
                    "unix_sec"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\msgpack\\ext.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "from_unix_nano",
            "description": "Create a Timestamp from posix timestamp in nanoseconds.\n\n        :param int unix_ns: Posix timestamp in nanoseconds.\n        :rtype: Timestamp\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "unix_ns": {
                        "type": "string"
                    }
                },
                "required": [
                    "unix_ns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\msgpack\\ext.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "from_datetime",
            "description": "Create a Timestamp from datetime with tzinfo.\n\n        Python 2 is not supported.\n\n        :rtype: Timestamp\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "dt": {
                        "type": "string"
                    }
                },
                "required": [
                    "dt"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\msgpack\\ext.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "__str__",
            "description": "\n        Returns the str representation of this Specifier like object. This\n        should be representative of the Specifier itself.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__hash__",
            "description": "\n        Returns a hash value for this Specifier like object.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__eq__",
            "description": "\n        Returns a boolean representing whether or not the two Specifier like\n        objects are equal.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "prereleases",
            "description": "\n        Returns whether or not pre-releases as a whole are allowed by this\n        specifier.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "abc.abstractproperty"
            ]
        },
        {
            "name": "prereleases",
            "description": "\n        Sets whether or not pre-releases as a whole are allowed by this\n        specifier.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "prereleases.setter"
            ]
        },
        {
            "name": "contains",
            "description": "\n        Determines if the given item is contained within this specifier.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "filter",
            "description": "\n        Takes an iterable of items and filters them so that only items which\n        are contained within this specifier are allowed in it.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "_canonical_spec",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "operator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "prereleases",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "prereleases",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "prereleases.setter"
            ]
        },
        {
            "name": "wrapped",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "_compare_compatible",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "_require_version_compare"
            ]
        },
        {
            "name": "_compare_equal",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "_require_version_compare"
            ]
        },
        {
            "name": "_compare_not_equal",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "_require_version_compare"
            ]
        },
        {
            "name": "_compare_less_than_equal",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "_require_version_compare"
            ]
        },
        {
            "name": "_compare_greater_than_equal",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "_require_version_compare"
            ]
        },
        {
            "name": "_compare_less_than",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "_require_version_compare"
            ]
        },
        {
            "name": "_compare_greater_than",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "_require_version_compare"
            ]
        },
        {
            "name": "prereleases",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "prereleases",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "prereleases.setter"
            ]
        },
        {
            "name": "prereleases",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "prereleases",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
            "decorator": [
                "prereleases.setter"
            ]
        },
        {
            "name": "interpreter",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\tags.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "abi",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\tags.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "platform",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\tags.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "public",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "base_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "epoch",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "release",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pre",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "post",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "dev",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "local",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_prerelease",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_postrelease",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_devrelease",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "epoch",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "release",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "pre",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "post",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "dev",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "local",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "public",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "base_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_prerelease",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_postrelease",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_devrelease",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "major",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "minor",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "micro",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\version.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_get_glibc_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\_manylinux.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "_get_musl_version",
            "description": "Detect currently-running musl runtime version.\n\n    This is done by checking the specified executable's dynamic linking\n    information, and invoking the loader to parse its output for a version\n    string. If the loader is musl, the output would be something like::\n\n        musl libc (x86_64)\n        Version 1.2.2\n        Dynamic Program Loader\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\packaging\\_musllinux.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "dist",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "req",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "required_by",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "req",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "requirers",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "requirers_str",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_build_master",
            "description": "\n        Prepare the master working set.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_build_from_requirements",
            "description": "\n        Build a working set from a requirement spec. Rewrites sys.path.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "req_spec": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "req_spec"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_warn_unsafe_extraction_path",
            "description": "\n        If the default extraction path is overridden and set to an insecure\n        location, such as /tmp, it opens up an opportunity for an attacker to\n        replace an extracted file with an unauthorized payload. Warn the user\n        if a known insecure location is used.\n\n        See Distribute #375 for more details.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    }
                },
                "required": [
                    "path"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_validate_resource_path",
            "description": "\n        Validate the resource paths according to the docs.\n        https://setuptools.pypa.io/en/latest/pkg_resources.html#basic-resource-access\n\n        >>> warned = getfixture('recwarn')\n        >>> warnings.simplefilter('always')\n        >>> vrp = NullProvider._validate_resource_path\n        >>> vrp('foo/bar.txt')\n        >>> bool(warned)\n        False\n        >>> vrp('../foo/bar.txt')\n        >>> bool(warned)\n        True\n        >>> warned.clear()\n        >>> vrp('/foo/bar.txt')\n        >>> bool(warned)\n        True\n        >>> vrp('foo/../../bar.txt')\n        >>> bool(warned)\n        True\n        >>> warned.clear()\n        >>> vrp('foo/f../bar.txt')\n        >>> bool(warned)\n        False\n\n        Windows path separators are straight-up disallowed.\n        >>> vrp(r'\\\\foo/bar.txt')\n        Traceback (most recent call last):\n        ...\n        ValueError: Use of .. or absolute path in a resource path \\\nis not allowed.\n\n        >>> vrp(r'C:\\\\foo/bar.txt')\n        Traceback (most recent call last):\n        ...\n        ValueError: Use of .. or absolute path in a resource path \\\nis not allowed.\n\n        Blank values are allowed\n\n        >>> vrp('')\n        >>> bool(warned)\n        False\n\n        Non-string values are not.\n\n        >>> vrp(None)\n        Traceback (most recent call last):\n        ...\n        AttributeError: ...\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    }
                },
                "required": [
                    "path"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_register",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "build",
            "description": "\n        Build a dictionary similar to the zipimport directory\n        caches, except instead of tuples, store ZipInfo objects.\n\n        Use a platform-specific path separator (os.sep) for the path keys\n        for compatibility with pypy on Windows.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "path"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "zipinfo",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_get_date_and_size",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "zip_stat": {
                        "type": "string"
                    }
                },
                "required": [
                    "zip_stat"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "user_data_dir",
            "description": ":return: data directory tied to the user, e.g. ``/data/user/<userid>/<packagename>/files/<AppName>``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_data_dir",
            "description": ":return: data directory shared by users, same as `user_data_dir`",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_config_dir",
            "description": "\n        :return: config directory tied to the user, e.g. \\\n        ``/data/user/<userid>/<packagename>/shared_prefs/<AppName>``\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_config_dir",
            "description": ":return: config directory shared by the users, same as `user_config_dir`",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_cache_dir",
            "description": ":return: cache directory tied to the user, e.g. e.g. ``/data/user/<userid>/<packagename>/cache/<AppName>``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_cache_dir",
            "description": ":return: cache directory shared by users, same as `user_cache_dir`",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_state_dir",
            "description": ":return: state directory tied to the user, same as `user_data_dir`",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_log_dir",
            "description": "\n        :return: log directory tied to the user, same as `user_cache_dir` if not opinionated else ``log`` in it,\n          e.g. ``/data/user/<userid>/<packagename>/cache/<AppName>/log``\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_documents_dir",
            "description": ":return: documents directory tied to the user e.g. ``/storage/emulated/0/Documents``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_downloads_dir",
            "description": ":return: downloads directory tied to the user e.g. ``/storage/emulated/0/Downloads``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_pictures_dir",
            "description": ":return: pictures directory tied to the user e.g. ``/storage/emulated/0/Pictures``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_videos_dir",
            "description": ":return: videos directory tied to the user e.g. ``/storage/emulated/0/DCIM/Camera``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_music_dir",
            "description": ":return: music directory tied to the user e.g. ``/storage/emulated/0/Music``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_runtime_dir",
            "description": "\n        :return: runtime directory tied to the user, same as `user_cache_dir` if not opinionated else ``tmp`` in it,\n          e.g. ``/data/user/<userid>/<packagename>/cache/<AppName>/tmp``\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_android_folder",
            "description": ":return: base folder for the Android OS or None if it cannot be found",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "_android_documents_folder",
            "description": ":return: documents folder for the Android OS",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "_android_downloads_folder",
            "description": ":return: downloads folder for the Android OS",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "_android_pictures_folder",
            "description": ":return: pictures folder for the Android OS",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "_android_videos_folder",
            "description": ":return: videos folder for the Android OS",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "_android_music_folder",
            "description": ":return: music folder for the Android OS",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "user_data_dir",
            "description": ":return: data directory tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "site_data_dir",
            "description": ":return: data directory shared by users",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "user_config_dir",
            "description": ":return: config directory tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "site_config_dir",
            "description": ":return: config directory shared by the users",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "user_cache_dir",
            "description": ":return: cache directory tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "site_cache_dir",
            "description": ":return: cache directory shared by users",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "user_state_dir",
            "description": ":return: state directory tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "user_log_dir",
            "description": ":return: log directory tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "user_documents_dir",
            "description": ":return: documents directory tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "user_downloads_dir",
            "description": ":return: downloads directory tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "user_pictures_dir",
            "description": ":return: pictures directory tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "user_videos_dir",
            "description": ":return: videos directory tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "user_music_dir",
            "description": ":return: music directory tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "user_runtime_dir",
            "description": ":return: runtime directory tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property",
                "abstractmethod"
            ]
        },
        {
            "name": "user_data_path",
            "description": ":return: data path tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_data_path",
            "description": ":return: data path shared by users",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_config_path",
            "description": ":return: config path tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_config_path",
            "description": ":return: config path shared by the users",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_cache_path",
            "description": ":return: cache path tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_cache_path",
            "description": ":return: cache path shared by users",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_state_path",
            "description": ":return: state path tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_log_path",
            "description": ":return: log path tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_documents_path",
            "description": ":return: documents path tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_downloads_path",
            "description": ":return: downloads path tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_pictures_path",
            "description": ":return: pictures path tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_videos_path",
            "description": ":return: videos path tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_music_path",
            "description": ":return: music path tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_runtime_path",
            "description": ":return: runtime path tied to the user",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_data_dir",
            "description": ":return: data directory tied to the user, e.g. ``~/Library/Application Support/$appname/$version``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_data_dir",
            "description": ":return: data directory shared by users, e.g. ``/Library/Application Support/$appname/$version``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_config_dir",
            "description": ":return: config directory tied to the user, same as `user_data_dir`",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_config_dir",
            "description": ":return: config directory shared by the users, same as `site_data_dir`",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_cache_dir",
            "description": ":return: cache directory tied to the user, e.g. ``~/Library/Caches/$appname/$version``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_cache_dir",
            "description": ":return: cache directory shared by users, e.g. ``/Library/Caches/$appname/$version``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_state_dir",
            "description": ":return: state directory tied to the user, same as `user_data_dir`",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_log_dir",
            "description": ":return: log directory tied to the user, e.g. ``~/Library/Logs/$appname/$version``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_documents_dir",
            "description": ":return: documents directory tied to the user, e.g. ``~/Documents``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_downloads_dir",
            "description": ":return: downloads directory tied to the user, e.g. ``~/Downloads``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_pictures_dir",
            "description": ":return: pictures directory tied to the user, e.g. ``~/Pictures``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_videos_dir",
            "description": ":return: videos directory tied to the user, e.g. ``~/Movies``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_music_dir",
            "description": ":return: music directory tied to the user, e.g. ``~/Music``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_runtime_dir",
            "description": ":return: runtime directory tied to the user, e.g. ``~/Library/Caches/TemporaryItems/$appname/$version``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_data_dir",
            "description": "\n        :return: data directory tied to the user, e.g. ``~/.local/share/$appname/$version`` or\n         ``$XDG_DATA_HOME/$appname/$version``\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_data_dir",
            "description": "\n        :return: data directories shared by users (if `multipath <platformdirs.api.PlatformDirsABC.multipath>` is\n         enabled and ``XDG_DATA_DIR`` is set and a multi path the response is also a multi path separated by the OS\n         path separator), e.g. ``/usr/local/share/$appname/$version`` or ``/usr/share/$appname/$version``\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_config_dir",
            "description": "\n        :return: config directory tied to the user, e.g. ``~/.config/$appname/$version`` or\n         ``$XDG_CONFIG_HOME/$appname/$version``\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_config_dir",
            "description": "\n        :return: config directories shared by users (if `multipath <platformdirs.api.PlatformDirsABC.multipath>`\n         is enabled and ``XDG_DATA_DIR`` is set and a multi path the response is also a multi path separated by the OS\n         path separator), e.g. ``/etc/xdg/$appname/$version``\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_cache_dir",
            "description": "\n        :return: cache directory tied to the user, e.g. ``~/.cache/$appname/$version`` or\n         ``~/$XDG_CACHE_HOME/$appname/$version``\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_cache_dir",
            "description": ":return: cache directory shared by users, e.g. ``/var/tmp/$appname/$version``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_state_dir",
            "description": "\n        :return: state directory tied to the user, e.g. ``~/.local/state/$appname/$version`` or\n         ``$XDG_STATE_HOME/$appname/$version``\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_log_dir",
            "description": ":return: log directory tied to the user, same as `user_state_dir` if not opinionated else ``log`` in it",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_documents_dir",
            "description": ":return: documents directory tied to the user, e.g. ``~/Documents``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_downloads_dir",
            "description": ":return: downloads directory tied to the user, e.g. ``~/Downloads``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_pictures_dir",
            "description": ":return: pictures directory tied to the user, e.g. ``~/Pictures``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_videos_dir",
            "description": ":return: videos directory tied to the user, e.g. ``~/Videos``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_music_dir",
            "description": ":return: music directory tied to the user, e.g. ``~/Music``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_runtime_dir",
            "description": "\n        :return: runtime directory tied to the user, e.g. ``/run/user/$(id -u)/$appname/$version`` or\n         ``$XDG_RUNTIME_DIR/$appname/$version``.\n\n         For FreeBSD/OpenBSD/NetBSD, it would return ``/var/run/user/$(id -u)/$appname/$version`` if\n         exists, otherwise ``/tmp/runtime-$(id -u)/$appname/$version``, if``$XDG_RUNTIME_DIR``\n         is not set.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_data_path",
            "description": ":return: data path shared by users. Only return first item, even if ``multipath`` is set to ``True``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_config_path",
            "description": ":return: config path shared by the users. Only return first item, even if ``multipath`` is set to ``True``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_cache_path",
            "description": ":return: cache path shared by users. Only return first item, even if ``multipath`` is set to ``True``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_data_dir",
            "description": "\n        :return: data directory tied to the user, e.g.\n         ``%USERPROFILE%\\\\AppData\\\\Local\\\\$appauthor\\\\$appname`` (not roaming) or\n         ``%USERPROFILE%\\\\AppData\\\\Roaming\\\\$appauthor\\\\$appname`` (roaming)\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_data_dir",
            "description": ":return: data directory shared by users, e.g. ``C:\\\\ProgramData\\\\$appauthor\\\\$appname``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_config_dir",
            "description": ":return: config directory tied to the user, same as `user_data_dir`",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_config_dir",
            "description": ":return: config directory shared by the users, same as `site_data_dir`",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_cache_dir",
            "description": "\n        :return: cache directory tied to the user (if opinionated with ``Cache`` folder within ``$appname``) e.g.\n         ``%USERPROFILE%\\\\AppData\\\\Local\\\\$appauthor\\\\$appname\\\\Cache\\\\$version``\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "site_cache_dir",
            "description": ":return: cache directory shared by users, e.g. ``C:\\\\ProgramData\\\\$appauthor\\\\$appname\\\\Cache\\\\$version``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_state_dir",
            "description": ":return: state directory tied to the user, same as `user_data_dir`",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_log_dir",
            "description": ":return: log directory tied to the user, same as `user_data_dir` if not opinionated else ``Logs`` in it",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_documents_dir",
            "description": ":return: documents directory tied to the user e.g. ``%USERPROFILE%\\\\Documents``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_downloads_dir",
            "description": ":return: downloads directory tied to the user e.g. ``%USERPROFILE%\\\\Downloads``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_pictures_dir",
            "description": ":return: pictures directory tied to the user e.g. ``%USERPROFILE%\\\\Pictures``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_videos_dir",
            "description": ":return: videos directory tied to the user e.g. ``%USERPROFILE%\\\\Videos``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_music_dir",
            "description": ":return: music directory tied to the user e.g. ``%USERPROFILE%\\\\Music``",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user_runtime_dir",
            "description": "\n        :return: runtime directory tied to the user, e.g.\n         ``%USERPROFILE%\\\\AppData\\\\Local\\\\Temp\\\\$appauthor\\\\$appname``\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_pre_style",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pygments\\formatters\\html.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_linenos_style",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pygments\\formatters\\html.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_linenos_special_style",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pygments\\formatters\\html.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_translate_parts",
            "description": "HTML-escape a value and split it by newlines.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pygments\\formatters\\html.py",
            "decorator": [
                "functools.lru_cache"
            ]
        },
        {
            "name": "replaceWith",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\actions.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "removeQuotes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\actions.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "withAttribute",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\actions.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "withClass",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\actions.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "matchOnlyAtCol",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\actions.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "convert_to_date",
            "description": "\n        Helper to create a parse action for converting parsed date string to Python datetime.date\n\n        Params -\n        - fmt - format to be passed to datetime.strptime (default= ``\"%Y-%m-%d\"``)\n\n        Example::\n\n            date_expr = pyparsing_common.iso8601_date.copy()\n            date_expr.set_parse_action(pyparsing_common.convert_to_date())\n            print(date_expr.parse_string(\"1999-12-31\"))\n\n        prints::\n\n            [datetime.date(1999, 12, 31)]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\common.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "convert_to_datetime",
            "description": "Helper to create a parse action for converting parsed\n        datetime string to Python datetime.datetime\n\n        Params -\n        - fmt - format to be passed to datetime.strptime (default= ``\"%Y-%m-%dT%H:%M:%S.%f\"``)\n\n        Example::\n\n            dt_expr = pyparsing_common.iso8601_datetime.copy()\n            dt_expr.set_parse_action(pyparsing_common.convert_to_datetime())\n            print(dt_expr.parse_string(\"1999-12-31T23:59:59.999\"))\n\n        prints::\n\n            [datetime.datetime(1999, 12, 31, 23, 59, 59, 999000)]\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\common.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "strip_html_tags",
            "description": "Parse action to remove HTML tags from web page HTML source\n\n        Example::\n\n            # strip HTML links from normal text\n            text = '<td>More info at the <a href=\"https://github.com/pyparsing/pyparsing/wiki\">pyparsing</a> wiki page</td>'\n            td, td_end = make_html_tags(\"TD\")\n            table_text = td + SkipTo(td_end).set_parse_action(pyparsing_common.strip_html_tags)(\"body\") + td_end\n            print(table_text.parse_string(text).body)\n\n        Prints::\n\n            More info at the pyparsing wiki page\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\common.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "enable_all_warnings",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "pa",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "s": {
                        "type": "string"
                    },
                    "l": {
                        "type": "string"
                    },
                    "t": {
                        "type": "string"
                    }
                },
                "required": [
                    "s",
                    "l",
                    "t"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "set_default_whitespace_chars",
            "description": "r\"\"\"\n        Overrides the default whitespace chars\n\n        Example::\n\n            # default whitespace chars are space, <TAB> and newline\n            Word(alphas)[1, ...].parse_string(\"abc def\\nghi jkl\")  # -> ['abc', 'def', 'ghi', 'jkl']\n\n            # change to just treat newline as significant\n            ParserElement.set_default_whitespace_chars(\" \\t\")\n            Word(alphas)[1, ...].parse_string(\"abc def\\nghi jkl\")  # -> ['abc', 'def']\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "inline_literals_using",
            "description": "\n        Set class to be used for inclusion of string literals into a parser.\n\n        Example::\n\n            # default literal class used is Literal\n            integer = Word(nums)\n            date_str = integer(\"year\") + '/' + integer(\"month\") + '/' + integer(\"day\")\n\n            date_str.parse_string(\"1999/12/31\")  # -> ['1999', '/', '12', '/', '31']\n\n\n            # change to Suppress\n            ParserElement.inline_literals_using(Suppress)\n            date_str = integer(\"year\") + '/' + integer(\"month\") + '/' + integer(\"day\")\n\n            date_str.parse_string(\"1999/12/31\")  # -> ['1999', '12', '31']\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "using_each",
            "description": "\n        Yields a sequence of class(obj, **class_kwargs) for obj in seq.\n\n        Example::\n\n            LPAR, RPAR, LBRACE, RBRACE, SEMI = Suppress.using_each(\"(){};\")\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "seq": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "seq"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "reset_cache",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "disable_memoization",
            "description": "\n        Disables active Packrat or Left Recursion parsing and their memoization\n\n        This method also works if neither Packrat nor Left Recursion are enabled.\n        This makes it safe to call before activating Packrat nor Left Recursion\n        to clear any previous settings.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "enable_left_recursion",
            "description": "\n        Enables \"bounded recursion\" parsing, which allows for both direct and indirect\n        left-recursion. During parsing, left-recursive :class:`Forward` elements are\n        repeatedly matched with a fixed recursion depth that is gradually increased\n        until finding the longest match.\n\n        Example::\n\n            from pip._vendor import pyparsing as pp\n            pp.ParserElement.enable_left_recursion()\n\n            E = pp.Forward(\"E\")\n            num = pp.Word(pp.nums)\n            # match `num`, or `num '+' num`, or `num '+' num '+' num`, ...\n            E <<= E + '+' - num | num\n\n            print(E.parse_string(\"1+2+3\"))\n\n        Recursion search naturally memoizes matches of ``Forward`` elements and may\n        thus skip reevaluation of parse actions during backtracking. This may break\n        programs with parse actions which rely on strict ordering of side-effects.\n\n        Parameters:\n\n        - ``cache_size_limit`` - (default=``None``) - memoize at most this many\n          ``Forward`` elements during matching; if ``None`` (the default),\n          memoize all ``Forward`` elements.\n\n        Bounded Recursion parsing works similar but not identical to Packrat parsing,\n        thus the two cannot be used together. Use ``force=True`` to disable any\n        previous, conflicting settings.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "enable_packrat",
            "description": "\n        Enables \"packrat\" parsing, which adds memoizing to the parsing logic.\n        Repeated parse attempts at the same string location (which happens\n        often in many complex grammars) can immediately return a cached value,\n        instead of re-executing parsing/validating code.  Memoizing is done of\n        both valid results and parsing exceptions.\n\n        Parameters:\n\n        - ``cache_size_limit`` - (default= ``128``) - if an integer value is provided\n          will limit the size of the packrat cache; if None is passed, then\n          the cache size will be unbounded; if 0 is passed, the cache will\n          be effectively disabled.\n\n        This speedup may break existing programs that use parse actions that\n        have side-effects.  For this reason, packrat parsing is disabled when\n        you first import pyparsing.  To activate the packrat feature, your\n        program must call the class method :class:`ParserElement.enable_packrat`.\n        For best results, call ``enable_packrat()`` immediately after\n        importing pyparsing.\n\n        Example::\n\n            from pip._vendor import pyparsing\n            pyparsing.ParserElement.enable_packrat()\n\n        Packrat parsing works similar but not identical to Bounded Recursion parsing,\n        thus the two cannot be used together. Use ``force=True`` to disable any\n        previous, conflicting settings.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "default_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_generateDefaultName",
            "description": "\n        Child classes must define this method, which defines how the ``default_name`` is set.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "inlineLiteralsUsing",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "staticmethod",
                "replaced_by_pep8"
            ]
        },
        {
            "name": "setDefaultWhitespaceChars",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "staticmethod",
                "replaced_by_pep8"
            ]
        },
        {
            "name": "setResultsName",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "setBreak",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "setParseAction",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "addParseAction",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "addCondition",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "setFailAction",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "tryParse",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "enableLeftRecursion",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "staticmethod",
                "replaced_by_pep8"
            ]
        },
        {
            "name": "enablePackrat",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "staticmethod",
                "replaced_by_pep8"
            ]
        },
        {
            "name": "parseString",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "scanString",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "transformString",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "searchString",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "ignoreWhitespace",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "leaveWhitespace",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "setWhitespaceChars",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "parseWithTabs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "setDebugActions",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "setDebug",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "setName",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "parseFile",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "runTests",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "set_default_keyword_chars",
            "description": "\n        Overrides the default characters used by :class:`Keyword` expressions.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "chars": {
                        "type": "string"
                    }
                },
                "required": [
                    "chars"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "re",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "re_match",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "mayReturnEmpty",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "leaveWhitespace",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "ignoreWhitespace",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "leaveWhitespace",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "ignoreWhitespace",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "explain_exception",
            "description": "\n        Method to take an exception and translate the Python internal traceback into a list\n        of the pyparsing expressions that caused the exception to be raised.\n\n        Parameters:\n\n        - exc - exception raised during parsing (need not be a ParseException, in support\n          of Python exceptions that might be raised in a parse action)\n        - depth (default=16) - number of levels back in the stack trace to list expression\n          and function names; if None, the full stack trace names will be listed; if 0, only\n          the failing input line, marker, and exception string will be shown\n\n        Returns a multi-line string listing the ParserElements and/or function names in the\n        exception's stack trace.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "exc": {
                        "type": "string"
                    }
                },
                "required": [
                    "exc"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\exceptions.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_from_exception",
            "description": "\n        internal factory method to simplify creating one type of ParseException\n        from another - avoids having __init__ signature conflicts among subclasses\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "pe": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "pe"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\exceptions.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "line",
            "description": "\n        Return the line of text where the exception occurred.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\exceptions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "lineno",
            "description": "\n        Return the 1-based line number of text where the exception occurred.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\exceptions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "col",
            "description": "\n        Return the 1-based column on the line of text where the exception occurred.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\exceptions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "column",
            "description": "\n        Return the 1-based column on the line of text where the exception occurred.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\exceptions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "parserElement",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\exceptions.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "parserElement",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "elem": {
                        "type": "string"
                    }
                },
                "required": [
                    "elem"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\exceptions.py",
            "decorator": [
                "parserElement.setter"
            ]
        },
        {
            "name": "markInputline",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\exceptions.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "delimitedList",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "delimited_list",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "countedArray",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "matchPreviousLiteral",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "matchPreviousExpr",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "oneOf",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "dictOf",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "originalTextFor",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "nestedExpr",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "makeHTMLTags",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "makeXMLTags",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "replaceHTMLEntity",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "infixNotation",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\helpers.py",
            "decorator": [
                "replaced_by_pep8"
            ]
        },
        {
            "name": "from_dict",
            "description": "\n        Helper classmethod to construct a ``ParseResults`` from a ``dict``, preserving the\n        name-value relations as results names. If an optional ``name`` argument is\n        given, a nested ``ParseResults`` will be returned.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "other": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "other"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\results.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "assertRaisesParseException",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\testing.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "with_line_numbers",
            "description": "\n        Helpful method for debugging a parser - prints a string with line and column numbers.\n        (Line and column numbers are 1-based.)\n\n        :param s: tuple(bool, str - string to be printed with line and column numbers\n        :param start_line: int - (optional) starting line number in s to print (default=1)\n        :param end_line: int - (optional) ending line number in s to print (default=len(s))\n        :param expand_tabs: bool - (optional) expand tabs to spaces, to match the pyparsing default\n        :param eol_mark: str - (optional) string to mark the end of lines, helps visualize trailing spaces (default=\"|\")\n        :param mark_spaces: str - (optional) special character to display in place of spaces\n        :param mark_control: str - (optional) convert non-printing control characters to a placeholding\n                                 character; valid values:\n                                 - \"unicode\" - replaces control chars with Unicode symbols, such as \"\u240d\" and \"\u240a\"\n                                 - any single character string - replace control characters with given string\n                                 - None (default) - string is displayed as-is\n\n        :return: str - input string with leading line numbers and column number headers\n        \"\"\"\n   ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\testing.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_chars_for_ranges",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\unicode.py",
            "decorator": [
                "_lazyclassproperty"
            ]
        },
        {
            "name": "printables",
            "description": "all non-whitespace characters in this range",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\unicode.py",
            "decorator": [
                "_lazyclassproperty"
            ]
        },
        {
            "name": "alphas",
            "description": "all alphabetic characters in this range",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\unicode.py",
            "decorator": [
                "_lazyclassproperty"
            ]
        },
        {
            "name": "nums",
            "description": "all numeric digit characters in this range",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\unicode.py",
            "decorator": [
                "_lazyclassproperty"
            ]
        },
        {
            "name": "alphanums",
            "description": "all alphanumeric characters in this range",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\unicode.py",
            "decorator": [
                "_lazyclassproperty"
            ]
        },
        {
            "name": "identchars",
            "description": "all characters in this range that are valid identifier characters, plus underscore '_",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\unicode.py",
            "decorator": [
                "_lazyclassproperty"
            ]
        },
        {
            "name": "_set",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "dname": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "dname",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\util.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "col",
            "description": "\n    Returns current column within a string, counting newlines as line separators.\n    The first column is number 1.\n\n    Note: the default parsing behavior is to expand tabs in the input string\n    before starting the parsing process.  See\n    :class:`ParserElement.parse_string` for more\n    information on parsing strings containing ``<TAB>`` s, and suggested\n    methods to maintain a consistent view of the parsed string, the parse\n    location, and line and column positions within the parsed string.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\util.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "lineno",
            "description": "Returns current line number within a string, counting newlines as line separators.\n    The first line is number 1.\n\n    Note - the default parsing behavior is to expand tabs in the input string\n    before starting the parsing process.  See :class:`ParserElement.parse_string`\n    for more information on parsing strings containing ``<TAB>`` s, and\n    suggested methods to maintain a consistent view of the parsed string, the\n    parse location, and line and column positions within the parsed string.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\util.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "line",
            "description": "\n    Returns the line of text containing loc within a string, counting newlines as line separators.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\util.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "_inner",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\util.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "_inner",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\util.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "__version__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_call",
            "description": "\n        If you call this function in the same way that you would call the constructor, it will store the arguments\n        as you expect. For example EditablePartial.from_call(Fraction, 1, 3)() == Fraction(1, 3)\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\diagram\\__init__.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\diagram\\__init__.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_to_diagram_element",
            "description": "\n    Recursively converts a PyParsing Element to a railroad Element\n    :param lookup: The shared converter state that keeps track of useful things\n    :param index: The index of this element within the parent\n    :param parent: The parent of this element in the output tree\n    :param vertical: Controls at what point we make a list of elements vertical. If this is an integer (the default),\n    it sets the threshold of the number of items before we go vertical. If True, always go vertical, if False, never\n    do so\n    :param name_hint: If provided, this will override the generated name\n    :param show_results_names: bool flag indicating whether to add annotations for results names\n    :returns: The converted version of the input element, but as a Partial that hasn't yet been constructed\n    :param show_groups: bool flag indicating whether to show groups using bounding box\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyparsing\\diagram\\__init__.py",
            "decorator": [
                "_apply_diagram_item_enhancements"
            ]
        },
        {
            "name": "subprocess_runner",
            "description": "A context manager for temporarily overriding the default\n        :ref:`subprocess runner <Subprocess Runners>`.\n\n        .. code-block:: python\n\n            hook_caller = BuildBackendHookCaller(...)\n            with hook_caller.subprocess_runner(quiet_subprocess_runner):\n                ...\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "runner": {
                        "type": "string"
                    }
                },
                "required": [
                    "runner"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\pyproject_hooks\\_impl.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "unverifiable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\cookies.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "origin_req_host",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\cookies.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "host",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\cookies.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "path_url",
            "description": "Build the path URL to use.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_encode_params",
            "description": "Encode parameters in a piece of data.\n\n        Will successfully encode parameters when passed as a dict or a list of\n        2-tuples. Order is retained if data is a list of 2-tuples but arbitrary\n        if parameters are supplied as a dict.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\models.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_encode_files",
            "description": "Build the body for a multipart/form-data request.\n\n        Will successfully encode files when passed as a dict or a list of\n        tuples. Order is retained if data is a list of tuples but arbitrary\n        if parameters are supplied as a dict.\n        The tuples may be 2-tuples (filename, fileobj), 3-tuples (filename, fileobj, contentype)\n        or 4-tuples (filename, fileobj, contentype, custom_headers).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "files": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                },
                "required": [
                    "files",
                    "data"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\models.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_get_idna_encoded_host",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "host": {
                        "type": "string"
                    }
                },
                "required": [
                    "host"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\models.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "ok",
            "description": "Returns True if :attr:`status_code` is less than 400, False if not.\n\n        This attribute checks if the status code of the response is between\n        400 and 600 to see if there was a client error or a server error. If\n        the status code is between 200 and 400, this will return True. This\n        is **not** a check to see if the response code is ``200 OK``.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_redirect",
            "description": "True if this Response is a well-formed HTTP redirect that could have\n        been processed automatically (by :meth:`Session.resolve_redirects`).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_permanent_redirect",
            "description": "True if this Response one of the permanent versions of redirect.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "next",
            "description": "Returns a PreparedRequest for the next request in a redirect chain, if there is one.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "apparent_encoding",
            "description": "The apparent encoding, provided by the charset_normalizer or chardet libraries.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "content",
            "description": "Content of the response, in bytes.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "text",
            "description": "Content of the response, in unicode.\n\n        If Response.encoding is None, encoding will be guessed using\n        ``charset_normalizer`` or ``chardet``.\n\n        The encoding of the response content is determined based solely on HTTP\n        headers, following RFC 2616 to the letter. If you can take advantage of\n        non-HTTP knowledge to make a better guess at the encoding, you should\n        set ``r.encoding`` appropriately before accessing this property.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "links",
            "description": "Returns the parsed header links of the response, if any.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "atomic_open",
            "description": "Write a file to the disk in an atomic fashion",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "filename": {
                        "type": "string"
                    }
                },
                "required": [
                    "filename"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\utils.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "set_environ",
            "description": "Set the environment variable 'env_name' to 'value'\n\n    Save previous value, yield, and then restore the previous value stored in\n    the environment variable 'env_name'.\n\n    If 'value' is None, do nothing",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "env_name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "env_name",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\requests\\utils.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "state",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\resolvelib\\resolvers.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__subclasshook__",
            "description": "Check if this class supports the rich render protocol.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\abc.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "left",
            "description": "Align a renderable to the left.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\align.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "center",
            "description": "Align a renderable to the center.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\align.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "right",
            "description": "Align a renderable to the right.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\align.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "cached_cell_len",
            "description": "Get the number of cells required to display text.\n\n    This method always caches, which may use up a lot of memory. It is recommended to use\n    `cell_len` over this method.\n\n    Args:\n        text (str): Text to display.\n\n    Returns:\n        int: Get the number of cells required to display text.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Text to display."
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "int": {
                        "type": "string",
                        "description": "Get the number of cells required to display text."
                    }
                },
                "required": [
                    "text",
                    "Returns",
                    "int"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\cells.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "get_character_cell_size",
            "description": "Get the cell size of a character.\n\n    Args:\n        character (str): A single character.\n\n    Returns:\n        int: Number of cells (0, 1 or 2) occupied by that character.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "character": {
                        "type": "string",
                        "description": "A single character."
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "int": {
                        "type": "string",
                        "description": "Number of cells (0, 1 or 2) occupied by that character."
                    }
                },
                "required": [
                    "character",
                    "Returns",
                    "int"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\cells.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "_get_codepoint_cell_size",
            "description": "Get the cell size of a character.\n\n    Args:\n        codepoint (int): Codepoint of a character.\n\n    Returns:\n        int: Number of cells (0, 1 or 2) occupied by that character.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "codepoint": {
                        "type": "integer",
                        "description": "Codepoint of a character."
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "int": {
                        "type": "string",
                        "description": "Number of cells (0, 1 or 2) occupied by that character."
                    }
                },
                "required": [
                    "codepoint",
                    "Returns",
                    "int"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\cells.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "hex",
            "description": "get the color triplet in CSS style.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\color_triplet.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "rgb",
            "description": "The color in RGB format.\n\n        Returns:\n            str: An rgb color, e.g. ``\"rgb(100,23,255)\"``.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\color_triplet.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "normalized",
            "description": "Convert components into floats between 0 and 1.\n\n        Returns:\n            Tuple[float, float, float]: A tuple of three normalized colour components.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\color_triplet.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ascii_only",
            "description": "Check if renderables should use ascii only.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "renderables",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_replace",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "process_renderables",
            "description": "Called with a list of objects to render.\n\n        This method can return a new list of renderables, or modify and return the same list.\n\n        Args:\n            renderables (List[ConsoleRenderable]): A number of renderable objects.\n\n        Returns:\n            List[ConsoleRenderable]: A replacement list of renderables.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "renderables": {
                        "type": "string",
                        "description": "A number of renderable objects."
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "renderables",
                    "Returns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "file",
            "description": "Get the file object to write to.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "file",
            "description": "Set a new file object.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "file.setter"
            ]
        },
        {
            "name": "_buffer",
            "description": "Get a thread local buffer.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_buffer_index",
            "description": "Get a thread local buffer.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_buffer_index",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "_buffer_index.setter"
            ]
        },
        {
            "name": "_theme_stack",
            "description": "Get the thread local theme stack.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "color_system",
            "description": "Get color system string.\n\n        Returns:\n            Optional[str]: \"standard\", \"256\" or \"truecolor\".\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "encoding",
            "description": "Get the encoding of the console file, e.g. ``\"utf-8\"``.\n\n        Returns:\n            str: A standard encoding string.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_terminal",
            "description": "Check if the console is writing to a terminal.\n\n        Returns:\n            bool: True if the console writing to a device capable of\n            understanding terminal codes, otherwise False.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_dumb_terminal",
            "description": "Detect dumb terminal.\n\n        Returns:\n            bool: True if writing to a dumb terminal, otherwise False.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "options",
            "description": "Get default console options.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "size",
            "description": "Get the size of the console.\n\n        Returns:\n            ConsoleDimensions: A named tuple containing the dimensions.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "size",
            "description": "Set a new size for the terminal.\n\n        Args:\n            new_size (Tuple[int, int]): New width and height.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "new_size": {
                        "type": "string",
                        "description": "New width and height."
                    }
                },
                "required": [
                    "new_size"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "size.setter"
            ]
        },
        {
            "name": "width",
            "description": "Get the width of the console.\n\n        Returns:\n            int: The width (in characters) of the console.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "width",
            "description": "Set width.\n\n        Args:\n            width (int): New width.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "width": {
                        "type": "integer",
                        "description": "New width."
                    }
                },
                "required": [
                    "width"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "width.setter"
            ]
        },
        {
            "name": "height",
            "description": "Get the height of the console.\n\n        Returns:\n            int: The height (in lines) of the console.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "height",
            "description": "Set height.\n\n        Args:\n            height (int): new height.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "height": {
                        "type": "integer",
                        "description": "new height."
                    }
                },
                "required": [
                    "height"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "height.setter"
            ]
        },
        {
            "name": "is_alt_screen",
            "description": "Check if the alt screen was enabled.\n\n        Returns:\n            bool: True if the alt screen was enabled, otherwise False.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__getitem__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\containers.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__getitem__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\containers.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "bell",
            "description": "Ring the 'bell'.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\control.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "home",
            "description": "Move cursor to 'home' position.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\control.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "move",
            "description": "Move cursor relative to current position.\n\n        Args:\n            x (int): X offset.\n            y (int): Y offset.\n\n        Returns:\n            ~Control: Control object.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\control.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "move_to_column",
            "description": "Move to the given column, optionally add offset to row.\n\n        Returns:\n            x (int): absolute x (column)\n            y (int): optional y offset (row)\n\n        Returns:\n            ~Control: Control object.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\control.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "move_to",
            "description": "Move cursor to absolute position.\n\n        Args:\n            x (int): x offset (column)\n            y (int): y offset (row)\n\n        Returns:\n            ~Control: Control object.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\control.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "clear",
            "description": "Clear the screen.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\control.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "show_cursor",
            "description": "Show or hide the cursor.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\control.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "alt_screen",
            "description": "Enable or disable alt screen.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\control.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "title",
            "description": "Set the terminal window title\n\n        Args:\n            title (str): The new terminal window title\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\control.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "replace",
            "description": "Replace emoji markup with corresponding unicode characters.\n\n        Args:\n            text (str): A string with emojis codes, e.g. \"Hello :smiley:!\"\n\n        Returns:\n            str: A string with emoji codes replaces with actual emoji.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\emoji.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "rich_proxied_file",
            "description": "Get proxied file.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\file_proxy.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "highlight",
            "description": "Apply highlighting in place to text.\n\n        Args:\n            text (~Text): A text object highlight.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "A text object highlight."
                    }
                },
                "required": [
                    "text"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\highlighter.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "from_data",
            "description": "Encodes a JSON object from arbitrary data.\n\n        Args:\n            data (Any): An object that may be encoded in to JSON\n            indent (Union[None, int, str], optional): Number of characters to indent by. Defaults to 2.\n            highlight (bool, optional): Enable highlighting. Defaults to True.\n            default (Callable, optional): Optional callable which will be called for objects that cannot be serialized. Defaults to None.\n            skip_keys (bool, optional): Skip keys not of a basic type. Defaults to False.\n            ensure_ascii (bool, optional): Escape all non-ascii characters. Defaults to False.\n            check_circular (bool, optional): Check for circular references. Defaults to True.\n            allow_nan (bool, optional): Allow NaN and Infinity values. Defaults to True.\n            default (Callable, optional): A callable that converts values that can not be encoded\n                in to something that can be JSON encoded. Defaults to None.\n            sort_keys (bool, optional): Sort dictionary keys. Defaults to False.\n\n        Returns:\n            JSON: New JSON object from the given data.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\json.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_tree_icon",
            "description": "Get the icon (emoji) used in layout.tree",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\layout.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "divide",
            "description": "Divide a region amongst several child layouts.\n\n        Args:\n            children (Sequence(Layout)): A number of child layouts.\n            region (Region): A rectangular region to divide.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "region": {
                        "type": "string",
                        "description": "A rectangular region to divide."
                    }
                },
                "required": [
                    "region"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\layout.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "is_started",
            "description": "Check if live display has been started.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\live.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "renderable",
            "description": "Get the renderable that is being displayed\n\n        Returns:\n            RenderableType: Displayed renderable.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\live.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "markup",
            "description": "Get the string representation of this tag.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\markup.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "span",
            "description": "Get difference between maximum and minimum.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\measure.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "get",
            "description": "Get a measurement for a renderable.\n\n        Args:\n            console (~rich.console.Console): Console instance.\n            options (~rich.console.ConsoleOptions): Console options.\n            renderable (RenderableType): An object that may be rendered with Rich.\n\n        Raises:\n            errors.NotRenderableError: If the object is not renderable.\n\n        Returns:\n            Measurement: Measurement object containing range of character widths required to render the object.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\measure.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "indent",
            "description": "Make padding instance to render an indent.\n\n        Args:\n            renderable (RenderableType): String or other renderable.\n            level (int): Number of characters to indent.\n\n        Returns:\n            Padding: A Padding instance.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\padding.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "unpack",
            "description": "Unpack padding specified in CSS style.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\padding.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "show",
            "description": "Show content in pager.\n\n        Args:\n            content (str): Content to be displayed.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "Content to be displayed."
                    }
                },
                "required": [
                    "content"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\pager.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "match",
            "description": "Find a color from a palette that most closely matches a given color.\n\n        Args:\n            color (Tuple[int, int, int]): RGB components in range 0 > 255.\n\n        Returns:\n            int: Index of closes matching color.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "color": {
                        "type": "string",
                        "description": "RGB components in range 0 > 255."
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "int": {
                        "type": "string",
                        "description": "Index of closes matching color."
                    }
                },
                "required": [
                    "color",
                    "Returns",
                    "int"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\palette.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "fit",
            "description": "An alternative constructor that sets expand=False.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\panel.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_title",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\panel.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_subtitle",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\panel.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "expandable",
            "description": "Check if the line may be expanded.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\pretty.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "closed",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\progress.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\progress.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\progress.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "open",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\progress.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "open",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\progress.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "render",
            "description": "Should return a renderable object.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\progress.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "render_speed",
            "description": "Render the speed in iterations per second.\n\n        Args:\n            task (Task): A Task object.\n\n        Returns:\n            Text: Text object containing the task speed.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\progress.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "percentage_completed",
            "description": "Calculate percentage complete.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\progress_bar.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_get_pulse_segments",
            "description": "Get a list of segments to render a pulse animation.\n\n        Returns:\n            List[Segment]: A list of segments, one segment per character.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\progress_bar.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "ask",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\prompt.py",
            "decorator": [
                "classmethod",
                "overload"
            ]
        },
        {
            "name": "ask",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\prompt.py",
            "decorator": [
                "classmethod",
                "overload"
            ]
        },
        {
            "name": "ask",
            "description": "Shortcut to construct and run a prompt loop and return the result.\n\n        Example:\n            >>> filename = Prompt.ask(\"Enter a filename\")\n\n        Args:\n            prompt (TextType, optional): Prompt text. Defaults to \"\".\n            console (Console, optional): A Console instance or None to use global console. Defaults to None.\n            password (bool, optional): Enable password input. Defaults to False.\n            choices (List[str], optional): A list of valid choices. Defaults to None.\n            show_default (bool, optional): Show default in prompt. Defaults to True.\n            show_choices (bool, optional): Show choices in prompt. Defaults to True.\n            stream (TextIO, optional): Optional text file open for reading to get input. Defaults to None.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\prompt.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_input",
            "description": "Get input from user.\n\n        Args:\n            console (Console): Console instance.\n            prompt (TextType): Prompt text.\n            password (bool): Enable password entry.\n\n        Returns:\n            str: String from user.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\prompt.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__call__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\prompt.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__call__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\prompt.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "auto",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\repr.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "auto",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\repr.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "rich_repr",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\repr.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "rich_repr",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\repr.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "cell_length",
            "description": "The number of terminal cells required to display self.text.\n\n        Returns:\n            int: A number of cells.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_control",
            "description": "Check if the segment contains control codes.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_split_cells",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod",
                "lru_cache"
            ]
        },
        {
            "name": "line",
            "description": "Make a new line segment.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "apply_style",
            "description": "Apply style(s) to an iterable of segments.\n\n        Returns an iterable of segments where the style is replaced by ``style + segment.style + post_style``.\n\n        Args:\n            segments (Iterable[Segment]): Segments to process.\n            style (Style, optional): Base style. Defaults to None.\n            post_style (Style, optional): Style to apply on top of segment style. Defaults to None.\n\n        Returns:\n            Iterable[Segments]: A new iterable of segments (possibly the same iterable).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "filter_control",
            "description": "Filter segments by ``is_control`` attribute.\n\n        Args:\n            segments (Iterable[Segment]): An iterable of Segment instances.\n            is_control (bool, optional): is_control flag to match in search.\n\n        Returns:\n            Iterable[Segment]: And iterable of Segment instances.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "split_lines",
            "description": "Split a sequence of segments in to a list of lines.\n\n        Args:\n            segments (Iterable[Segment]): Segments potentially containing line feeds.\n\n        Yields:\n            Iterable[List[Segment]]: Iterable of segment lists, one per line.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "split_and_crop_lines",
            "description": "Split segments in to lines, and crop lines greater than a given length.\n\n        Args:\n            segments (Iterable[Segment]): An iterable of segments, probably\n                generated from console.render.\n            length (int): Desired line length.\n            style (Style, optional): Style to use for any padding.\n            pad (bool): Enable padding of lines that are less than `length`.\n\n        Returns:\n            Iterable[List[Segment]]: An iterable of lines of segments.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "adjust_line_length",
            "description": "Adjust a line to a given width (cropping or padding as required).\n\n        Args:\n            segments (Iterable[Segment]): A list of segments in a single line.\n            length (int): The desired width of the line.\n            style (Style, optional): The style of padding if used (space on the end). Defaults to None.\n            pad (bool, optional): Pad lines with spaces if they are shorter than `length`. Defaults to True.\n\n        Returns:\n            List[Segment]: A line of segments with the desired length.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_line_length",
            "description": "Get the length of list of segments.\n\n        Args:\n            line (List[Segment]): A line encoded as a list of Segments (assumes no '\\\\\\\\n' characters),\n\n        Returns:\n            int: The length of the line.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_shape",
            "description": "Get the shape (enclosing rectangle) of a list of lines.\n\n        Args:\n            lines (List[List[Segment]]): A list of lines (no '\\\\\\\\n' characters).\n\n        Returns:\n            Tuple[int, int]: Width and height in characters.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "set_shape",
            "description": "Set the shape of a list of lines (enclosing rectangle).\n\n        Args:\n            lines (List[List[Segment]]): A list of lines.\n            width (int): Desired width.\n            height (int, optional): Desired height or None for no change.\n            style (Style, optional): Style of any padding added.\n            new_lines (bool, optional): Padded lines should include \"\\n\". Defaults to False.\n\n        Returns:\n            List[List[Segment]]: New list of lines.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "align_top",
            "description": "Aligns lines to top (adds extra lines to bottom as required).\n\n        Args:\n            lines (List[List[Segment]]): A list of lines.\n            width (int): Desired width.\n            height (int, optional): Desired height or None for no change.\n            style (Style): Style of any padding added.\n            new_lines (bool, optional): Padded lines should include \"\\n\". Defaults to False.\n\n        Returns:\n            List[List[Segment]]: New list of lines.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "lines": {
                        "type": "string",
                        "description": "A list of lines."
                    },
                    "width": {
                        "type": "integer",
                        "description": "Desired width."
                    },
                    "height": {
                        "type": "integer",
                        "description": "Desired height or None for no change."
                    },
                    "style": {
                        "type": "string",
                        "description": "Style of any padding added."
                    },
                    "new_lines": {
                        "type": "boolean",
                        "description": "Padded lines should include \"\\n\". Defaults to False."
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "lines",
                    "width",
                    "style",
                    "Returns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "align_bottom",
            "description": "Aligns render to bottom (adds extra lines above as required).\n\n        Args:\n            lines (List[List[Segment]]): A list of lines.\n            width (int): Desired width.\n            height (int, optional): Desired height or None for no change.\n            style (Style): Style of any padding added. Defaults to None.\n            new_lines (bool, optional): Padded lines should include \"\\n\". Defaults to False.\n\n        Returns:\n            List[List[Segment]]: New list of lines.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "lines": {
                        "type": "string",
                        "description": "A list of lines."
                    },
                    "width": {
                        "type": "integer",
                        "description": "Desired width."
                    },
                    "height": {
                        "type": "integer",
                        "description": "Desired height or None for no change."
                    },
                    "style": {
                        "type": "string",
                        "description": "Style of any padding added. Defaults to None."
                    },
                    "new_lines": {
                        "type": "boolean",
                        "description": "Padded lines should include \"\\n\". Defaults to False."
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "lines",
                    "width",
                    "style",
                    "Returns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "align_middle",
            "description": "Aligns lines to middle (adds extra lines to above and below as required).\n\n        Args:\n            lines (List[List[Segment]]): A list of lines.\n            width (int): Desired width.\n            height (int, optional): Desired height or None for no change.\n            style (Style): Style of any padding added.\n            new_lines (bool, optional): Padded lines should include \"\\n\". Defaults to False.\n\n        Returns:\n            List[List[Segment]]: New list of lines.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "lines": {
                        "type": "string",
                        "description": "A list of lines."
                    },
                    "width": {
                        "type": "integer",
                        "description": "Desired width."
                    },
                    "height": {
                        "type": "integer",
                        "description": "Desired height or None for no change."
                    },
                    "style": {
                        "type": "string",
                        "description": "Style of any padding added."
                    },
                    "new_lines": {
                        "type": "boolean",
                        "description": "Padded lines should include \"\\n\". Defaults to False."
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "lines",
                    "width",
                    "style",
                    "Returns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "simplify",
            "description": "Simplify an iterable of segments by combining contiguous segments with the same style.\n\n        Args:\n            segments (Iterable[Segment]): An iterable of segments.\n\n        Returns:\n            Iterable[Segment]: A possibly smaller iterable of segments that will render the same way.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "strip_links",
            "description": "Remove all links from an iterable of styles.\n\n        Args:\n            segments (Iterable[Segment]): An iterable segments.\n\n        Yields:\n            Segment: Segments with link removed.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "strip_styles",
            "description": "Remove all styles from an iterable of segments.\n\n        Args:\n            segments (Iterable[Segment]): An iterable segments.\n\n        Yields:\n            Segment: Segments with styles replace with None\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "remove_color",
            "description": "Remove all color from an iterable of segments.\n\n        Args:\n            segments (Iterable[Segment]): An iterable segments.\n\n        Yields:\n            Segment: Segments with colorless style.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "divide",
            "description": "Divides an iterable of segments in to portions.\n\n        Args:\n            cuts (Iterable[int]): Cell positions where to divide.\n\n        Yields:\n            [Iterable[List[Segment]]]: An iterable of Segments in List.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\segment.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "renderable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\status.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "console",
            "description": "Get the Console used by the Status objects.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\status.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "null",
            "description": "Create an 'null' style, equivalent to Style(), but more performant.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_color",
            "description": "Create a new style with colors and no attributes.\n\n        Returns:\n            color (Optional[Color]): A (foreground) color, or None for no color. Defaults to None.\n            bgcolor (Optional[Color]): A (background) color, or None for no color. Defaults to None.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_meta",
            "description": "Create a new style with meta data.\n\n        Returns:\n            meta (Optional[Dict[str, Any]]): A dictionary of meta data. Defaults to None.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "on",
            "description": "Create a blank style with meta information.\n\n        Example:\n            style = Style.on(click=self.on_click)\n\n        Args:\n            meta (Optional[Dict[str, Any]], optional): An optional dict of meta information.\n            **handlers (Any): Keyword arguments are translated in to handlers.\n\n        Returns:\n            Style: A Style with meta information attached.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "link_id",
            "description": "Get a link id, used in ansi code for links.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "normalize",
            "description": "Normalize a style definition so that styles with the same effect have the same string\n        representation.\n\n        Args:\n            style (str): A style definition.\n\n        Returns:\n            str: Normal form of style definition.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "classmethod",
                "lru_cache"
            ]
        },
        {
            "name": "pick_first",
            "description": "Pick first non-None style.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "color",
            "description": "The foreground color or None if it is not set.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "bgcolor",
            "description": "The background color or None if it is not set.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "link",
            "description": "Link text, if set.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "transparent_background",
            "description": "Check if the style specified a transparent background.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "background_style",
            "description": "A Style with background only.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "meta",
            "description": "Get meta information (can not be changed after construction).",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "without_color",
            "description": "Get a copy of the style with color removed.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "parse",
            "description": "Parse a style definition.\n\n        Args:\n            style_definition (str): A string containing a style.\n\n        Raises:\n            errors.StyleSyntaxError: If the style definition syntax is invalid.\n\n        Returns:\n            `Style`: A Style instance.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "classmethod",
                "lru_cache"
            ]
        },
        {
            "name": "get_html_style",
            "description": "Get a CSS style rule.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "combine",
            "description": "Combine styles and get result.\n\n        Args:\n            styles (Iterable[Style]): Styles to combine.\n\n        Returns:\n            Style: A new style instance.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "chain",
            "description": "Combine styles from positional argument in to a single style.\n\n        Args:\n            *styles (Iterable[Style]): Styles to combine.\n\n        Returns:\n            Style: A new style instance.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "clear_meta_and_links",
            "description": "Get a copy of this style with link and meta information removed.\n\n        Returns:\n            Style: New style object.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "_add",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "current",
            "description": "Get the Style at the top of the stack.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\style.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "get_style_for_token",
            "description": "Get a style for a given Pygments token.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\syntax.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "get_background_style",
            "description": "Get the background color.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\syntax.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "get_theme",
            "description": "Get a syntax theme instance.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\syntax.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_path",
            "description": "Construct a Syntax object from a file.\n\n        Args:\n            path (str): Path to file to highlight.\n            encoding (str): Encoding of file.\n            lexer (str | Lexer, optional): Lexer to use. If None, lexer will be auto-detected from path/file content.\n            theme (str, optional): Color theme, aka Pygments style (see https://pygments.org/docs/styles/#getting-a-list-of-available-styles). Defaults to \"emacs\".\n            dedent (bool, optional): Enable stripping of initial whitespace. Defaults to True.\n            line_numbers (bool, optional): Enable rendering of line numbers. Defaults to False.\n            start_line (int, optional): Starting number for line numbers. Defaults to 1.\n            line_range (Tuple[int, int], optional): If given should be a tuple of the start and end line to render.\n            highlight_lines (Set[int]): A set of line numbers to highlight.\n            code_width: Width of code to render (not including line numbers), or ``None`` to use all available width.\n            tab_size (int, optional): Size of tabs. Defaults to 4.\n            word_wrap (bool, optional): Enable word wrapping of code.\n            background_color (str, optional): Optional background color, or None to use theme color. Defaults to None.\n            indent_guides (bool, optional): Show indent guides. Defaults to False.\n            padding (PaddingDimensions): Padding to apply around the syntax. Defaults to 0 (no padding).\n\n        Returns:\n            [Syntax]: A Syntax object that may be printed to the console\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\syntax.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "guess_lexer",
            "description": "Guess the alias of the Pygments lexer to use based on a path and an optional string of code.\n        If code is supplied, it will use a combination of the code and the filename to determine the\n        best lexer to use. For example, if the file is ``index.html`` and the file contains Django\n        templating syntax, then \"html+django\" will be returned. If the file is ``index.html``, and no\n        templating language is used, the \"html\" lexer will be used. If no string of code\n        is supplied, the lexer will be chosen based on the file extension..\n\n        Args:\n             path (AnyStr): The path to the file containing the code you wish to know the lexer for.\n             code (str, optional): Optional string of code that will be used as a fallback if no lexer\n                is found for the supplied path.\n\n        Returns:\n            str: The name of the Pygments lexer that best matches the supplied path/code.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\syntax.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "lexer",
            "description": "The lexer for this syntax, or None if no lexer was found.\n\n        Tries to find the lexer by name if a string was passed to the constructor.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\syntax.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_numbers_column_width",
            "description": "Get the number of characters used to render the numbers column.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\syntax.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cells",
            "description": "Get all cells in the column, not including header.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\table.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "flexible",
            "description": "Check if this column is flexible.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\table.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "grid",
            "description": "Get a table with no lines, headers, or footer.\n\n        Args:\n            *headers (Union[Column, str]): Column headers, either as a string, or :class:`~rich.table.Column` instance.\n            padding (PaddingDimensions, optional): Get padding around cells. Defaults to 0.\n            collapse_padding (bool, optional): Enable collapsing of padding around cells. Defaults to True.\n            pad_edge (bool, optional): Enable padding around edges of table. Defaults to False.\n            expand (bool, optional): Expand the table to fit the available space if ``True``, otherwise the table width will be auto-calculated. Defaults to False.\n\n        Returns:\n            Table: A table instance.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\table.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "expand",
            "description": "Setting a non-None self.width implies expand.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\table.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "expand",
            "description": "Set expand.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\table.py",
            "decorator": [
                "expand.setter"
            ]
        },
        {
            "name": "_extra_width",
            "description": "Get extra width to add to cell content.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\table.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "row_count",
            "description": "Get the current number of rows.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\table.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "padding",
            "description": "Get cell padding.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\table.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "padding",
            "description": "Set cell padding.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\table.py",
            "decorator": [
                "padding.setter"
            ]
        },
        {
            "name": "_collapse_widths",
            "description": "Reduce widths so that the total is under max_width.\n\n        Args:\n            widths (List[int]): List of widths.\n            wrapable (List[bool]): List of booleans that indicate if a column may shrink.\n            max_width (int): Maximum width to reduce to.\n\n        Returns:\n            List[int]: A new list of widths.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\table.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "cell_len",
            "description": "Get the number of cells required to render this text.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\text.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "markup",
            "description": "Get console markup to render this Text.\n\n        Returns:\n            str: A string potentially creating markup tags.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\text.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_markup",
            "description": "Create Text instance from markup.\n\n        Args:\n            text (str): A string containing console markup.\n            emoji (bool, optional): Also render emoji code. Defaults to True.\n            justify (str, optional): Justify method: \"left\", \"center\", \"full\", \"right\". Defaults to None.\n            overflow (str, optional): Overflow method: \"crop\", \"fold\", \"ellipsis\". Defaults to None.\n            end (str, optional): Character to end text with. Defaults to \"\\\\\\\\n\".\n\n        Returns:\n            Text: A Text instance with markup rendered.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\text.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_ansi",
            "description": "Create a Text object from a string containing ANSI escape codes.\n\n        Args:\n            text (str): A string containing escape codes.\n            style (Union[str, Style], optional): Base style for text. Defaults to \"\".\n            justify (str, optional): Justify method: \"left\", \"center\", \"full\", \"right\". Defaults to None.\n            overflow (str, optional): Overflow method: \"crop\", \"fold\", \"ellipsis\". Defaults to None.\n            no_wrap (bool, optional): Disable text wrapping, or None for default. Defaults to None.\n            end (str, optional): Character to end text with. Defaults to \"\\\\\\\\n\".\n            tab_size (int): Number of spaces per tab, or ``None`` to use ``console.tab_size``. Defaults to 8.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\text.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "styled",
            "description": "Construct a Text instance with a pre-applied styled. A style applied in this way won't be used\n        to pad the text when it is justified.\n\n        Args:\n            text (str): A string containing console markup.\n            style (Union[str, Style]): Style to apply to the text. Defaults to \"\".\n            justify (str, optional): Justify method: \"left\", \"center\", \"full\", \"right\". Defaults to None.\n            overflow (str, optional): Overflow method: \"crop\", \"fold\", \"ellipsis\". Defaults to None.\n\n        Returns:\n            Text: A text instance with a style applied to the entire string.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\text.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "assemble",
            "description": "Construct a text instance by combining a sequence of strings with optional styles.\n        The positional arguments should be either strings, or a tuple of string + style.\n\n        Args:\n            style (Union[str, Style], optional): Base style for text. Defaults to \"\".\n            justify (str, optional): Justify method: \"left\", \"center\", \"full\", \"right\". Defaults to None.\n            overflow (str, optional): Overflow method: \"crop\", \"fold\", \"ellipsis\". Defaults to None.\n            end (str, optional): Character to end text with. Defaults to \"\\\\\\\\n\".\n            tab_size (int): Number of spaces per tab, or ``None`` to use ``console.tab_size``. Defaults to 8.\n            meta (Dict[str, Any], optional). Meta data to apply to text, or None for no meta data. Default to None\n\n        Returns:\n            Text: A new text instance.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\text.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "plain",
            "description": "Get the text as a single string.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\text.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "plain",
            "description": "Set the text to a new value.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\text.py",
            "decorator": [
                "plain.setter"
            ]
        },
        {
            "name": "spans",
            "description": "Get a reference to the internal list of spans.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\text.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "spans",
            "description": "Set spans.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\text.py",
            "decorator": [
                "spans.setter"
            ]
        },
        {
            "name": "config",
            "description": "Get contents of a config file for this theme.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\theme.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_file",
            "description": "Load a theme from a text mode file.\n\n        Args:\n            config_file (IO[str]): An open conf file.\n            source (str, optional): The filename of the open file. Defaults to None.\n            inherit (bool, optional): Inherit default styles. Defaults to True.\n\n        Returns:\n            Theme: A New theme instance.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\theme.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "read",
            "description": "Read a theme from a path.\n\n        Args:\n            path (str): Path to a config file readable by Python configparser module.\n            inherit (bool, optional): Inherit default styles. Defaults to True.\n            encoding (str, optional): Encoding of the config file. Defaults to None.\n\n        Returns:\n            Theme: A new theme instance.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\theme.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_exception",
            "description": "Create a traceback from exception info\n\n        Args:\n            exc_type (Type[BaseException]): Exception type.\n            exc_value (BaseException): Exception value.\n            traceback (TracebackType): Python Traceback object.\n            width (Optional[int], optional): Number of characters used to traceback. Defaults to 100.\n            extra_lines (int, optional): Additional lines of code to render. Defaults to 3.\n            theme (str, optional): Override pygments theme used in traceback.\n            word_wrap (bool, optional): Enable word wrapping of long lines. Defaults to False.\n            show_locals (bool, optional): Enable display of local variables. Defaults to False.\n            indent_guides (bool, optional): Enable indent guides in code and locals. Defaults to True.\n            locals_max_length (int, optional): Maximum length of containers before abbreviating, or None for no abbreviation.\n                Defaults to 10.\n            locals_max_string (int, optional): Maximum length of string before truncating, or None to disable. Defaults to 80.\n            locals_hide_dunder (bool, optional): Hide locals prefixed with double underscore. Defaults to True.\n            locals_hide_sunder (bool, optional): Hide locals prefixed with single underscore. Defaults to False.\n            suppress (Iterable[Union[str, ModuleType]]): Optional sequence of modules or paths to exclude from traceback.\n            max_frames (int): Maximum number of frames to show in a traceback, 0 for no maximum. Defaults to 100.\n\n        Returns:\n            Traceback: A Traceback instance that may be printed.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\traceback.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "extract",
            "description": "Extract traceback information.\n\n        Args:\n            exc_type (Type[BaseException]): Exception type.\n            exc_value (BaseException): Exception value.\n            traceback (TracebackType): Python Traceback object.\n            show_locals (bool, optional): Enable display of local variables. Defaults to False.\n            locals_max_length (int, optional): Maximum length of containers before abbreviating, or None for no abbreviation.\n                Defaults to 10.\n            locals_max_string (int, optional): Maximum length of string before truncating, or None to disable. Defaults to 80.\n            locals_hide_dunder (bool, optional): Hide locals prefixed with double underscore. Defaults to True.\n            locals_hide_sunder (bool, optional): Hide locals prefixed with single underscore. Defaults to False.\n\n        Returns:\n            Trace: A Trace instance which you can use to construct a `Traceback`.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\traceback.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_render_syntax_error",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\traceback.py",
            "decorator": [
                "group"
            ]
        },
        {
            "name": "top",
            "description": "Get top of stack.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\_stack.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "timer",
            "description": "print the elapsed time. (only used in debugging)",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\_timer.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "from_param",
            "description": "Converts a WindowsCoordinates into a wintypes _COORD structure.\n        This classmethod is internally called by ctypes to perform the conversion.\n\n        Args:\n            value (WindowsCoordinates): The input coordinates to convert.\n\n        Returns:\n            wintypes._COORD: The converted coordinates struct.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\_win32_console.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "cursor_position",
            "description": "Returns the current position of the cursor (0-based)\n\n        Returns:\n            WindowsCoordinates: The current cursor position.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\_win32_console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "screen_size",
            "description": "Returns the current size of the console screen buffer, in character columns and rows\n\n        Returns:\n            WindowsCoordinates: The width and height of the screen as WindowsCoordinates.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\rich\\_win32_console.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__call__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\tenacity\\tornadoweb.py",
            "decorator": [
                "gen.coroutine#type:ignore[misc]"
            ]
        },
        {
            "name": "cached_tz",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\tomli\\_re.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "__class__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "property#type:ignore[misc]"
            ]
        },
        {
            "name": "get_ca_certs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "get_ca_certs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "get_ca_certs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "check_hostname",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "check_hostname",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "check_hostname.setter"
            ]
        },
        {
            "name": "hostname_checks_common_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "hostname_checks_common_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "hostname_checks_common_name.setter"
            ]
        },
        {
            "name": "keylog_filename",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "keylog_filename",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "keylog_filename.setter"
            ]
        },
        {
            "name": "maximum_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "maximum_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "maximum_version.setter"
            ]
        },
        {
            "name": "minimum_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "minimum_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "minimum_version.setter"
            ]
        },
        {
            "name": "options",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "options",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "options.setter"
            ]
        },
        {
            "name": "post_handshake_auth",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "post_handshake_auth",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "post_handshake_auth.setter"
            ]
        },
        {
            "name": "protocol",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "security_level",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "verify_flags",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "verify_flags",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "verify_flags.setter"
            ]
        },
        {
            "name": "verify_mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "verify_mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_api.py",
            "decorator": [
                "verify_mode.setter"
            ]
        },
        {
            "name": "_configure_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_macos.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "_configure_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_openssl.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "_configure_context",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\truststore\\_windows.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "host",
            "description": "\n        Getter method to remove any trailing dots that indicate the hostname is an FQDN.\n\n        In general, SSL certificates don't include the trailing dot indicating a\n        fully-qualified domain name, and thus, they don't validate properly when\n        checked against a domain name that includes the dot. In addition, some\n        servers may not expect to receive the trailing dot when provided.\n\n        However, the hostname with trailing dot is critical to DNS resolution; doing a\n        lookup with the trailing dot will properly only resolve the appropriate FQDN,\n        whereas a lookup without a trailing dot will search the system's search domain\n        list. Thus, it's important to keep the original host around for use only in\n        those cases where it's appropriate (i.e., when doing DNS lookup to establish the\n        actual TCP connection across which we're going to send HTTP requests).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "host",
            "description": "\n        Setter for the `host` property.\n\n        We assume that only urllib3 uses the _dns_host attribute; httplib itself\n        only uses `host`, and it seems reasonable that other libraries follow suit.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
            "decorator": [
                "host.setter"
            ]
        },
        {
            "name": "from_tuples",
            "description": "\n        A :class:`~urllib3.fields.RequestField` factory from old-style tuple parameters.\n\n        Supports constructing :class:`~urllib3.fields.RequestField` from\n        parameter of key/value strings AND key/filetuple. A filetuple is a\n        (filename, data, MIME type) tuple where the MIME type is optional.\n        For example::\n\n            'foo': 'bar',\n            'fakefile': ('foofile.txt', 'contents of foofile'),\n            'realfile': ('barfile.txt', open('realfile').read()),\n            'typedfile': ('bazfile.bin', open('bazfile').read(), 'image/jpeg'),\n            'nonamefile': 'contents of nonamefile field',\n\n        Field names and filenames must be unicode.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "fieldname": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "fieldname",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\fields.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "data",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\response.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "connection",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\response.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_error_catcher",
            "description": "\n        Catch low-level python exceptions, instead re-raising urllib3\n        variants, so that low-level exceptions are not leaked in the\n        high-level api.\n\n        On exit, release the connection back to the pool.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\response.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "from_httplib",
            "description": "\n        Given an :class:`http.client.HTTPResponse` instance ``r``, return a\n        corresponding :class:`urllib3.response.HTTPResponse` object.\n\n        Remaining parameters are passed to the HTTPResponse constructor, along\n        with ``original_response=r``.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "ResponseCls": {
                        "type": "string"
                    },
                    "r": {
                        "type": "string"
                    }
                },
                "required": [
                    "ResponseCls",
                    "r"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\response.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "closed",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\response.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_httplib",
            "description": "Read headers from a Python 2 httplib message object.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "message"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\_collections.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "options",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\contrib\\pyopenssl.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "options",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\contrib\\pyopenssl.py",
            "decorator": [
                "options.setter"
            ]
        },
        {
            "name": "verify_mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\contrib\\pyopenssl.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "verify_mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\contrib\\pyopenssl.py",
            "decorator": [
                "verify_mode.setter"
            ]
        },
        {
            "name": "_raise_on_error",
            "description": "\n        A context manager that can be used to wrap calls that do I/O from\n        SecureTransport. If any of the I/O callbacks hit an exception, this\n        context manager will correctly propagate the exception after the fact.\n        This avoids silently swallowing those exceptions.\n\n        It also correctly forces the socket closed.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "check_hostname",
            "description": "\n        SecureTransport cannot have its hostname checking disabled. For more,\n        see the comment on getpeercert() in this file.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "check_hostname",
            "description": "\n        SecureTransport cannot have its hostname checking disabled. For more,\n        see the comment on getpeercert() in this file.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "check_hostname.setter"
            ]
        },
        {
            "name": "options",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "options",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "options.setter"
            ]
        },
        {
            "name": "verify_mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "verify_mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "verify_mode.setter"
            ]
        },
        {
            "name": "__prepare__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "this_bases": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "name",
                    "this_bases"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\packages\\six.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "alive",
            "description": "Whether finalizer is alive",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports\\weakref_finalize.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "atexit",
            "description": "Whether finalizer should be called at exit",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports\\weakref_finalize.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "atexit",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports\\weakref_finalize.py",
            "decorator": [
                "atexit.setter"
            ]
        },
        {
            "name": "_select_for_exit",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports\\weakref_finalize.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_exitfunc",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports\\weakref_finalize.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "DEFAULT_METHOD_WHITELIST",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "DEFAULT_METHOD_WHITELIST",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
            "decorator": [
                "DEFAULT_METHOD_WHITELIST.setter"
            ]
        },
        {
            "name": "DEFAULT_REDIRECT_HEADERS_BLACKLIST",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "DEFAULT_REDIRECT_HEADERS_BLACKLIST",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
            "decorator": [
                "DEFAULT_REDIRECT_HEADERS_BLACKLIST.setter"
            ]
        },
        {
            "name": "BACKOFF_MAX",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "BACKOFF_MAX",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
            "decorator": [
                "BACKOFF_MAX.setter"
            ]
        },
        {
            "name": "from_int",
            "description": "Backwards-compatibility for the old retries format.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "retries": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "retries"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_validate_ssl_context_for_tls_in_tls",
            "description": "\n        Raises a ProxySchemeUnsupported if the provided ssl_context can't be used\n        for TLS in TLS.\n\n        The only requirement is that the ssl_context provides the 'wrap_bio'\n        methods.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "ssl_context": {
                        "type": "string"
                    }
                },
                "required": [
                    "ssl_context"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\ssltransport.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "resolve_default_timeout",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "timeout": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "timeout"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\timeout.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_validate_timeout",
            "description": "Check that a timeout attribute is valid.\n\n        :param value: The timeout value to validate\n        :param name: The name of the timeout attribute to validate. This is\n            used to specify in error messages.\n        :return: The validated and casted version of the given value.\n        :raises ValueError: If it is a numeric value less than or equal to\n            zero, or the type is not an integer, float, or None.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value",
                    "name"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\timeout.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_float",
            "description": "Create a new Timeout from a legacy timeout value.\n\n        The timeout value used by httplib.py sets the same timeout on the\n        connect(), and recv() socket requests. This creates a :class:`Timeout`\n        object that sets the individual timeouts to the ``timeout`` value\n        passed to this function.\n\n        :param timeout: The legacy timeout value.\n        :type timeout: integer, float, sentinel default object, or None\n        :return: Timeout object\n        :rtype: :class:`Timeout`\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "timeout": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "timeout"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\timeout.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "connect_timeout",
            "description": "Get the value to use when setting a connection timeout.\n\n        This will be a positive float or integer, the value None\n        (never timeout), or the default system timeout.\n\n        :return: Connect timeout.\n        :rtype: int, float, :attr:`Timeout.DEFAULT_TIMEOUT` or None\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\timeout.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "read_timeout",
            "description": "Get the value for the read timeout.\n\n        This assumes some time has elapsed in the connection timeout and\n        computes the read timeout appropriately.\n\n        If self.total is set, the read timeout is dependent on the amount of\n        time taken by the connect timeout. If the connection time has not been\n        established, a :exc:`~urllib3.exceptions.TimeoutStateError` will be\n        raised.\n\n        :return: Value to use for the read timeout.\n        :rtype: int, float, :attr:`Timeout.DEFAULT_TIMEOUT` or None\n        :raises urllib3.exceptions.TimeoutStateError: If :meth:`start_connect`\n            has not yet been called on this object.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\timeout.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "hostname",
            "description": "For backwards-compatibility with urlparse. We're nice like that.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "request_uri",
            "description": "Absolute path including the query string.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "netloc",
            "description": "Network location including host and port",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "url",
            "description": "\n        Convert self into a url\n\n        This function should more or less round-trip with :func:`.parse_url`. The\n        returned url may not be exactly the same as the url inputted to\n        :func:`.parse_url`, but it should be equivalent by the RFC (e.g., urls\n        with a blank port will have : removed).\n\n        Example: ::\n\n            >>> U = parse_url('http://google.com/mail/')\n            >>> U.url\n            'http://google.com/mail/'\n            >>> Url('http', 'username:password', 'host.com', 80,\n            ... '/path', 'query', 'fragment').url\n            'http://username:password@host.com:80/path?query#fragment'\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "field_name",
            "description": "Get the name of the closest field to this validator.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\annotated_handlers.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__get_pydantic_json_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\color.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\color.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\color.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "dataclass",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\dataclasses.py",
            "decorator": [
                "dataclass_transform",
                "overload"
            ]
        },
        {
            "name": "dataclass",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\dataclasses.py",
            "decorator": [
                "dataclass_transform",
                "overload"
            ]
        },
        {
            "name": "dataclass",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\dataclasses.py",
            "decorator": [
                "dataclass_transform",
                "overload"
            ]
        },
        {
            "name": "dataclass",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\dataclasses.py",
            "decorator": [
                "dataclass_transform",
                "overload"
            ]
        },
        {
            "name": "dataclass",
            "description": "!!! abstract \"Usage Documentation\"\n        [`dataclasses`](../concepts/dataclasses.md)\n\n    A decorator used to create a Pydantic-enhanced dataclass, similar to the standard Python `dataclass`,\n    but with added validation.\n\n    This function should be used similarly to `dataclasses.dataclass`.\n\n    Args:\n        _cls: The target `dataclass`.\n        init: Included for signature compatibility with `dataclasses.dataclass`, and is passed through to\n            `dataclasses.dataclass` when appropriate. If specified, must be set to `False`, as pydantic inserts its\n            own  `__init__` function.\n        repr: A boolean indicating whether to include the field in the `__repr__` output.\n        eq: Determines if a `__eq__` method should be generated for the class.\n        order: Determines if comparison magic methods should be generated, such as `__lt__`, but not `__eq__`.\n        unsafe_hash: Determines if a `__hash__` method should be included in the class, as in `dataclasses.dataclass`.\n        frozen: Determines if the generated class should be a 'frozen' `dataclass`, which does not allow its\n            attributes to be modified after it has been initialized. If not set, the value from the provided `config` argument will be used (and will default to `False` otherwise).\n        config: The Pydantic config to use for the `dataclass`.\n        validate_on_init: A deprecated parameter included for backwards compatibility; in V2, all Pydantic dataclasses\n            are validated on init.\n        kw_only: Determines if `__init__` method parameters must be specified by keyword only. Defaults to `False`.\n        slots: Determines if the generated class should be a 'slots' `dataclass`, which does not allow the addition of\n            new attributes after instantiation.\n\n    Returns:\n        A decorator that accepts a class as its argument and returns a Pydantic `dataclass`.\n\n    Raises:\n        AssertionError: Raised if `init` is not `False` or `validate_on_init` is `False`.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "_cls": {
                        "type": "string",
                        "description": "The target `dataclass`."
                    },
                    "init": {
                        "type": "string",
                        "description": "Included for signature compatibility with `dataclasses.dataclass`, and is passed through to"
                    },
                    "repr": {
                        "type": "string",
                        "description": "A boolean indicating whether to include the field in the `__repr__` output."
                    },
                    "eq": {
                        "type": "string",
                        "description": "Determines if a `__eq__` method should be generated for the class."
                    },
                    "order": {
                        "type": "string",
                        "description": "Determines if comparison magic methods should be generated, such as `__lt__`, but not `__eq__`."
                    },
                    "unsafe_hash": {
                        "type": "string",
                        "description": "Determines if a `__hash__` method should be included in the class, as in `dataclasses.dataclass`."
                    },
                    "frozen": {
                        "type": "string",
                        "description": "Determines if the generated class should be a 'frozen' `dataclass`, which does not allow its"
                    },
                    "config": {
                        "type": "string",
                        "description": "The Pydantic config to use for the `dataclass`."
                    },
                    "validate_on_init": {
                        "type": "string",
                        "description": "A deprecated parameter included for backwards compatibility; in V2, all Pydantic dataclasses"
                    },
                    "kw_only": {
                        "type": "string",
                        "description": "Determines if `__init__` method parameters must be specified by keyword only. Defaults to `False`."
                    },
                    "slots": {
                        "type": "string",
                        "description": "Determines if the generated class should be a 'slots' `dataclass`, which does not allow the addition of"
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "Raises": {
                        "type": "string"
                    },
                    "AssertionError": {
                        "type": "string",
                        "description": "Raised if `init` is not `False` or `validate_on_init` is `False`."
                    }
                },
                "required": [
                    "_cls",
                    "init",
                    "repr",
                    "eq",
                    "order",
                    "unsafe_hash",
                    "frozen",
                    "config",
                    "validate_on_init",
                    "kw_only",
                    "slots",
                    "Returns",
                    "Raises",
                    "AssertionError"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\dataclasses.py",
            "decorator": [
                "dataclass_transform"
            ]
        },
        {
            "name": "from_name_error",
            "description": "Convert a `NameError` to a `PydanticUndefinedAnnotation` error.\n\n        Args:\n            name_error: `NameError` to be converted.\n\n        Returns:\n            Converted `PydanticUndefinedAnnotation` error.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\errors.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_field",
            "description": "Create a new `FieldInfo` object with the `Field` function.\n\n        Args:\n            default: The default value for the field. Defaults to Undefined.\n            **kwargs: Additional arguments dictionary.\n\n        Raises:\n            TypeError: If 'annotation' is passed as a keyword argument.\n\n        Returns:\n            A new FieldInfo object with the given parameters.\n\n        Example:\n            This is how you can create a field with default value like this:\n\n            ```python\n            import pydantic\n\n            class MyModel(pydantic.BaseModel):\n                foo: int = pydantic.Field(4)\n            ```\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "default": {
                        "type": "string",
                        "description": "The default value for the field. Defaults to Undefined."
                    },
                    "Raises": {
                        "type": "string"
                    },
                    "TypeError": {
                        "type": "string",
                        "description": "If 'annotation' is passed as a keyword argument."
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "Example": {
                        "type": "string"
                    },
                    "foo": {
                        "type": "string",
                        "description": "int = pydantic.Field(4)"
                    }
                },
                "required": [
                    "default",
                    "Raises",
                    "TypeError",
                    "Returns",
                    "Example",
                    "foo"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "from_annotation",
            "description": "Creates a `FieldInfo` instance from a bare annotation.\n\n        This function is used internally to create a `FieldInfo` from a bare annotation like this:\n\n        ```python\n        import pydantic\n\n        class MyModel(pydantic.BaseModel):\n            foo: int  # <-- like this\n        ```\n\n        We also account for the case where the annotation can be an instance of `Annotated` and where\n        one of the (not first) arguments in `Annotated` is an instance of `FieldInfo`, e.g.:\n\n        ```python\n        from typing import Annotated\n\n        import annotated_types\n\n        import pydantic\n\n        class MyModel(pydantic.BaseModel):\n            foo: Annotated[int, annotated_types.Gt(42)]\n            bar: Annotated[int, pydantic.Field(gt=42)]\n        ```\n\n        Args:\n            annotation: An annotation object.\n\n        Returns:\n            An instance of the field metadata.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "annotation": {
                        "type": "string",
                        "description": "An annotation object."
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "annotation",
                    "Returns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "from_annotated_attribute",
            "description": "Create `FieldInfo` from an annotation with a default value.\n\n        This is used in cases like the following:\n\n        ```python\n        from typing import Annotated\n\n        import annotated_types\n\n        import pydantic\n\n        class MyModel(pydantic.BaseModel):\n            foo: int = 4  # <-- like this\n            bar: Annotated[int, annotated_types.Gt(4)] = 4  # <-- or this\n            spam: Annotated[int, pydantic.Field(gt=4)] = 4  # <-- or this\n        ```\n\n        Args:\n            annotation: The type annotation of the field.\n            default: The default value of the field.\n\n        Returns:\n            A field object with the passed values.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "annotation": {
                        "type": "string",
                        "description": "The type annotation of the field."
                    },
                    "default": {
                        "type": "string",
                        "description": "The default value of the field."
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "annotation",
                    "default",
                    "Returns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "merge_field_infos",
            "description": "Merge `FieldInfo` instances keeping only explicitly set attributes.\n\n        Later `FieldInfo` instances override earlier ones.\n\n        Returns:\n            FieldInfo: A merged FieldInfo instance.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_from_dataclass_field",
            "description": "Return a new `FieldInfo` instance from a `dataclasses.Field` instance.\n\n        Args:\n            dc_field: The `dataclasses.Field` instance to convert.\n\n        Returns:\n            The corresponding `FieldInfo` instance.\n\n        Raises:\n            TypeError: If any of the `FieldInfo` kwargs does not match the `dataclass.Field` kwargs.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "dc_field": {
                        "type": "string",
                        "description": "The `dataclasses.Field` instance to convert."
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "Raises": {
                        "type": "string"
                    },
                    "TypeError": {
                        "type": "string",
                        "description": "If any of the `FieldInfo` kwargs does not match the `dataclass.Field` kwargs."
                    }
                },
                "required": [
                    "dc_field",
                    "Returns",
                    "Raises",
                    "TypeError"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_collect_metadata",
            "description": "Collect annotations from kwargs.\n\n        Args:\n            kwargs: Keyword arguments passed to the function.\n\n        Returns:\n            A list of metadata objects - a combination of `annotated_types.BaseMetadata` and\n                `PydanticMetadata`.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "kwargs": {
                        "type": "string",
                        "description": "Keyword arguments passed to the function."
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "kwargs",
                    "Returns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "deprecation_message",
            "description": "The deprecation message to be emitted, or `None` if not set.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "default_factory_takes_validated_data",
            "description": "Whether the provided default factory callable has a validated data parameter.\n\n        Returns `None` if no default factory is set.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "get_default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "get_default",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "Field",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "overload#typehintthereturnvalueas`Any`toavoidtypecheckingregressionswhenusing`...`."
            ]
        },
        {
            "name": "Field",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "overload#`default`argumentset"
            ]
        },
        {
            "name": "Field",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "overload#`default_factory`argumentset"
            ]
        },
        {
            "name": "Field",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "PrivateAttr",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "overload#`default`argumentset"
            ]
        },
        {
            "name": "PrivateAttr",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "overload#`default_factory`argumentset"
            ]
        },
        {
            "name": "PrivateAttr",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "overload#Nodefaultset"
            ]
        },
        {
            "name": "deprecation_message",
            "description": "The deprecation message to be emitted, or `None` if not set.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "computed_field",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "computed_field",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\fields.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "field_serializer",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_serializers.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "field_serializer",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_serializers.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "model_serializer",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_serializers.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "model_serializer",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_serializers.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "model_serializer",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_serializers.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "_from_decorator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_validators.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_from_decorator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_validators.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_from_decorator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_validators.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_from_decorator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_validators.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "field_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_validators.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "field_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_validators.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "field_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_validators.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "model_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_validators.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "model_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_validators.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "model_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\functional_validators.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "from_prioritized_choices",
            "description": "\n        This function should produce a remapping that replaces complex DefsRef with the simpler ones from the\n        prioritized_choices such that applying the name remapping would result in an equivalent JSON schema.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\json_schema.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_config",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\json_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\json_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "tuple_positional_schema",
            "description": "Replaced by `tuple_schema`.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\json_schema.py",
            "decorator": [
                "deprecated",
                "final"
            ]
        },
        {
            "name": "tuple_variable_schema",
            "description": "Replaced by `tuple_schema`.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\json_schema.py",
            "decorator": [
                "deprecated",
                "final"
            ]
        },
        {
            "name": "_name_required_computed_fields",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\json_schema.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "__init__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\json_schema.py",
            "decorator": [
                "overload",
                "deprecated"
            ]
        },
        {
            "name": "__init__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\json_schema.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "model_fields",
            "description": "A mapping of field names to their respective [`FieldInfo`][pydantic.fields.FieldInfo] instances.\n\n        !!! warning\n            Accessing this attribute from a model instance is deprecated, and will not work in Pydantic V3.\n            Instead, you should access this attribute from the model class.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "_utils.deprecated_instance_property",
                "classmethod"
            ]
        },
        {
            "name": "model_computed_fields",
            "description": "A mapping of computed field names to their respective [`ComputedFieldInfo`][pydantic.fields.ComputedFieldInfo] instances.\n\n        !!! warning\n            Accessing this attribute from a model instance is deprecated, and will not work in Pydantic V3.\n            Instead, you should access this attribute from the model class.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "_utils.deprecated_instance_property",
                "classmethod"
            ]
        },
        {
            "name": "model_extra",
            "description": "Get extra fields set during validation.\n\n        Returns:\n            A dictionary of extra fields, or `None` if `config.extra` is not set to `\"allow\"`.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "model_fields_set",
            "description": "Returns the set of fields that have been explicitly set on this model instance.\n\n        Returns:\n            A set of strings representing the fields that have been set,\n                i.e. that were not filled from defaults.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "model_construct",
            "description": "Creates a new instance of the `Model` class with validated data.\n\n        Creates a new model setting `__dict__` and `__pydantic_fields_set__` from trusted or pre-validated data.\n        Default values are respected, but no other validation is performed.\n\n        !!! note\n            `model_construct()` generally respects the `model_config.extra` setting on the provided model.\n            That is, if `model_config.extra == 'allow'`, then all extra passed values are added to the model instance's `__dict__`\n            and `__pydantic_extra__` fields. If `model_config.extra == 'ignore'` (the default), then all extra passed values are ignored.\n            Because no validation is performed with a call to `model_construct()`, having `model_config.extra == 'forbid'` does not result in\n            an error if extra values are passed, but they will be ignored.\n\n        Args:\n            _fields_set: A set of field names that were originally explicitly set during instantiation. If provided,\n                this is directly used for the [`model_fields_set`][pydantic.BaseModel.model_fields_set] attribute.\n                Otherwise, the field names from the `values` argument will be used.\n            values: Trusted or pre-validated data dictionary.\n\n        Returns:\n            A new instance of the `Model` class with validated data.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "model_json_schema",
            "description": "Generates a JSON schema for a model class.\n\n        Args:\n            by_alias: Whether to use attribute aliases or not.\n            ref_template: The reference template.\n            schema_generator: To override the logic used to generate the JSON schema, as a subclass of\n                `GenerateJsonSchema` with your desired modifications\n            mode: The mode in which to generate the schema.\n\n        Returns:\n            The JSON schema for the given model class.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "model_parametrized_name",
            "description": "Compute the class name for parametrizations of generic classes.\n\n        This method can be overridden to achieve a custom naming scheme for generic BaseModels.\n\n        Args:\n            params: Tuple of types of the class. Given a generic class\n                `Model` with 2 type variables and a concrete model `Model[str, int]`,\n                the value `(str, int)` would be passed to `params`.\n\n        Returns:\n            String representing the new class where `params` are passed to `cls` as type variables.\n\n        Raises:\n            TypeError: Raised when trying to generate concrete names for non-generic models.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "model_rebuild",
            "description": "Try to rebuild the pydantic-core schema for the model.\n\n        This may be necessary when one of the annotations is a ForwardRef which could not be resolved during\n        the initial attempt to build the schema, and automatic rebuilding fails.\n\n        Args:\n            force: Whether to force the rebuilding of the model schema, defaults to `False`.\n            raise_errors: Whether to raise errors, defaults to `True`.\n            _parent_namespace_depth: The depth level of the parent namespace, defaults to 2.\n            _types_namespace: The types namespace, defaults to `None`.\n\n        Returns:\n            Returns `None` if the schema is already \"complete\" and rebuilding was not required.\n            If rebuilding _was_ required, returns `True` if rebuilding was successful, otherwise `False`.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "model_validate",
            "description": "Validate a pydantic model instance.\n\n        Args:\n            obj: The object to validate.\n            strict: Whether to enforce types strictly.\n            from_attributes: Whether to extract data from object attributes.\n            context: Additional context to pass to the validator.\n            by_alias: Whether to use the field's alias when validating against the provided input data.\n            by_name: Whether to use the field's name when validating against the provided input data.\n\n        Raises:\n            ValidationError: If the object could not be validated.\n\n        Returns:\n            The validated model instance.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "model_validate_json",
            "description": "!!! abstract \"Usage Documentation\"\n            [JSON Parsing](../concepts/json.md#json-parsing)\n\n        Validate the given JSON data against the Pydantic model.\n\n        Args:\n            json_data: The JSON data to validate.\n            strict: Whether to enforce types strictly.\n            context: Extra variables to pass to the validator.\n            by_alias: Whether to use the field's alias when validating against the provided input data.\n            by_name: Whether to use the field's name when validating against the provided input data.\n\n        Returns:\n            The validated Pydantic model.\n\n        Raises:\n            ValidationError: If `json_data` is not a JSON string or the object could not be validated.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "model_validate_strings",
            "description": "Validate the given object with string data against the Pydantic model.\n\n        Args:\n            obj: The object containing string data to validate.\n            strict: Whether to enforce types strictly.\n            context: Extra variables to pass to the validator.\n            by_alias: Whether to use the field's alias when validating against the provided input data.\n            by_name: Whether to use the field's name when validating against the provided input data.\n\n        Returns:\n            The validated Pydantic model.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_json_schema__",
            "description": "Hook into generating the model's JSON schema.\n\n        Args:\n            core_schema: A `pydantic-core` CoreSchema.\n                You can ignore this argument and call the handler with a new CoreSchema,\n                wrap this CoreSchema (`{'type': 'nullable', 'schema': current_schema}`),\n                or just call the handler with the original schema.\n            handler: Call into Pydantic's internal JSON schema generation.\n                This will raise a `pydantic.errors.PydanticInvalidForJsonSchema` if JSON schema\n                generation fails.\n                Since this gets called by `BaseModel.model_json_schema` you can override the\n                `schema_generator` argument to that function to change JSON schema generation globally\n                for a type.\n\n        Returns:\n            A JSON schema, as a Python object.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__pydantic_init_subclass__",
            "description": "This is intended to behave just like `__init_subclass__`, but is called by `ModelMetaclass`\n        only after the class is actually fully initialized. In particular, attributes like `model_fields` will\n        be present when this is called.\n\n        This is necessary because `__init_subclass__` will always be called by `type.__new__`,\n        and it would require a prohibitively large refactor to the `ModelMetaclass` to ensure that\n        `type.__new__` was called in such a manner that the class would already be sufficiently initialized.\n\n        This will receive the same `kwargs` that would be passed to the standard `__init_subclass__`, namely,\n        any kwargs passed to the class definition that aren't used internally by pydantic.\n\n        Args:\n            **kwargs: Any keyword arguments passed to the class definition that aren't used internally\n                by pydantic.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__fields__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "property",
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "__fields_set__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "property",
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "dict",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "json",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "parse_obj",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod",
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "parse_raw",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod",
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "parse_file",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod",
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "from_orm",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod",
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "construct",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod",
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "copy",
            "description": "Returns a copy of the model.\n\n        !!! warning \"Deprecated\"\n            This method is now deprecated; use `model_copy` instead.\n\n        If you need `include` or `exclude`, use:\n\n        ```python {test=\"skip\" lint=\"skip\"}\n        data = self.model_dump(include=include, exclude=exclude, round_trip=True)\n        data = {**data, **(update or {})}\n        copied = self.model_validate(data)\n        ```\n\n        Args:\n            include: Optional set or mapping specifying which fields to include in the copied model.\n            exclude: Optional set or mapping specifying which fields to exclude in the copied model.\n            update: Optional dictionary of field-value pairs to override field values in the copied model.\n            deep: If True, the values of fields that are Pydantic models will be deep-copied.\n\n        Returns:\n            A copy of the model with included, excluded and updated fields as specified.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "include": {
                        "type": "string",
                        "description": "Optional set or mapping specifying which fields to include in the copied model."
                    },
                    "exclude": {
                        "type": "string",
                        "description": "Optional set or mapping specifying which fields to exclude in the copied model."
                    },
                    "update": {
                        "type": "string",
                        "description": "Optional dictionary of field-value pairs to override field values in the copied model."
                    },
                    "deep": {
                        "type": "string",
                        "description": "If True, the values of fields that are Pydantic models will be deep-copied."
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "include",
                    "exclude",
                    "update",
                    "deep",
                    "Returns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "schema",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod",
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "schema_json",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod",
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod",
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "update_forward_refs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod",
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "_iter",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "_copy_and_set_values",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "_get_value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "classmethod",
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "_calculate_keys",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "typing_extensions.deprecated"
            ]
        },
        {
            "name": "create_model",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "create_model",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\main.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "deserialize",
            "description": "Based on mypy.plugins.dataclasses.DataclassAttribute.deserialize.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\mypy.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "deserialize",
            "description": "Based on mypy.plugins.dataclasses.DataclassAttribute.deserialize.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\mypy.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_has_default",
            "description": "Returns a boolean indicating whether the field defined in `stmt` is a required field.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\mypy.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get_strict",
            "description": "Returns a the `strict` value of a field if defined, otherwise `None`.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\mypy.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get_alias_info",
            "description": "Returns a pair (alias, has_dynamic_alias), extracted from the declaration of the field defined in `stmt`.\n\n        `has_dynamic_alias` is True if and only if an alias is provided, but not as a string literal.\n        If `has_dynamic_alias` is True, `alias` will be None.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\mypy.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "is_field_frozen",
            "description": "Returns whether the field is frozen, extracted from the declaration of the field defined in `stmt`.\n\n        Note that this is only whether the field was declared to be frozen in a `<field_name> = Field(frozen=True)`\n        sense; this does not determine whether the field is frozen because the entire model is frozen; that is\n        handled separately.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\mypy.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "is_dynamic_alias_present",
            "description": "Returns whether any fields on the model have a \"dynamic alias\", i.e., an alias that cannot be\n        determined during static analysis.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\mypy.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "defined_constraints",
            "description": "Fetch a key / value mapping of constraints to values that are not None. Used for core schema updates.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\networks.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "scheme",
            "description": "The scheme part of the URL.\n\n        e.g. `https` in `https://user:pass@host:port/path?query#fragment`\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\networks.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "username",
            "description": "The username part of the URL, or `None`.\n\n        e.g. `user` in `https://user:pass@host:port/path?query#fragment`\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\networks.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "password",
            "description": "The password part of the URL, or `None`.\n\n        e.g. `pass` in `https://user:pass@host:port/path?query#fragment`\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\networks.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "host",
            "description": "The host part of the URL, or `None`.\n\n        If the URL must be punycode encoded, this is the encoded host, e.g if the input URL is `https://\u00a3\u00a3\u00a3.com`,\n        `host` will be `xn--9aaa.com`\n        \"\"\"\n  ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\networks.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "model_construct",
            "description": "Create a new model using the provided root object and update fields set.\n\n        Args:\n            root: The root object of the model.\n            _fields_set: The set of fields to be updated.\n\n        Returns:\n            The new model.\n\n        Raises:\n            NotImplemented: If the model is not a subclass of `RootModel`.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\root_model.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__class_getitem__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_json_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_serialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "validate_file",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "validate_socket",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "validate_directory",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "validate_new",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "__class_getitem__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "Validate the card number and return a `PaymentCardNumber` instance.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "masked",
            "description": "Mask all but the last 4 digits of the card number.\n\n        Returns:\n            A masked card number string.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "validate_digits",
            "description": "Validate that the card number is all digits.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate_luhn_check_digit",
            "description": "Based on: https://en.wikipedia.org/wiki/Luhn_algorithm.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate_brand",
            "description": "Validate length based on BIN for major brands:\n        https://en.wikipedia.org/wiki/Payment_card_number#Issuer_identification_number_(IIN).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "decode",
            "description": "Decode the data using the encoder.\n\n        Args:\n            data: The data to decode.\n\n        Returns:\n            The decoded data.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "encode",
            "description": "Encode the data using the encoder.\n\n        Args:\n            value: The data to encode.\n\n        Returns:\n            The encoded data.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_json_format",
            "description": "Get the JSON format for the encoded data.\n\n        Returns:\n            The JSON format for the encoded data.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "decode",
            "description": "Decode the data from base64 encoded bytes to original bytes data.\n\n        Args:\n            data: The data to decode.\n\n        Returns:\n            The decoded data.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "encode",
            "description": "Encode the data from bytes to a base64 encoded bytes.\n\n        Args:\n            value: The data to encode.\n\n        Returns:\n            The encoded data.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_json_format",
            "description": "Get the JSON format for the encoded data.\n\n        Returns:\n            The JSON format for the encoded data.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "decode",
            "description": "Decode the data from base64 encoded bytes to original bytes data.\n\n        Args:\n            data: The data to decode.\n\n        Returns:\n            The decoded data.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "encode",
            "description": "Encode the data from bytes to a base64 encoded bytes.\n\n        Args:\n            value: The data to encode.\n\n        Returns:\n            The encoded data.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_json_format",
            "description": "Get the JSON format for the encoded data.\n\n        Returns:\n            The JSON format for the encoded data.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_pydantic_core_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__init__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\type_adapter.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__init__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\type_adapter.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "_defer_build",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\type_adapter.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_model_config",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\type_adapter.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "json_schemas",
            "description": "Generate a JSON schema including definitions from multiple type adapters.\n\n        Args:\n            inputs: Inputs to schema generation. The first two items will form the keys of the (first)\n                output mapping; the type adapters will provide the core schemas that get converted into\n                definitions in the output JSON schema.\n            by_alias: Whether to use alias names.\n            title: The title for the schema.\n            description: The description for the schema.\n            ref_template: The format string used for generating $ref strings.\n            schema_generator: The generator class used for creating the schema.\n\n        Returns:\n            A tuple where:\n\n                - The first element is a dictionary whose keys are tuples of JSON schema key type and JSON mode, and\n                    whose values are the JSON schema corresponding to that pair of inputs. (These schemas may have\n                    JsonRef references to definitions that are defined in the second returned element.)\n                - The second element is a JSON schema containing all definitions referenced in the first returned\n                    element, along with the optional title and description keys.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "inputs": {
                        "type": "string",
                        "description": "Inputs to schema generation. The first two items will form the keys of the (first)"
                    },
                    "by_alias": {
                        "type": "string",
                        "description": "Whether to use alias names."
                    },
                    "title": {
                        "type": "string",
                        "description": "The title for the schema."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description for the schema."
                    },
                    "ref_template": {
                        "type": "string",
                        "description": "The format string used for generating $ref strings."
                    },
                    "schema_generator": {
                        "type": "string",
                        "description": "The generator class used for creating the schema."
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "inputs",
                    "by_alias",
                    "title",
                    "description",
                    "ref_template",
                    "schema_generator",
                    "Returns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\type_adapter.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "validate_call",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\validate_call_decorator.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "validate_call",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\validate_call_decorator.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "validator",
            "description": "Decorate methods on the class indicating that they should be used to validate fields.\n\n    Args:\n        __field (str): The first field the validator should be called on; this is separate\n            from `fields` to ensure an error is raised if you don't pass at least one.\n        *fields (str): Additional field(s) the validator should be called on.\n        pre (bool, optional): Whether this validator should be called before the standard\n            validators (else after). Defaults to False.\n        each_item (bool, optional): For complex objects (sets, lists etc.) whether to validate\n            individual elements rather than the whole object. Defaults to False.\n        always (bool, optional): Whether this method and other validators should be called even if\n            the value is missing. Defaults to False.\n        check_fields (bool | None, optional): Whether to check that the fields actually exist on the model.\n            Defaults to None.\n        allow_reuse (bool, optional): Whether to track and raise an error if another validator refers to\n            the decorated function. Defaults to False.\n\n    Returns:\n        Callable: A decorator that can be used to decorate a\n            function to be used as a validator.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "__field": {
                        "type": "string",
                        "description": "The first field the validator should be called on; this is separate"
                    },
                    "pre": {
                        "type": "boolean",
                        "description": "Whether this validator should be called before the standard"
                    },
                    "each_item": {
                        "type": "boolean",
                        "description": "For complex objects (sets, lists etc.) whether to validate"
                    },
                    "always": {
                        "type": "boolean",
                        "description": "Whether this method and other validators should be called even if"
                    },
                    "check_fields": {
                        "type": "string",
                        "description": "Whether to check that the fields actually exist on the model."
                    },
                    "allow_reuse": {
                        "type": "boolean",
                        "description": "Whether to track and raise an error if another validator refers to"
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "Callable": {
                        "type": "string",
                        "description": "A decorator that can be used to decorate a"
                    }
                },
                "required": [
                    "__field",
                    "Returns",
                    "Callable"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\class_validators.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "root_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\class_validators.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "root_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\class_validators.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "root_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\class_validators.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "root_validator",
            "description": "Decorate methods on a model indicating that they should be used to validate (and perhaps\n    modify) data either before or after standard model parsing/validation is performed.\n\n    Args:\n        pre (bool, optional): Whether this validator should be called before the standard\n            validators (else after). Defaults to False.\n        skip_on_failure (bool, optional): Whether to stop validation and return as soon as a\n            failure is encountered. Defaults to False.\n        allow_reuse (bool, optional): Whether to track and raise an error if another validator\n            refers to the decorated function. Defaults to False.\n\n    Returns:\n        Any: A decorator that can be used to decorate a function to be used as a root_validator.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "pre": {
                        "type": "boolean",
                        "description": "Whether this validator should be called before the standard"
                    },
                    "skip_on_failure": {
                        "type": "boolean",
                        "description": "Whether to stop validation and return as soon as a"
                    },
                    "allow_reuse": {
                        "type": "boolean",
                        "description": "Whether to track and raise an error if another validator"
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "Any": {
                        "type": "string",
                        "description": "A decorator that can be used to decorate a function to be used as a root_validator."
                    }
                },
                "required": [
                    "Returns",
                    "Any"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\class_validators.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "_get_value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\copy_internals.py",
            "decorator": [
                "typing.no_type_check"
            ]
        },
        {
            "name": "validate_arguments",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\decorator.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "validate_arguments",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\decorator.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "validate_arguments",
            "description": "Decorator to validate the arguments passed to a function.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\decorator.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "wrapper_function",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\decorator.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "check_args",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\decorator.py",
            "decorator": [
                "field_validator",
                "classmethod"
            ]
        },
        {
            "name": "check_kwargs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\decorator.py",
            "decorator": [
                "field_validator",
                "classmethod"
            ]
        },
        {
            "name": "check_positional_only",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\decorator.py",
            "decorator": [
                "field_validator",
                "classmethod"
            ]
        },
        {
            "name": "check_duplicate_kwargs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\decorator.py",
            "decorator": [
                "field_validator",
                "classmethod"
            ]
        },
        {
            "name": "pydantic_encoder",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\json.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "custom_pydantic_encoder",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\json.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "timedelta_isoformat",
            "description": "ISO 8601 encoding for Python timedelta object.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\json.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "load_str_bytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\parse.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "load_file",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\parse.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "parse_obj_as",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\tools.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "schema_of",
            "description": "Generate a JSON schema (as dict) for the passed model or dynamically generated one.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\tools.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "schema_json_of",
            "description": "Generate a JSON schema (as JSON) for the passed model or dynamically generated one.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\deprecated\\tools.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "tp",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "validate_as",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "validate_as",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "constrain",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "multiple_of",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "multiple_of",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\experimental\\pipeline.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\plugin\\_schema_validator.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "root_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\class_validators.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "root_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\class_validators.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\color.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\color.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__call__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\config.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__call__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\config.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "get_field_info",
            "description": "\n        Get properties of FieldInfo from the `fields` property of the config class.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\config.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "prepare_field",
            "description": "\n        Optional hook to check or modify fields during model creation.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\config.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\dataclasses.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__validate__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\dataclasses.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "dataclass",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\dataclasses.py",
            "decorator": [
                "dataclass_transform",
                "overload"
            ]
        },
        {
            "name": "dataclass",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\dataclasses.py",
            "decorator": [
                "dataclass_transform",
                "overload"
            ]
        },
        {
            "name": "dataclass",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\dataclasses.py",
            "decorator": [
                "dataclass_transform",
                "overload"
            ]
        },
        {
            "name": "dataclass",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\dataclasses.py",
            "decorator": [
                "dataclass_transform",
                "overload"
            ]
        },
        {
            "name": "dataclass",
            "description": "\n    Like the python standard lib dataclasses but with type validation.\n    The result is either a pydantic dataclass that will validate input data\n    or a wrapper that will trigger validation around a stdlib dataclass\n    to avoid modifying it directly\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\dataclasses.py",
            "decorator": [
                "dataclass_transform"
            ]
        },
        {
            "name": "set_validation",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\dataclasses.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "handle_extra_init",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\dataclasses.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "new_post_init",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\dataclasses.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "new_init",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\dataclasses.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "validate_arguments",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\decorator.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "validate_arguments",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\decorator.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "wrapper_function",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\decorator.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "check_args",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\decorator.py",
            "decorator": [
                "validator"
            ]
        },
        {
            "name": "check_kwargs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\decorator.py",
            "decorator": [
                "validator"
            ]
        },
        {
            "name": "check_positional_only",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\decorator.py",
            "decorator": [
                "validator"
            ]
        },
        {
            "name": "check_duplicate_kwargs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\decorator.py",
            "decorator": [
                "validator"
            ]
        },
        {
            "name": "prepare_field",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\env_settings.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "customise_sources",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\env_settings.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "parse_env_var",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\env_settings.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__concrete_name__",
            "description": "Compute class name for child classes.\n\n        :param params: Tuple of types the class . Given a generic class\n            `Model` with 2 type variables and a concrete model `Model[str, int]`,\n            the value `(str, int)` would be passed to `params`.\n        :return: String representing a the new class where `params` are\n            passed to `cls` as type variables.\n\n        This method can be overridden to achieve a custom naming scheme for GenericModels.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\generics.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__parameterized_bases__",
            "description": "\n        Returns unbound bases of cls parameterised to given type variables\n\n        :param typevars_map: Dictionary of type applications for binding subclasses.\n            Given a generic class `Model` with 2 type variables [S, T]\n            and a concrete model `Model[str, int]`,\n            the value `{S: str, T: int}` would be passed to `typevars_map`.\n        :return: an iterator of generic sub classes, parameterised by `typevars_map`\n            and other assigned parameters of `cls`\n\n        e.g.:\n        ```\n        class A(GenericModel, Generic[T]):\n            ...\n\n        class B(A[V], Generic[V]):\n            ...\n\n        assert A[int] in B.__parameterized_bases__({V: int})\n        ```\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\generics.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__new__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "mcs": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "bases": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    }
                },
                "required": [
                    "mcs",
                    "name",
                    "bases",
                    "namespace"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "no_type_check#noqaC901"
            ]
        },
        {
            "name": "__setattr__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "no_type_check"
            ]
        },
        {
            "name": "_enforce_dict_if_root",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "parse_obj",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "parse_raw",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "parse_file",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_orm",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "construct",
            "description": "\n        Creates a new model setting __dict__ and __fields_set__ from trusted or pre-validated data.\n        Default values are respected, but no other validation is performed.\n        Behaves as if `Config.extra = 'allow'` was set since it adds all passed values\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "schema",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "schema_json",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_decompose_class",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod",
                "no_type_check"
            ]
        },
        {
            "name": "__try_update_forward_refs__",
            "description": "\n        Same as update_forward_refs but will not raise exception\n        when forward references are not defined.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "update_forward_refs",
            "description": "\n        Try to update ForwardRefs on fields based on this Model, globalns and localns.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "create_model",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "create_model",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\main.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "get_is_required",
            "description": "\n        Returns a boolean indicating whether the field defined in `stmt` is a required field.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\mypy.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "type_has_implicit_default",
            "description": "\n        Returns True if the passed type will be given an implicit default value.\n\n        In pydantic v1, this is the case for Optional types and Any (with default value None).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\mypy.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get_alias_info",
            "description": "\n        Returns a pair (alias, has_dynamic_alias), extracted from the declaration of the field defined in `stmt`.\n\n        `has_dynamic_alias` is True if and only if an alias is provided, but not as a string literal.\n        If `has_dynamic_alias` is True, `alias` will be None.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\mypy.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "is_dynamic_alias_present",
            "description": "\n        Returns whether any fields on the model have a \"dynamic alias\", i.e., an alias that cannot be\n        determined during static analysis.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\mypy.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "deserialize",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\mypy.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__new__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "no_type_check"
            ]
        },
        {
            "name": "build",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_build_url",
            "description": "\n        Validate hosts and build the AnyUrl object. Split from `validate` so this method\n        can be altered in `MultiHostDsn`.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_match_url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_validate_port",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "validate_parts",
            "description": "\n        A method used to validate parts of a URL.\n        Could be overridden to set default values for parts if missing\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate_host",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_default_parts",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "apply_default_parts",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_default_parts",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_match_url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "validate_parts",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_build_url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_default_parts",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get_default_parts",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get_default_parts",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\networks.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_parsing_type",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\tools.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "_registered",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "_registered",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "\n            Ensure that we only allow bools.\n            ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_pattern",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "set_length_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "frozenset_length_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "list_length_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "unique_items_validator",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "get_secret_value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "abc.abstractmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "masked",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "validate_digits",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate_luhn_check_digit",
            "description": "\n        Based on: https://en.wikipedia.org/wiki/Luhn_algorithm\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate_length_for_brand",
            "description": "\n        Validate length based on BIN for major brands:\n        https://en.wikipedia.org/wiki/Payment_card_number#Issuer_identification_number_(IIN)\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_get_brand",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "validate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__modify_schema__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "__get_validators__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\types.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_registered",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\_hypothesis_plugin.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "_registered",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\_hypothesis_plugin.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "resolve_json",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\_hypothesis_plugin.py",
            "decorator": [
                "resolves"
            ]
        },
        {
            "name": "resolve_conbytes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\_hypothesis_plugin.py",
            "decorator": [
                "resolves"
            ]
        },
        {
            "name": "resolve_condecimal",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\_hypothesis_plugin.py",
            "decorator": [
                "resolves"
            ]
        },
        {
            "name": "resolve_confloat",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\_hypothesis_plugin.py",
            "decorator": [
                "resolves"
            ]
        },
        {
            "name": "resolve_conint",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\_hypothesis_plugin.py",
            "decorator": [
                "resolves"
            ]
        },
        {
            "name": "resolve_condate",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\_hypothesis_plugin.py",
            "decorator": [
                "resolves"
            ]
        },
        {
            "name": "resolve_constr",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\v1\\_hypothesis_plugin.py",
            "decorator": [
                "resolves"
            ]
        },
        {
            "name": "for_model",
            "description": "Build a new `ConfigWrapper` instance for a `BaseModel`.\n\n        The config wrapper built based on (in descending order of priority):\n        - options from `kwargs`\n        - options from the `namespace`\n        - options from the base classes (`bases`)\n\n        Args:\n            bases: A tuple of base classes.\n            namespace: The namespace of the class being created.\n            kwargs: The kwargs passed to the class being created.\n\n        Returns:\n            A `ConfigWrapper` instance for `BaseModel`.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_config.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "tail",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_config.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "push",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_config.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "validated_setattr",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_dataclasses.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "build",
            "description": "Build a new decorator.\n\n        Args:\n            cls_: The class.\n            cls_var_name: The decorated function name.\n            shim: A wrapper function to wrap V1 style function.\n            info: The decorator info.\n\n        Returns:\n            The new decorator instance.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls_": {
                        "type": "string",
                        "description": "The class."
                    },
                    "cls_var_name": {
                        "type": "string",
                        "description": "The decorated function name."
                    },
                    "shim": {
                        "type": "string",
                        "description": "A wrapper function to wrap V1 style function."
                    },
                    "info": {
                        "type": "string",
                        "description": "The decorator info."
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls_",
                    "cls_var_name",
                    "shim",
                    "info",
                    "Returns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_decorators.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "build",
            "description": "We want to collect all DecFunc instances that exist as\n        attributes in the namespace of the class (a BaseModel or dataclass)\n        that called us\n        But we want to collect these in the order of the bases\n        So instead of getting them all from the leaf class (the class that called us),\n        we traverse the bases from root (the oldest ancestor class) to leaf\n        and collect all of the instances as we go, taking care to replace\n        any duplicate ones with the last one we see to mimic how function overriding\n        works with inheritance.\n        If we do replace any functions we put the replacement into the position\n        the replaced function was in; that is, we maintain the order.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_decorators.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_general_metadata_cls",
            "description": "Do it this way to avoid importing `annotated_types` at import time.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_fields.py",
            "decorator": [
                "cache"
            ]
        },
        {
            "name": "_config_wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_generate_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_types_namespace",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_generate_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_arbitrary_types",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_generate_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_get_args_resolving_forward_refs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_generate_schema.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "_get_args_resolving_forward_refs",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_generate_schema.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "_apply_alias_generator_to_field_info",
            "description": "Apply an alias_generator to aliases on a FieldInfo instance if appropriate.\n\n        Args:\n            alias_generator: A callable that takes a string and returns a string, or an AliasGenerator instance.\n            field_info: The FieldInfo instance to which the alias_generator is (maybe) applied.\n            field_name: The name of the field from which to generate the alias.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "alias_generator": {
                        "type": "string",
                        "description": "A callable that takes a string and returns a string, or an AliasGenerator instance."
                    },
                    "field_info": {
                        "type": "string",
                        "description": "The FieldInfo instance to which the alias_generator is (maybe) applied."
                    },
                    "field_name": {
                        "type": "string",
                        "description": "The name of the field from which to generate the alias."
                    }
                },
                "required": [
                    "alias_generator",
                    "field_info",
                    "field_name"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_generate_schema.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_apply_alias_generator_to_computed_field_info",
            "description": "Apply an alias_generator to alias on a ComputedFieldInfo instance if appropriate.\n\n        Args:\n            alias_generator: A callable that takes a string and returns a string, or an AliasGenerator instance.\n            computed_field_info: The ComputedFieldInfo instance to which the alias_generator is (maybe) applied.\n            computed_field_name: The name of the computed field from which to generate the alias.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "alias_generator": {
                        "type": "string",
                        "description": "A callable that takes a string and returns a string, or an AliasGenerator instance."
                    },
                    "computed_field_info": {
                        "type": "string",
                        "description": "The ComputedFieldInfo instance to which the alias_generator is (maybe) applied."
                    },
                    "computed_field_name": {
                        "type": "string",
                        "description": "The name of the computed field from which to generate the alias."
                    }
                },
                "required": [
                    "alias_generator",
                    "computed_field_info",
                    "computed_field_name"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_generate_schema.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_apply_field_title_generator_to_field_info",
            "description": "Apply a field_title_generator on a FieldInfo or ComputedFieldInfo instance if appropriate\n        Args:\n            config_wrapper: The config of the model\n            field_info: The FieldInfo or ComputedField instance to which the title_generator is (maybe) applied.\n            field_name: The name of the field from which to generate the title.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "config_wrapper": {
                        "type": "string",
                        "description": "The config of the model"
                    },
                    "field_info": {
                        "type": "string",
                        "description": "The FieldInfo or ComputedField instance to which the title_generator is (maybe) applied."
                    },
                    "field_name": {
                        "type": "string",
                        "description": "The name of the field from which to generate the title."
                    }
                },
                "required": [
                    "config_wrapper",
                    "field_info",
                    "field_name"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_generate_schema.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "get_schema_or_ref",
            "description": "Get a definition for `tp` if one exists.\n\n        If a definition exists, a tuple of `(ref_string, CoreSchema)` is returned.\n        If no definition exists yet, a tuple of `(ref_string, None)` is returned.\n\n        Note that the returned `CoreSchema` will always be a `DefinitionReferenceSchema`,\n        not the actual definition itself.\n\n        This should be called for any type that can be identified by reference.\n        This includes any recursive types.\n\n        At present the following types can be named/recursive:\n\n        - Pydantic model\n        - Pydantic and stdlib dataclasses\n        - Typed dictionaries\n        - Named tuples\n        - `TypeAliasType` instances\n        - Enums\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_generate_schema.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "push",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_generate_schema.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "push",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_generate_schema.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "generic_recursion_self_type",
            "description": "This contextmanager should be placed around the recursive calls used to build a generic type,\n    and accept as arguments the generic origin type and the type arguments being passed to it.\n\n    If the same origin and arguments are observed twice, it implies that a self-reference placeholder\n    can be used while building the core schema, and will produce a schema_ref that will be valid in the\n    final parent schema.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_generics.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "import_cached_base_model",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_import_utils.py",
            "decorator": [
                "cache"
            ]
        },
        {
            "name": "import_cached_field_info",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_import_utils.py",
            "decorator": [
                "cache"
            ]
        },
        {
            "name": "_get_at_to_constraint_map",
            "description": "Return a mapping of annotated types to constraints.\n\n    Normally, we would define a mapping like this in the module scope, but we can't do that\n    because we don't permit module level imports of `annotated_types`, in an attempt to speed up\n    the import time of `pydantic`. We still only want to have this dictionary defined in one place,\n    so we use this function to cache the result.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_known_annotated_metadata.py",
            "decorator": [
                "lru_cache"
            ]
        },
        {
            "name": "wrapped_model_post_init",
            "description": "We need to both initialize private attributes and call the user-defined model_post_init\n                        method.\n                        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_model_construction.py",
            "decorator": [
                "wraps"
            ]
        },
        {
            "name": "__prepare__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_model_construction.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_collect_bases_data",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_model_construction.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "__fields__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_model_construction.py",
            "decorator": [
                "property",
                "deprecated"
            ]
        },
        {
            "name": "__pydantic_fields_complete__",
            "description": "Whether the fields where successfully collected (i.e. type hints were successfully resolves).\n\n        This is a private attribute, not meant to be used outside Pydantic.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_model_construction.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "default_ignored_types",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_model_construction.py",
            "decorator": [
                "cache"
            ]
        },
        {
            "name": "data",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_namespace_utils.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "types_namespace",
            "description": "The current global and local namespaces to be used for annotations evaluation.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_namespace_utils.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "push",
            "description": "Push a type to the stack.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_namespace_utils.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "field_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_schema_generation_shared.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "eval_type_lenient",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_typing_extra.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "get_type_hints",
            "description": "Taken verbatim from python 3.10.8 unchanged, except:\n        * type annotations of the function definition above.\n        * prefixing `typing.` where appropriate\n        * Use `_make_forward_ref` instead of `typing.ForwardRef` to handle the `is_class` argument.\n\n        https://github.com/python/cpython/blob/aaaf5174241496afca7ce4d4584570190ff972fe/Lib/typing.py#L1773-L1875\n\n        DO NOT CHANGE THIS METHOD UNLESS ABSOLUTELY NECESSARY.\n        ======================================================\n\n        Return type hints for an object.\n\n        This is often the same as obj.__annotations__, but it handles\n        forward references encoded as string literals, adds Optional[t] if a\n        default value equal to None is set and recursively replaces all\n        'Annotated[T, ...]' with 'T' (unless 'include_extras=True').\n\n        The argument may be a module, class, method, or function. The annotations\n        are returned as a dictionary. For classes, annotations include also\n        inherited members.\n\n        TypeError is raised if the argument is not of a type that can contain\n        annotations, and an empty dictionary is returned if no annotations are\n        present.\n\n        BEWARE -- the behavior of globalns and localns is counterintuitive\n        (unless you are familiar with how eval() and exec() work).  The\n        search order is locals first, then globals.\n\n        - If no dict arguments are passed, an attempt is made to use the\n          globals from obj (or the respective module's globals for classes),\n          and these are also used as the locals.  If the object does not appear\n          to have globals, an empty dictionary is used.  For classes, the search\n          order is globals first then locals.\n\n        - If one dict argument is passed, it is used for both globals and\n          locals.\n\n        - If two dict arguments are passed, they specify globals and\n          locals, respectively.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_typing_extra.py",
            "decorator": [
                "typing.no_type_check"
            ]
        },
        {
            "name": "merge",
            "description": "Merge a `base` item with an `override` item.\n\n        Both `base` and `override` are converted to dictionaries if possible.\n        Sets are converted to dictionaries with the sets entries as keys and\n        Ellipsis as values.\n\n        Each key-value pair existing in `base` is merged with `override`,\n        while the rest of the key-value pairs are updated recursively with this function.\n\n        Merging takes place based on the \"union\" of keys if `intersect` is\n        set to `False` (default) and on the intersection of keys if\n        `intersect` is set to `True`.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_utils.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_coerce_items",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_utils.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_coerce_value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_utils.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "is_true",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_utils.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "value",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_utils.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "__get__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_utils.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__get__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_utils.py",
            "decorator": [
                "overload",
                "deprecated"
            ]
        },
        {
            "name": "wrapper_function",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_validate_call.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "wrapper_function",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic\\_internal\\_validate_call.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "include",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "exclude",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "context",
            "description": "Current serialization context.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "by_alias",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "exclude_unset",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "exclude_defaults",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "exclude_none",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "serialize_as_any",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "round_trip",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "field_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "context",
            "description": "Current validation context.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "config",
            "description": "The CoreConfig that applies to this validation.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "mode",
            "description": "The type of input data we are currently validating",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "data",
            "description": "The data being validated for this model.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "field_name",
            "description": "\n        The name of the current field being validated if this validator is\n        attached to a model field.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "field_before_validator_function",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "general_before_validator_function",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "field_after_validator_function",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "general_after_validator_function",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "field_wrap_validator_function",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "general_wrap_validator_function",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "field_plain_validator_function",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "general_plain_validator_function",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_core\\core_schema.py",
            "decorator": [
                "deprecated"
            ]
        },
        {
            "name": "settings_customise_sources",
            "description": "\n        Define the sources and their order for loading the settings values.\n\n        Args:\n            settings_cls: The Settings class.\n            init_settings: The `InitSettingsSource` instance.\n            env_settings: The `EnvSettingsSource` instance.\n            dotenv_settings: The `DotEnvSettingsSource` instance.\n            file_secret_settings: The `SecretsSettingsSource` instance.\n\n        Returns:\n            A tuple containing the sources and their order for loading the settings values.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\main.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_run_cli_cmd",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\main.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "run",
            "description": "\n        Runs a Pydantic `BaseSettings`, `BaseModel`, or `pydantic.dataclasses.dataclass` as a CLI application.\n        Running a model as a CLI application requires the `cli_cmd` method to be defined in the model class.\n\n        Args:\n            model_cls: The model class to run as a CLI application.\n            cli_args: The list of CLI arguments to parse. If `cli_settings_source` is specified, this may\n                also be a namespace or dictionary of pre-parsed CLI arguments. Defaults to `sys.argv[1:]`.\n            cli_settings_source: Override the default CLI settings source with a user defined instance.\n                Defaults to `None`.\n            cli_exit_on_error: Determines whether this function exits on error. If model is subclass of\n                `BaseSettings`, defaults to BaseSettings `cli_exit_on_error` value. Otherwise, defaults to\n                `True`.\n            cli_cmd_method_name: The CLI command method name to run. Defaults to \"cli_cmd\".\n            model_init_data: The model init data.\n\n        Returns:\n            The ran instance of model.\n\n        Raises:\n            SettingsError: If model_cls is not subclass of `BaseModel` or `pydantic.dataclasses.dataclass`.\n            SettingsError: If model_cls does not have a `cli_cmd` entrypoint defined.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "model_cls": {
                        "type": "string",
                        "description": "The model class to run as a CLI application."
                    },
                    "cli_args": {
                        "type": "string",
                        "description": "The list of CLI arguments to parse. If `cli_settings_source` is specified, this may"
                    },
                    "cli_settings_source": {
                        "type": "string",
                        "description": "Override the default CLI settings source with a user defined instance."
                    },
                    "cli_exit_on_error": {
                        "type": "string",
                        "description": "Determines whether this function exits on error. If model is subclass of"
                    },
                    "cli_cmd_method_name": {
                        "type": "string",
                        "description": "The CLI command method name to run. Defaults to \"cli_cmd\"."
                    },
                    "model_init_data": {
                        "type": "string",
                        "description": "The model init data."
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "Raises": {
                        "type": "string"
                    },
                    "SettingsError": {
                        "type": "string",
                        "description": "If model_cls does not have a `cli_cmd` entrypoint defined."
                    }
                },
                "required": [
                    "model_cls",
                    "cli_args",
                    "cli_settings_source",
                    "cli_exit_on_error",
                    "cli_cmd_method_name",
                    "model_init_data",
                    "Returns",
                    "Raises",
                    "SettingsError"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\main.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "run_subcommand",
            "description": "\n        Runs the model subcommand. Running a model subcommand requires the `cli_cmd` method to be defined in\n        the nested model subcommand class.\n\n        Args:\n            model: The model to run the subcommand from.\n            cli_exit_on_error: Determines whether this function exits with error if no subcommand is found.\n                Defaults to model_config `cli_exit_on_error` value if set. Otherwise, defaults to `True`.\n            cli_cmd_method_name: The CLI command method name to run. Defaults to \"cli_cmd\".\n\n        Returns:\n            The ran subcommand model.\n\n        Raises:\n            SystemExit: When no subcommand is found and cli_exit_on_error=`True` (the default).\n            SettingsError: When no subcommand is found and cli_exit_on_error=`False`.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "model": {
                        "type": "string",
                        "description": "The model to run the subcommand from."
                    },
                    "cli_exit_on_error": {
                        "type": "string",
                        "description": "Determines whether this function exits with error if no subcommand is found."
                    },
                    "cli_cmd_method_name": {
                        "type": "string",
                        "description": "The CLI command method name to run. Defaults to \"cli_cmd\"."
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "Raises": {
                        "type": "string"
                    },
                    "SystemExit": {
                        "type": "string",
                        "description": "When no subcommand is found and cli_exit_on_error=`True` (the default)."
                    },
                    "SettingsError": {
                        "type": "string",
                        "description": "When no subcommand is found and cli_exit_on_error=`False`."
                    }
                },
                "required": [
                    "model",
                    "cli_exit_on_error",
                    "cli_cmd_method_name",
                    "Returns",
                    "Raises",
                    "SystemExit",
                    "SettingsError"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\main.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "current_state",
            "description": "\n        The current state of the settings, populated by the previous settings sources.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "settings_sources_data",
            "description": "\n        The state of all previous settings sources.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\base.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "get_field_value",
            "description": "\n        Gets the value, the key for model creation, and a flag to determine whether value is complex.\n\n        This is an abstract method that should be overridden in every settings source classes.\n\n        Args:\n            field: The field.\n            field_name: The field name.\n\n        Returns:\n            A tuple that contains the value, key and a flag to determine whether value is complex.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string",
                        "description": "The field."
                    },
                    "field_name": {
                        "type": "string",
                        "description": "The field name."
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "field",
                    "field_name",
                    "Returns"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\base.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "__call__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\base.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "_read_file",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\base.py",
            "decorator": [
                "abstractmethod"
            ]
        },
        {
            "name": "__call__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\providers\\cli.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__call__",
            "description": "\n        Parse and load the command line arguments list into the CLI settings source.\n\n        Args:\n            args:\n                The command line arguments to parse and load. Defaults to `None`, which means do not parse\n                command line arguments. If set to `True`, defaults to sys.argv[1:]. If set to `False`, does\n                not parse command line arguments.\n\n        Returns:\n            CliSettingsSource: The object instance itself.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "args": {
                        "type": "string"
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "CliSettingsSource": {
                        "type": "string",
                        "description": "The object instance itself."
                    }
                },
                "required": [
                    "args",
                    "Returns",
                    "CliSettingsSource"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\providers\\cli.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "__call__",
            "description": "\n        Loads parsed command line arguments into the CLI settings source.\n\n        Note:\n            The parsed args must be in `argparse.Namespace`, `SimpleNamespace`, or vars dictionary\n            (e.g., vars(argparse.Namespace)) format.\n\n        Args:\n            parsed_args: The parsed args to load.\n\n        Returns:\n            CliSettingsSource: The object instance itself.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parsed_args": {
                        "type": "string",
                        "description": "The parsed args to load."
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "CliSettingsSource": {
                        "type": "string",
                        "description": "The object instance itself."
                    }
                },
                "required": [
                    "parsed_args",
                    "Returns",
                    "CliSettingsSource"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\providers\\cli.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "_load_env_vars",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\providers\\cli.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "_load_env_vars",
            "description": "\n        Loads the parsed command line arguments into the CLI environment settings variables.\n\n        Note:\n            The parsed args must be in `argparse.Namespace`, `SimpleNamespace`, or vars dictionary\n            (e.g., vars(argparse.Namespace)) format.\n\n        Args:\n            parsed_args: The parsed args to load.\n\n        Returns:\n            CliSettingsSource: The object instance itself.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "parsed_args": {
                        "type": "string",
                        "description": "The parsed args to load."
                    },
                    "Returns": {
                        "type": "string"
                    },
                    "CliSettingsSource": {
                        "type": "string",
                        "description": "The object instance itself."
                    }
                },
                "required": [
                    "parsed_args",
                    "Returns",
                    "CliSettingsSource"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\providers\\cli.py",
            "decorator": [
                "overload"
            ]
        },
        {
            "name": "root_parser",
            "description": "The connected root parser instance.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\providers\\cli.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_static_read_env_file",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\providers\\dotenv.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_gcp_project_path",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\providers\\gcp.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_secret_names",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\providers\\gcp.py",
            "decorator": [
                "cached_property"
            ]
        },
        {
            "name": "_pick_pyproject_toml_file",
            "description": "Pick a `pyproject.toml` file path to use.\n\n        Args:\n            provided: Explicit path provided when instantiating this class.\n            depth: Number of directories up the tree to check of a pyproject.toml.\n\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "provided": {
                        "type": "string",
                        "description": "Explicit path provided when instantiating this class."
                    },
                    "depth": {
                        "type": "string",
                        "description": "Number of directories up the tree to check of a pyproject.toml."
                    }
                },
                "required": [
                    "provided",
                    "depth"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\providers\\pyproject.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "find_case_path",
            "description": "\n        Find a file within path's directory matching filename, optionally ignoring case.\n\n        Args:\n            dir_path: Directory path.\n            file_name: File name.\n            case_sensitive: Whether to search for file name case sensitively.\n\n        Returns:\n            Whether file path or `None` if file does not exist in directory.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\pydantic_settings\\sources\\providers\\secrets.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_value",
            "description": "Create an instance of a :class:`Field`, and set the corresponding\n        value - either None or an actual value.  This method will also\n        finalize the Field itself.\n\n        Args:\n            name: the name of the form field.\n            value: the value of the form field - either a bytestring or None.\n\n        Returns:\n            A new instance of a [`Field`][python_multipart.Field].\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\python_multipart\\multipart.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "field_name",
            "description": "This property returns the name of the field.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\python_multipart\\multipart.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "value",
            "description": "This property returns the value of the form field.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\python_multipart\\multipart.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "field_name",
            "description": "The form field associated with this file.  May be None if there isn't\n        one, for example when we have an application/octet-stream upload.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\python_multipart\\multipart.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "file_name",
            "description": "The file name given in the upload request.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\python_multipart\\multipart.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "actual_file_name",
            "description": "The file name that this file is saved as.  Will be None if it's not\n        currently saved on disk.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\python_multipart\\multipart.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "file_object",
            "description": "The file object that we're currently writing to.  Note that this\n        will either be an instance of a :class:`io.BytesIO`, or a regular file\n        object.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\python_multipart\\multipart.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "size",
            "description": "The total size of this file, counted as the number of bytes that\n        currently have been written to the file.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\python_multipart\\multipart.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "in_memory",
            "description": "A boolean representing whether or not this file object is currently\n        stored in-memory or on-disk.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\python_multipart\\multipart.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "unverifiable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\cookies.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "origin_req_host",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\cookies.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "host",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\cookies.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "path_url",
            "description": "Build the path URL to use.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_encode_params",
            "description": "Encode parameters in a piece of data.\n\n        Will successfully encode parameters when passed as a dict or a list of\n        2-tuples. Order is retained if data is a list of 2-tuples but arbitrary\n        if parameters are supplied as a dict.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\models.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_encode_files",
            "description": "Build the body for a multipart/form-data request.\n\n        Will successfully encode files when passed as a dict or a list of\n        tuples. Order is retained if data is a list of tuples but arbitrary\n        if parameters are supplied as a dict.\n        The tuples may be 2-tuples (filename, fileobj), 3-tuples (filename, fileobj, contentype)\n        or 4-tuples (filename, fileobj, contentype, custom_headers).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "files": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                },
                "required": [
                    "files",
                    "data"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\models.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "_get_idna_encoded_host",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "host": {
                        "type": "string"
                    }
                },
                "required": [
                    "host"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\models.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "ok",
            "description": "Returns True if :attr:`status_code` is less than 400, False if not.\n\n        This attribute checks if the status code of the response is between\n        400 and 600 to see if there was a client error or a server error. If\n        the status code is between 200 and 400, this will return True. This\n        is **not** a check to see if the response code is ``200 OK``.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_redirect",
            "description": "True if this Response is a well-formed HTTP redirect that could have\n        been processed automatically (by :meth:`Session.resolve_redirects`).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_permanent_redirect",
            "description": "True if this Response one of the permanent versions of redirect.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "next",
            "description": "Returns a PreparedRequest for the next request in a redirect chain, if there is one.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "apparent_encoding",
            "description": "The apparent encoding, provided by the charset_normalizer or chardet libraries.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "content",
            "description": "Content of the response, in bytes.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "text",
            "description": "Content of the response, in unicode.\n\n        If Response.encoding is None, encoding will be guessed using\n        ``charset_normalizer`` or ``chardet``.\n\n        The encoding of the response content is determined based solely on HTTP\n        headers, following RFC 2616 to the letter. If you can take advantage of\n        non-HTTP knowledge to make a better guess at the encoding, you should\n        set ``r.encoding`` appropriately before accessing this property.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "links",
            "description": "Returns the parsed header links of the response, if any.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\models.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "atomic_open",
            "description": "Write a file to the disk in an atomic fashion",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "filename": {
                        "type": "string"
                    }
                },
                "required": [
                    "filename"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\utils.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "set_environ",
            "description": "Set the environment variable 'env_name' to 'value'\n\n    Save previous value, yield, and then restore the previous value stored in\n    the environment variable 'env_name'.\n\n    If 'value' is None, do nothing",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "env_name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "env_name",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\requests\\utils.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "fromkeys",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "iterable": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "iterable"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\simplejson\\ordered_dict.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "test_make_scanner",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\simplejson\\tests\\test_speedups.py",
            "decorator": [
                "skip_if_speedups_missing"
            ]
        },
        {
            "name": "test_bad_bool_args",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\simplejson\\tests\\test_speedups.py",
            "decorator": [
                "skip_if_speedups_missing"
            ]
        },
        {
            "name": "test_make_encoder",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\simplejson\\tests\\test_speedups.py",
            "decorator": [
                "skip_if_speedups_missing"
            ]
        },
        {
            "name": "test_bad_str_encoder",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\simplejson\\tests\\test_speedups.py",
            "decorator": [
                "skip_if_speedups_missing"
            ]
        },
        {
            "name": "test_bad_bool_args",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\simplejson\\tests\\test_speedups.py",
            "decorator": [
                "skip_if_speedups_missing"
            ]
        },
        {
            "name": "test_int_as_string_bitcount_overflow",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\simplejson\\tests\\test_speedups.py",
            "decorator": [
                "skip_if_speedups_missing"
            ]
        },
        {
            "name": "test_bad_encoding",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\simplejson\\tests\\test_speedups.py",
            "decorator": [
                "skip_if_speedups_missing"
            ]
        },
        {
            "name": "test_curio",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\sniffio\\_tests\\test_sniffio.py",
            "decorator": [
                "pytest.mark.skipif"
            ]
        },
        {
            "name": "handle_exit",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\sse_starlette\\sse.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "ping_interval",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\sse_starlette\\sse.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "ping_interval",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\sse_starlette\\sse.py",
            "decorator": [
                "ping_interval.setter"
            ]
        },
        {
            "name": "_listen_for_exit_signal",
            "description": "Watch for shutdown signals (e.g. SIGINT, SIGTERM) so we can break the event loop.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\sse_starlette\\sse.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "routes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\applications.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "websocket_wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\authentication.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "async_wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\authentication.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "sync_wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\authentication.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "is_authenticated",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\authentication.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "display_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\authentication.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "identity",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\authentication.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_authenticated",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\authentication.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "display_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\authentication.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_authenticated",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\authentication.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "display_name",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\authentication.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "__call__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\config.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "__call__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\config.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "__call__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\config.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "__call__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\config.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "__call__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\config.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "components",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "scheme",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "netloc",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "path",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "query",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "fragment",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "username",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "password",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "hostname",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "port",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_secure",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "content_type",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_in_memory",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "raw",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "raw",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\datastructures.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "app",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "base_url",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "headers",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "query_params",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "path_params",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "cookies",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "client",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "session",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "auth",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "user",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "state",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "method",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "receive",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\requests.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "headers",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\responses.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_parse_range_header",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\responses.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "routes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\routing.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "routes",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\routing.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "wrapper",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\routing.py",
            "decorator": [
                "functools.wraps"
            ]
        },
        {
            "name": "__init__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\templating.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "__init__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\templating.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "url_for",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\templating.py",
            "decorator": [
                "pass_context"
            ]
        },
        {
            "name": "TemplateResponse",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\templating.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "TemplateResponse",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\templating.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "_portal_factory",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\testclient.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "reset_portal",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\testclient.py",
            "decorator": [
                "stack.callback"
            ]
        },
        {
            "name": "wait_shutdown",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\testclient.py",
            "decorator": [
                "stack.callback"
            ]
        },
        {
            "name": "is_async_callable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\_utils.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "is_async_callable",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\_utils.py",
            "decorator": [
                "typing.overload"
            ]
        },
        {
            "name": "collapse_excgroups",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\_utils.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "default_on_error",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\middleware\\authentication.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "allow_explicit_origin",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\starlette\\middleware\\cors.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "allowed_qualifiers",
            "description": "The allowed [type qualifiers][type qualifier] for this annotation source.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\typing_inspection\\introspection.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "host",
            "description": "\n        Getter method to remove any trailing dots that indicate the hostname is an FQDN.\n\n        In general, SSL certificates don't include the trailing dot indicating a\n        fully-qualified domain name, and thus, they don't validate properly when\n        checked against a domain name that includes the dot. In addition, some\n        servers may not expect to receive the trailing dot when provided.\n\n        However, the hostname with trailing dot is critical to DNS resolution; doing a\n        lookup with the trailing dot will properly only resolve the appropriate FQDN,\n        whereas a lookup without a trailing dot will search the system's search domain\n        list. Thus, it's important to keep the original host around for use only in\n        those cases where it's appropriate (i.e., when doing DNS lookup to establish the\n        actual TCP connection across which we're going to send HTTP requests).\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\connection.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "host",
            "description": "\n        Setter for the `host` property.\n\n        We assume that only urllib3 uses the _dns_host attribute; httplib itself\n        only uses `host`, and it seems reasonable that other libraries follow suit.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\connection.py",
            "decorator": [
                "host.setter"
            ]
        },
        {
            "name": "from_tuples",
            "description": "\n        A :class:`~urllib3.fields.RequestField` factory from old-style tuple parameters.\n\n        Supports constructing :class:`~urllib3.fields.RequestField` from\n        parameter of key/value strings AND key/filetuple. A filetuple is a\n        (filename, data, MIME type) tuple where the MIME type is optional.\n        For example::\n\n            'foo': 'bar',\n            'fakefile': ('foofile.txt', 'contents of foofile'),\n            'realfile': ('barfile.txt', open('realfile').read()),\n            'typedfile': ('bazfile.bin', open('bazfile').read(), 'image/jpeg'),\n            'nonamefile': 'contents of nonamefile field',\n\n        Field names and filenames must be unicode.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "fieldname": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "fieldname",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\fields.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "data",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\response.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "connection",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\response.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "_error_catcher",
            "description": "\n        Catch low-level python exceptions, instead re-raising urllib3\n        variants, so that low-level exceptions are not leaked in the\n        high-level api.\n\n        On exit, release the connection back to the pool.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\response.py",
            "decorator": [
                "contextmanager"
            ]
        },
        {
            "name": "from_httplib",
            "description": "\n        Given an :class:`http.client.HTTPResponse` instance ``r``, return a\n        corresponding :class:`urllib3.response.HTTPResponse` object.\n\n        Remaining parameters are passed to the HTTPResponse constructor, along\n        with ``original_response=r``.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "ResponseCls": {
                        "type": "string"
                    },
                    "r": {
                        "type": "string"
                    }
                },
                "required": [
                    "ResponseCls",
                    "r"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\response.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "closed",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\response.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "from_httplib",
            "description": "Read headers from a Python 2 httplib message object.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "message"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\_collections.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "options",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\contrib\\pyopenssl.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "options",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\contrib\\pyopenssl.py",
            "decorator": [
                "options.setter"
            ]
        },
        {
            "name": "verify_mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\contrib\\pyopenssl.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "verify_mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\contrib\\pyopenssl.py",
            "decorator": [
                "verify_mode.setter"
            ]
        },
        {
            "name": "_raise_on_error",
            "description": "\n        A context manager that can be used to wrap calls that do I/O from\n        SecureTransport. If any of the I/O callbacks hit an exception, this\n        context manager will correctly propagate the exception after the fact.\n        This avoids silently swallowing those exceptions.\n\n        It also correctly forces the socket closed.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "check_hostname",
            "description": "\n        SecureTransport cannot have its hostname checking disabled. For more,\n        see the comment on getpeercert() in this file.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "check_hostname",
            "description": "\n        SecureTransport cannot have its hostname checking disabled. For more,\n        see the comment on getpeercert() in this file.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "check_hostname.setter"
            ]
        },
        {
            "name": "options",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "options",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "options.setter"
            ]
        },
        {
            "name": "verify_mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "verify_mode",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\contrib\\securetransport.py",
            "decorator": [
                "verify_mode.setter"
            ]
        },
        {
            "name": "__prepare__",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "this_bases": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "name",
                    "this_bases"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\packages\\six.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "alive",
            "description": "Whether finalizer is alive",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\packages\\backports\\weakref_finalize.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "atexit",
            "description": "Whether finalizer should be called at exit",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\packages\\backports\\weakref_finalize.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "atexit",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\packages\\backports\\weakref_finalize.py",
            "decorator": [
                "atexit.setter"
            ]
        },
        {
            "name": "_select_for_exit",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\packages\\backports\\weakref_finalize.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_exitfunc",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\packages\\backports\\weakref_finalize.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "DEFAULT_METHOD_WHITELIST",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\retry.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "DEFAULT_METHOD_WHITELIST",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\retry.py",
            "decorator": [
                "DEFAULT_METHOD_WHITELIST.setter"
            ]
        },
        {
            "name": "DEFAULT_REDIRECT_HEADERS_BLACKLIST",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\retry.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "DEFAULT_REDIRECT_HEADERS_BLACKLIST",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\retry.py",
            "decorator": [
                "DEFAULT_REDIRECT_HEADERS_BLACKLIST.setter"
            ]
        },
        {
            "name": "BACKOFF_MAX",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\retry.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "BACKOFF_MAX",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\retry.py",
            "decorator": [
                "BACKOFF_MAX.setter"
            ]
        },
        {
            "name": "from_int",
            "description": "Backwards-compatibility for the old retries format.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "retries": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "retries"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\retry.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_validate_ssl_context_for_tls_in_tls",
            "description": "\n        Raises a ProxySchemeUnsupported if the provided ssl_context can't be used\n        for TLS in TLS.\n\n        The only requirement is that the ssl_context provides the 'wrap_bio'\n        methods.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "ssl_context": {
                        "type": "string"
                    }
                },
                "required": [
                    "ssl_context"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\ssltransport.py",
            "decorator": [
                "staticmethod"
            ]
        },
        {
            "name": "resolve_default_timeout",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "timeout": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "timeout"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\timeout.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "_validate_timeout",
            "description": "Check that a timeout attribute is valid.\n\n        :param value: The timeout value to validate\n        :param name: The name of the timeout attribute to validate. This is\n            used to specify in error messages.\n        :return: The validated and casted version of the given value.\n        :raises ValueError: If it is a numeric value less than or equal to\n            zero, or the type is not an integer, float, or None.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "value",
                    "name"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\timeout.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "from_float",
            "description": "Create a new Timeout from a legacy timeout value.\n\n        The timeout value used by httplib.py sets the same timeout on the\n        connect(), and recv() socket requests. This creates a :class:`Timeout`\n        object that sets the individual timeouts to the ``timeout`` value\n        passed to this function.\n\n        :param timeout: The legacy timeout value.\n        :type timeout: integer, float, sentinel default object, or None\n        :return: Timeout object\n        :rtype: :class:`Timeout`\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "cls": {
                        "type": "string"
                    },
                    "timeout": {
                        "type": "string"
                    }
                },
                "required": [
                    "cls",
                    "timeout"
                ]
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\timeout.py",
            "decorator": [
                "classmethod"
            ]
        },
        {
            "name": "connect_timeout",
            "description": "Get the value to use when setting a connection timeout.\n\n        This will be a positive float or integer, the value None\n        (never timeout), or the default system timeout.\n\n        :return: Connect timeout.\n        :rtype: int, float, :attr:`Timeout.DEFAULT_TIMEOUT` or None\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\timeout.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "read_timeout",
            "description": "Get the value for the read timeout.\n\n        This assumes some time has elapsed in the connection timeout and\n        computes the read timeout appropriately.\n\n        If self.total is set, the read timeout is dependent on the amount of\n        time taken by the connect timeout. If the connection time has not been\n        established, a :exc:`~urllib3.exceptions.TimeoutStateError` will be\n        raised.\n\n        :return: Value to use for the read timeout.\n        :rtype: int, float, :attr:`Timeout.DEFAULT_TIMEOUT` or None\n        :raises urllib3.exceptions.TimeoutStateError: If :meth:`start_connect`\n            has not yet been called on this object.\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\timeout.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "hostname",
            "description": "For backwards-compatibility with urlparse. We're nice like that.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\url.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "request_uri",
            "description": "Absolute path including the query string.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\url.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "netloc",
            "description": "Network location including host and port",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\url.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "url",
            "description": "\n        Convert self into a url\n\n        This function should more or less round-trip with :func:`.parse_url`. The\n        returned url may not be exactly the same as the url inputted to\n        :func:`.parse_url`, but it should be equivalent by the RFC (e.g., urls\n        with a blank port will have : removed).\n\n        Example: ::\n\n            >>> U = parse_url('http://google.com/mail/')\n            >>> U.url\n            'http://google.com/mail/'\n            >>> Url('http', 'username:password', 'host.com', 80,\n            ... '/path', 'query', 'fragment').url\n            'http://username:password@host.com:80/path?query#fragment'\n        ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\urllib3\\util\\url.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "asgi_version",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\uvicorn\\config.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "is_ssl",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\uvicorn\\config.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "use_subprocess",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\uvicorn\\config.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "should_reload",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\uvicorn\\config.py",
            "decorator": [
                "property"
            ]
        },
        {
            "name": "main",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\uvicorn\\main.py",
            "decorator": [
                "click.command",
                "click.argument",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option",
                "click.option"
            ]
        },
        {
            "name": "capture_signals",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\uvicorn\\server.py",
            "decorator": [
                "contextlib.contextmanager"
            ]
        },
        {
            "name": "pid",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "env\\lib\\python3.12\\site-packages\\uvicorn\\supervisors\\multiprocess.py",
            "decorator": [
                "property"
            ]
        }
    ]
}