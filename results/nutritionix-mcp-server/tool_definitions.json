{
    "tools": [
        {
            "name": "app_lifespan",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "config.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "get_exercise_calories_burned",
            "description": "Get estimated exercise calories burned from natural language input.\n    It would be good to provide age, gender, weight in kg and height in cm.\n\n    Args:\n        query: Description of exercise (e.g. \"ran 3 miles and biked for 30 minutes\")\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "Description of exercise (e.g. \"ran 3 miles and biked for 30 minutes\")"
                    }
                },
                "required": [
                    "query"
                ]
            },
            "file": "main.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "get_food_nutrition",
            "description": "Get detailed nutritional information from a natural language food query.\n\n    Args:\n        query: A sentence or phrase describing the food (e.g. \"1 egg and 2 slices of toast\")\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "A sentence or phrase describing the food (e.g. \"1 egg and 2 slices of toast\")"
                    }
                },
                "required": [
                    "query"
                ]
            },
            "file": "main.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "search_food",
            "description": "Search for common and branded food items.\n\n    Args:\n        query: The food search string (e.g. 'banana', 'egg', 'yogurt')\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "The food search string (e.g. 'banana', 'egg', 'yogurt')"
                    }
                },
                "required": [
                    "query"
                ]
            },
            "file": "main.py",
            "decorator": [
                "mcp.tool"
            ]
        }
    ]
}