{
    "tools": [
        {
            "name": "on_startup",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp_server\\main.py",
            "decorator": [
                "app.on_event"
            ]
        },
        {
            "name": "root",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp_server\\main.py",
            "decorator": [
                "app.get"
            ]
        },
        {
            "name": "extract_data_endpoint",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp_server\\main.py",
            "decorator": [
                "app.get"
            ]
        },
        {
            "name": "generate_item_script_endpoint",
            "description": "Generates an item script from a given template and parameters.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp_server\\main.py",
            "decorator": [
                "app.post"
            ]
        },
        {
            "name": "generate_recipe_script_endpoint",
            "description": "Generates a recipe script from a given template and parameters.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp_server\\main.py",
            "decorator": [
                "app.post"
            ]
        },
        {
            "name": "search_items_endpoint",
            "description": "\n    Searches for items in the database using FTS5.\n    The query string can use FTS5 syntax (e.g., \"term1 term2\", \"term1 NEAR term2\", \"term*\").\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp_server\\main.py",
            "decorator": [
                "app.get"
            ]
        },
        {
            "name": "list_resources",
            "description": "List available MCP resources.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp_server\\mcp_server.py",
            "decorator": [
                "server.list_resources"
            ]
        },
        {
            "name": "read_resource",
            "description": "Read a specific MCP resource.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp_server\\mcp_server.py",
            "decorator": [
                "server.read_resource"
            ]
        },
        {
            "name": "list_tools",
            "description": "List available MCP tools.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp_server\\mcp_server.py",
            "decorator": [
                "server.list_tools"
            ]
        },
        {
            "name": "call_tool",
            "description": "Handle MCP tool calls.",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp_server\\mcp_server.py",
            "decorator": [
                "server.call_tool"
            ]
        },
        {
            "name": "_compile_create_fts5_table",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "element": {
                        "type": "string"
                    },
                    "compiler": {
                        "type": "string"
                    }
                },
                "required": [
                    "element",
                    "compiler"
                ]
            },
            "file": "mcp_server\\core\\database.py",
            "decorator": [
                "compiles"
            ]
        },
        {
            "name": "script_generator_with_temps",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "tmp_path_factory": {
                        "type": "string"
                    }
                },
                "required": [
                    "tmp_path_factory"
                ]
            },
            "file": "mcp_server\\tests\\test_script_generator.py",
            "decorator": [
                "pytest.fixture"
            ]
        },
        {
            "name": "db_engine_for_search_tests",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp_server\\tests\\test_search_service.py",
            "decorator": [
                "pytest.fixture"
            ]
        },
        {
            "name": "search_service_with_data",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "db_engine_for_search_tests": {
                        "type": "string"
                    }
                },
                "required": [
                    "db_engine_for_search_tests"
                ]
            },
            "file": "mcp_server\\tests\\test_search_service.py",
            "decorator": [
                "pytest.fixture"
            ]
        }
    ]
}