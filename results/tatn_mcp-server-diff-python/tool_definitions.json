{
    "tools": [
        {
            "name": "handle_list_tools",
            "description": "\n    List available tools.\n    Each tool specifies its arguments using JSON Schema validation.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\mcp_server_diff_python\\server.py",
            "decorator": [
                "server.list_tools"
            ]
        },
        {
            "name": "handle_call_tool",
            "description": "\n    Handle tool execution requests.\n    Tools can modify server state and notify clients of changes.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "src\\mcp_server_diff_python\\server.py",
            "decorator": [
                "server.call_tool"
            ]
        },
        {
            "name": "test_handle_list_tools",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "tests\\mcp_server_diff_python\\test_server.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        },
        {
            "name": "test_handle_call_tool",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "tests\\mcp_server_diff_python\\test_server.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        },
        {
            "name": "test_handle_call_tool_missing_arguments",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "tests\\mcp_server_diff_python\\test_server.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        },
        {
            "name": "test_handle_call_tool_unknown_tool",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "tests\\mcp_server_diff_python\\test_server.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        },
        {
            "name": "test_handle_call_tool_missing_string_a",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "tests\\mcp_server_diff_python\\test_server.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        },
        {
            "name": "test_handle_call_tool_missing_string_b",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "tests\\mcp_server_diff_python\\test_server.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        },
        {
            "name": "test_handle_call_tool_empty_strings",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "tests\\mcp_server_diff_python\\test_server.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        },
        {
            "name": "test_handle_call_tool_identical_strings",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "tests\\mcp_server_diff_python\\test_server.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        },
        {
            "name": "test_handle_call_tool_different_strings",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "tests\\mcp_server_diff_python\\test_server.py",
            "decorator": [
                "pytest.mark.asyncio"
            ]
        }
    ]
}