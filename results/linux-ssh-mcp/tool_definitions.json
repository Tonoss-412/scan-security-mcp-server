{
    "tools": [
        {
            "name": "execute_linux_command",
            "description": "\n    Executes a shell command on the specified Linux VM and returns its output.\n    Provide host, username, and either password or private_key_path.\n    Example: `execute_linux_command(\"ls -l\", host=\"192.168.1.100\", username=\"user\", password=\"mypass\")`\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "server.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "read_file_content",
            "description": "\n    Reads the content of a specified file on the Linux VM.\n    Example: `read_file_content(\"/etc/os-release\", host=\"192.168.1.100\", username=\"user\", private_key_path=\"~/.ssh/mykey\")`\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "server.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "get_disk_usage",
            "description": "\n    Retrieves and returns the disk usage information for the Linux VM.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "server.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "list_directory_contents",
            "description": "\n    Lists the contents of a directory on the Linux VM. Defaults to current directory.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "server.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "get_system_info",
            "description": "\n    Retrieves basic system information about the Linux VM (e.g., OS, kernel).\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "server.py",
            "decorator": [
                "mcp.tool"
            ]
        },
        {
            "name": "dynamic_linux_chat_prompt",
            "description": "\n    A prompt for interacting with a specific Linux VM using natural language.\n    You must provide the host, username, and either password or private_key_path.\n    The AI should use the available tools to answer questions about the VM.\n    ",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "server.py",
            "decorator": [
                "mcp.prompt"
            ]
        }
    ]
}