{
    "tools": [
        {
            "name": "lifespan",
            "description": "",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp-client-python\\api\\main.py",
            "decorator": [
                "asynccontextmanager"
            ]
        },
        {
            "name": "process_query",
            "description": "Process a query and return the response",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp-client-python\\api\\main.py",
            "decorator": [
                "app.post"
            ]
        },
        {
            "name": "get_tools",
            "description": "Get the list of available tools",
            "inputSchema": {
                "type": "object",
                "properties": {}
            },
            "file": "mcp-client-python\\api\\main.py",
            "decorator": [
                "app.get"
            ]
        },
        {
            "name": "get_docs",
            "description": "\n  Search the latest docs for a given query and library.\n  Supports langchain, openai, and llama-index.\n\n  Args:\n    query: The query to search for (e.g. \"Chroma DB\")\n    library: The library to search in (e.g. \"langchain\")\n\n  Returns:\n    Text from the docs\n  ",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "The query to search for (e.g. \"Chroma DB\")"
                    },
                    "library": {
                        "type": "string",
                        "description": "The library to search in (e.g. \"langchain\")"
                    },
                    "Returns": {
                        "type": "string"
                    }
                },
                "required": [
                    "query",
                    "library",
                    "Returns"
                ]
            },
            "file": "mcp-server-example\\main.py",
            "decorator": [
                "mcp.tool"
            ]
        }
    ]
}